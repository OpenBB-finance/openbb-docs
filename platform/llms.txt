# OpenBB Docs - platform

## Docs

- [API Keys & Credentials](platform/api_keys): An overview for setting up the OpenBB Platform Python client and Fast API with data provider API keys.
- [Ameribor](platform/data_models/Ameribor): AMERIBOR
- [Analyst Estimates](platform/data_models/AnalystEstimates): Get historical analyst estimates for earnings and revenue
- [Analyst Search](platform/data_models/AnalystSearch): Search for specific analysts and get their forecast track record
- [Available Indicators](platform/data_models/AvailableIndicators): Get the available economic indicators for a provider
- [Available Indices](platform/data_models/AvailableIndices): All indices available from a given provider
- [Balance Of Payments](platform/data_models/BalanceOfPayments): Balance of Payments Reports
- [Balance Sheet](platform/data_models/BalanceSheet): Get the balance sheet for a given company
- [Balance Sheet Growth](platform/data_models/BalanceSheetGrowth): Get the growth of a company's balance sheet items over time
- [Bls Search](platform/data_models/BlsSearch): Search BLS surveys by category and keyword or phrase to identify BLS series IDs
- [Bls Series](platform/data_models/BlsSeries): Get time series data for one, or more, BLS series IDs
- [Bond Indices](platform/data_models/BondIndices): Bond Indices
- [Bond Prices](platform/data_models/BondPrices): Corporate Bond Prices
- [Calendar Dividend](platform/data_models/CalendarDividend): Get historical and upcoming dividend payments
- [Calendar Earnings](platform/data_models/CalendarEarnings): Get historical and upcoming company earnings releases
- [Calendar Events](platform/data_models/CalendarEvents): Get historical and upcoming company events, such as Investor Day, Conference Call, Earnings Release
- [Calendar Ipo](platform/data_models/CalendarIpo): Get historical and upcoming initial public offerings (IPOs)
- [Calendar Splits](platform/data_models/CalendarSplits): Get historical and upcoming stock split operations
- [Cash Flow Statement](platform/data_models/CashFlowStatement): Get the cash flow statement for a given company
- [Cash Flow Statement Growth](platform/data_models/CashFlowStatementGrowth): Get the growth of a company's cash flow statement items over time
- [Central Bank Holdings](platform/data_models/CentralBankHoldings): Get the balance sheet holdings of a central bank
- [Cik Map](platform/data_models/CikMap): Map a ticker symbol to a CIK number
- [Commercial Paper](platform/data_models/CommercialPaper): Commercial Paper
- [Commodity Spot Prices](platform/data_models/CommoditySpotPrices): Commodity Spot Prices
- [Company Filings](platform/data_models/CompanyFilings): Get public company filings
- [Company News](platform/data_models/CompanyNews): Company News
- [Compare Company Facts](platform/data_models/CompareCompanyFacts): Compare reported company facts and fundamental data points
- [Compare Groups](platform/data_models/CompareGroups): Get company data grouped by sector, industry or country and display either performance or valuation metrics
- [Composite Leading Indicator](platform/data_models/CompositeLeadingIndicator): Get the composite leading indicator (CLI)
- [Consumer Price Index](platform/data_models/ConsumerPriceIndex): Get Consumer Price Index (CPI)
- [COT](platform/data_models/COT): Get Commitment of Traders Reports
- [COT Search](platform/data_models/COTSearch): Get the current Commitment of Traders Reports
- [Country Interest Rates](platform/data_models/CountryInterestRates): Get interest rates by country(s) and duration
- [Country Profile](platform/data_models/CountryProfile): Get a profile of country statistics and economic indicators
- [Crypto Historical](platform/data_models/CryptoHistorical): Get historical price data for cryptocurrency pair(s) within a provider
- [Crypto Search](platform/data_models/CryptoSearch): Search available cryptocurrency pairs within a provider
- [Currency Historical](platform/data_models/CurrencyHistorical): Currency Historical Price
- [Currency Pairs](platform/data_models/CurrencyPairs): Currency Search
- [Currency Reference Rates](platform/data_models/CurrencyReferenceRates): Get current, official, currency reference rates
- [Currency Snapshots](platform/data_models/CurrencySnapshots): Snapshots of currency exchange rates from an indirect or direct perspective of a base currency
- [Direction Of Trade](platform/data_models/DirectionOfTrade): Get Direction Of Trade Statistics from the IMF database
- [Discount Window Primary Credit Rate](platform/data_models/DiscountWindowPrimaryCreditRate): Discount Window Primary Credit Rate
- [Discovery Filings](platform/data_models/DiscoveryFilings): Get the URLs to SEC filings reported to EDGAR database, such as 10-K, 10-Q, 8-K, and more
- [Earnings Call Transcript](platform/data_models/EarningsCallTranscript): Get earnings call transcripts for a given company
- [Economic Calendar](platform/data_models/EconomicCalendar): Get the upcoming, or historical, economic calendar of global events
- [Economic Indicators](platform/data_models/EconomicIndicators): Get economic indicators by country and indicator
- [Equity Active](platform/data_models/EquityActive): Get the most actively traded stocks based on volume
- [Equity Aggressive Small Caps](platform/data_models/EquityAggressiveSmallCaps): Get top small cap stocks based on earnings growth
- [Equity FTD](platform/data_models/EquityFTD): Get reported Fail-to-deliver (FTD) data
- [Equity Gainers](platform/data_models/EquityGainers): Get the top price gainers in the stock market
- [Equity Historical](platform/data_models/EquityHistorical): Get historical price data for a given stock
- [Equity Info](platform/data_models/EquityInfo): Get general information about a company
- [Equity Losers](platform/data_models/EquityLosers): Get the top price losers in the stock market
- [Equity NBBO](platform/data_models/EquityNBBO): Get the National Best Bid and Offer for a given stock
- [Equity Ownership](platform/data_models/EquityOwnership): Get data about major holders for a given company over time
- [Equity Peers](platform/data_models/EquityPeers): Get the closest peers for a given company
- [Equity Quote](platform/data_models/EquityQuote): Get the latest quote for a given stock
- [Equity Screener](platform/data_models/EquityScreener): Screen for companies meeting various criteria
- [Equity Search](platform/data_models/EquitySearch): Search for stock symbol, CIK, LEI, or company name
- [Equity Short Interest](platform/data_models/EquityShortInterest): Get reported short volume and days to cover data
- [Equity Undervalued Growth](platform/data_models/EquityUndervaluedGrowth): Get potentially undervalued growth stocks
- [Equity Undervalued Large Caps](platform/data_models/EquityUndervaluedLargeCaps): Get potentially undervalued large cap stocks
- [Equity Valuation Multiples](platform/data_models/EquityValuationMultiples): Get equity valuation multiples for a given company
- [ETF Active](platform/data_models/ETFActive): Get the most active ETFs
- [Etf Countries](platform/data_models/EtfCountries): ETF Country weighting
- [Etf Equity Exposure](platform/data_models/EtfEquityExposure): Get the exposure to ETFs for a specific stock
- [ETF Gainers](platform/data_models/ETFGainers): Get the top ETF gainers
- [Etf Historical](platform/data_models/EtfHistorical): ETF Historical Market Price
- [Etf Holdings](platform/data_models/EtfHoldings): Get the holdings for an individual ETF
- [Etf Holdings Date](platform/data_models/EtfHoldingsDate): Use this function to get the holdings dates, if available
- [Etf Info](platform/data_models/EtfInfo): ETF Information Overview
- [ETF Losers](platform/data_models/ETFLosers): Get the top ETF losers
- [Etf Price Performance](platform/data_models/EtfPricePerformance): Price performance as a return, over different periods
- [Etf Search](platform/data_models/EtfSearch): Search for ETFs
- [Etf Sectors](platform/data_models/EtfSectors): ETF Sector weighting
- [European Central Bank Interest Rates](platform/data_models/EuropeanCentralBankInterestRates): European Central Bank Interest Rates
- [Euro Short Term Rate](platform/data_models/EuroShortTermRate): Euro Short-Term Rate
- [Executive Compensation](platform/data_models/ExecutiveCompensation): Get executive management team compensation for a given company over time
- [Export Destinations](platform/data_models/ExportDestinations): Get top export destinations by country from the UN Comtrade International Trade Statistics Database
- [Federal Funds Rate](platform/data_models/FederalFundsRate): Fed Funds Rate
- [Financial Ratios](platform/data_models/FinancialRatios): Get an extensive set of financial and accounting ratios for a given company over time
- [Fomc Documents](platform/data_models/FomcDocuments): Get FOMC documents by year and document type
- [Form 13FHR](platform/data_models/Form13FHR): Get the form 13F
- [Forward Ebitda Estimates](platform/data_models/ForwardEbitdaEstimates): Get forward EBITDA estimates
- [Forward Eps Estimates](platform/data_models/ForwardEpsEstimates): Get forward EPS estimates
- [Forward Pe Estimates](platform/data_models/ForwardPeEstimates): Get forward PE estimates
- [Forward Sales Estimates](platform/data_models/ForwardSalesEstimates): Get forward sales estimates
- [Fred Regional](platform/data_models/FredRegional): Query the Geo Fred API for regional economic data by series group
- [Fred Release Table](platform/data_models/FredReleaseTable): Get economic release data by ID and/or element from FRED
- [Fred Search](platform/data_models/FredSearch): Search for FRED series or economic releases by ID or string
- [Fred Series](platform/data_models/FredSeries): Get data by series ID from FRED
- [Futures Curve](platform/data_models/FuturesCurve): Futures Term Structure, current or historical
- [Futures Historical](platform/data_models/FuturesHistorical): Historical futures prices
- [Futures Info](platform/data_models/FuturesInfo): Get current trading statistics by futures contract symbol
- [Futures Instruments](platform/data_models/FuturesInstruments): Get reference data for available futures instruments by provider
- [Gdp Forecast](platform/data_models/GdpForecast): Get Forecasted GDP Data
- [Gdp Nominal](platform/data_models/GdpNominal): Get Nominal GDP Data
- [Gdp Real](platform/data_models/GdpReal): Get Real GDP Data
- [Government Trades](platform/data_models/GovernmentTrades): Obtain government transaction data, including data from the Senate and the House of Representatives
- [Growth Tech Equities](platform/data_models/GrowthTechEquities): Get top tech stocks based on revenue and earnings growth
- [High Quality Market Corporate Bond](platform/data_models/HighQualityMarketCorporateBond): High Quality Market Corporate Bond
- [Historical Attributes](platform/data_models/HistoricalAttributes): Get the historical values of a data tag from Intrinio
- [Historical Dividends](platform/data_models/HistoricalDividends): Get historical dividend data for a given company
- [Historical Employees](platform/data_models/HistoricalEmployees): Get historical employee count data for a given company
- [Historical Eps](platform/data_models/HistoricalEps): Get historical earnings per share data for a given company
- [Historical Market Cap](platform/data_models/HistoricalMarketCap): Get the historical market cap of a ticker symbol
- [Historical Splits](platform/data_models/HistoricalSplits): Get historical stock splits for a given company
- [House Price Index](platform/data_models/HousePriceIndex): Get the House Price Index by country from the OECD Short-Term Economics Statistics
- [ICE Bof A](platform/data_models/ICEBofA): ICE BofA US Corporate Bond Indices
- [Immediate Interest Rate](platform/data_models/ImmediateInterestRate): Get immediate interest rates by country
- [Income Statement](platform/data_models/IncomeStatement): Get the income statement for a given company
- [Income Statement Growth](platform/data_models/IncomeStatementGrowth): Get the growth of a company's income statement items over time
- [Data Models](platform/data_models/index): <ReferenceCard
- [Index Constituents](platform/data_models/IndexConstituents): Get Index Constituents
- [Index Historical](platform/data_models/IndexHistorical): Historical Index Levels
- [Index Search](platform/data_models/IndexSearch): Filter indices for rows containing the query
- [Index Sectors](platform/data_models/IndexSectors): Get Index Sectors
- [Index Snapshots](platform/data_models/IndexSnapshots): Index Snapshots
- [Insider Trading](platform/data_models/InsiderTrading): Get data about trading by a company's management team and board of directors
- [Institutional Ownership](platform/data_models/InstitutionalOwnership): Get data about institutional ownership for a given company over time
- [Institutions Search](platform/data_models/InstitutionsSearch): Search SEC-regulated institutions by name and return a list of results with CIK numbers
- [IORB](platform/data_models/IORB): Interest on Reserve Balances
- [Key Executives](platform/data_models/KeyExecutives): Get executive management team data for a given company
- [Key Metrics](platform/data_models/KeyMetrics): Get fundamental metrics for a given company
- [Latest Attributes](platform/data_models/LatestAttributes): Get the latest value of a data tag from Intrinio
- [Latest Financial Reports](platform/data_models/LatestFinancialReports): Get the newest quarterly, annual, and current reports for all companies
- [LTIR](platform/data_models/LTIR): Get Long-term interest rates that refer to government bonds maturing in ten years
- [Management Discussion Analysis](platform/data_models/ManagementDiscussionAnalysis): Get the Management Discussion & Analysis section from the financial statements for a given company
- [Manufacturing Outlook NY](platform/data_models/ManufacturingOutlookNY): Get the Empire State Manufacturing Survey
- [Manufacturing Outlook Texas](platform/data_models/ManufacturingOutlookTexas): Get The Manufacturing Outlook Survey For The Texas Region
- [Market Snapshots](platform/data_models/MarketSnapshots): Get an updated equity market snapshot
- [Money Measures](platform/data_models/MoneyMeasures): Get Money Measures (M1/M2 and components)
- [Moody Corporate Bond Index](platform/data_models/MoodyCorporateBondIndex): Moody Corporate Bond Index
- [Mortgage Indices](platform/data_models/MortgageIndices): Mortgage Indices
- [Non Farm Payrolls](platform/data_models/NonFarmPayrolls): Get Nonfarm Payrolls Survey
- [Options Chains](platform/data_models/OptionsChains): Get the complete options chain for a ticker
- [Options Snapshots](platform/data_models/OptionsSnapshots): Get a snapshot of the options market universe
- [Options Unusual](platform/data_models/OptionsUnusual): Get the complete options chain for a ticker
- [OTC Aggregate](platform/data_models/OTCAggregate): Get the weekly aggregate trade data for Over The Counter deals
- [Overnight Bank Funding Rate](platform/data_models/OvernightBankFundingRate): Overnight Bank Funding
- [Personal Consumption Expenditures](platform/data_models/PersonalConsumptionExpenditures): Get Personal Consumption Expenditures (PCE) reports
- [Petroleum Status Report](platform/data_models/PetroleumStatusReport): EIA Weekly Petroleum Status Report
- [Port Volume](platform/data_models/PortVolume): Get average dwelling times and TEU volumes from the top ports
- [Price Performance](platform/data_models/PricePerformance): Get price performance data for a given stock
- [Price Target](platform/data_models/PriceTarget): Get analyst price targets by company
- [Price Target Consensus](platform/data_models/PriceTargetConsensus): Get consensus price target and recommendation
- [Primary Dealer Fails](platform/data_models/PrimaryDealerFails): Primary Dealer Statistics for Fails to Deliver and Fails to Receive
- [Primary Dealer Positioning](platform/data_models/PrimaryDealerPositioning): Get Primary dealer positioning statistics
- [Projections](platform/data_models/PROJECTIONS): Fed Funds Rate Projections
- [Reported Financials](platform/data_models/ReportedFinancials): Get financial statements as reported by the company
- [Retail Prices](platform/data_models/RetailPrices): Get retail prices for common items
- [Revenue Business Line](platform/data_models/RevenueBusinessLine): Get the revenue breakdown by business segment for a given company over time
- [Revenue Geographic](platform/data_models/RevenueGeographic): Get the geographic breakdown of revenue for a given company over time
- [Risk Premium](platform/data_models/RiskPremium): Get Market Risk Premium by country
- [Rss Litigation](platform/data_models/RssLitigation): Get the RSS feed that provides links to litigation releases concerning civil lawsuits brought by the Commission in federal court
- [Schema Files](platform/data_models/SchemaFiles): Use tool for navigating the directory of SEC XML schema files by year
- [Search Attributes](platform/data_models/SearchAttributes): Search Intrinio data tags to search in latest or historical attributes
- [Sec Filing](platform/data_models/SecFiling): Download the index headers, and cover page if available, for any SEC filing
- [Sec Htm File](platform/data_models/SecHtmFile): Download a raw HTML object from the SEC website
- [Selected Treasury Bill](platform/data_models/SelectedTreasuryBill): Select Treasury Bill
- [Selected Treasury Constant Maturity](platform/data_models/SelectedTreasuryConstantMaturity): Select Treasury Constant Maturity
- [Senior Loan Officer Survey](platform/data_models/SeniorLoanOfficerSurvey): Get Senior Loan Officers Opinion Survey
- [Share Price Index](platform/data_models/SharePriceIndex): Get the Share Price Index by country from the OECD Short-Term Economics Statistics
- [Share Statistics](platform/data_models/ShareStatistics): Get data about share float for a given company
- [Short Term Energy Outlook](platform/data_models/ShortTermEnergyOutlook): Monthly short term (18 month) projections using EIA's STEO model
- [Short Volume](platform/data_models/ShortVolume): Get reported Fail-to-deliver (FTD) data
- [Sic Search](platform/data_models/SicSearch): Search for Industry Titles, Reporting Office, and SIC Codes
- [SOFR](platform/data_models/SOFR): Secured Overnight Financing Rate
- [Sonia](platform/data_models/SONIA): Sterling Overnight Index Average
- [SP500 Multiples](platform/data_models/SP500Multiples): Get historical S&P 500 multiples and Shiller PE ratios
- [Spot Rate](platform/data_models/SpotRate): Spot Rates
- [STIR](platform/data_models/STIR): Get Short-term interest rates
- [Survey Of Economic Conditions Chicago](platform/data_models/SurveyOfEconomicConditionsChicago): Get The Survey Of Economic Conditions For The Chicago Region
- [Symbol Map](platform/data_models/SymbolMap): Map a CIK number to a ticker symbol, leading 0s can be omitted or included
- [Tips Yields](platform/data_models/TipsYields): Get current Treasury inflation-protected securities yields
- [Top Retail](platform/data_models/TopRetail): Track over $30B USD/day of individual investors trades
- [Trailing Dividend Yield](platform/data_models/TrailingDividendYield): Get the 1 year trailing dividend yield for a given company over time
- [Treasury Auctions](platform/data_models/TreasuryAuctions): Government Treasury Auctions
- [Treasury Constant Maturity](platform/data_models/TreasuryConstantMaturity): Treasury Constant Maturity
- [Treasury Prices](platform/data_models/TreasuryPrices): Government Treasury Prices by date
- [Treasury Rates](platform/data_models/TreasuryRates): Government Treasury Rates
- [Unemployment](platform/data_models/Unemployment): Get global unemployment data
- [University Of Michigan](platform/data_models/UniversityOfMichigan): Get University of Michigan Consumer Sentiment and Inflation Expectations Surveys
- [World News](platform/data_models/WorldNews): World News
- [Yield Curve](platform/data_models/YieldCurve): Get yield curve data by country and date
- [Architecture Overview](platform/developer_guide/architecture_overview): This guide provides insights into the architecture and components of the OpenBB Platform. It covers the key classes, import statements, and the TET pattern used in building the Fetcher classes.
- [Command Coverage](platform/developer_guide/command_coverage): This page details the instructions for determining the command coverage provided by the installed extensions.
- [Adding Example Syntax](platform/developer_guide/command_examples): This guide provides detailed instructions for including command examples in the router endpoints of the OpenBB Platform.
- [Contributing](platform/developer_guide/contributing): This guide outlines the expectations for contributors to the OpenBB Platform. It covers aspects such as use cases, documentation, code quality, testing, performance, and collaboration. Whether you're enhancing functionality, building extensions, or contributing code.
- [Dependency Management](platform/developer_guide/dependency_management): Dealing with dependencies when developing with the OpenBB Platform. Learn how to add new dependencies to the OpenBB Platform and how to add new dependencies to your custom extension.
- [Deprecating Endpoints](platform/developer_guide/deprecating_endpoints): This guide provides detailed instructions on how to deprecate an endpoint in the OpenBB Platform.
- [Disabling Output Validation](platform/developer_guide/disabling_output_validation): This page provides instructions for disabling output validation, when defining a new router function.
- [Documentation - Development](platform/developer_guide/documentation_development): Building the OpenBB Platform documentation and packages.
- [GitHub](platform/developer_guide/github): This page outlines working with GitHub, including branch naming conventions and information related to creating a pull request.
- [HTTP Requests](platform/developer_guide/http_requests): This guide outlines OpenBB processes for making HTTP requests synchronously and asynchronously. Using the helpers will keep the codebase leaner and easier to maintain by eliminating duplicate processes. Anyone can build effective and efficient data fetchers, this guide outlines how to import and implement either type of request into any fetcher.
- [Developer Guide](platform/developer_guide/index): The OpenBB Platform supplies core architecture and services for connecting data providers and extensions, consumable through the Python client or the Fast API
- [Metadata](platform/developer_guide/metadata): This guide provides instructions for returning metadata from the provider interface that gets included in the `extra` attribute of the OBBject response.
- [Standardization](platform/developer_guide/standardization): Learn about the OpenBB Platform, an open-source solution built by the community. Understand its use via Python interface and REST API, and acquaint yourself with how to build a custom extension or contribute directly to the platform
- [Tests](platform/developer_guide/tests): This section provides an in-depth look at the Quality Assurance (QA) process in the OpenBB Platform. It covers the use of QA tools for testing extensions, creation of unit and integration tests, and the importance of maintaining a short import time for the package.
- [Using OpenBB With FastAPI and Depends](platform/developer_guide/using_python_package_in_fastapi): This page demonstrates how to efficiently import the OpenBB Python package into a FastAPI application, for use in any endpoint.
- [Validators](platform/developer_guide/validators): This guide provides detailed instructions on how and where validators should be used.
- [Data and Data Providers](platform/faqs/data_providers): This page contains some frequently asked questions about OpenBB data and providers.
- [Errors](platform/faqs/errors): This page contains some frequently asked questions about OpenBB Platform errors.
- [FAQs](platform/faqs/index): Endpoints that are displayed in this documentation are not found when I try to use them.
- [Platform vs SDK](platform/faqs/platform_vs_sdk): The OpenBB SDK has evolved to become the OpenBB Platform. This page describes some of the key differences between the legacy version and the new architecture.
- [REST API Requests](platform/getting_started/api_requests): How to send requests to the OpenBB Platform REST API.
- [Create New Provider Extension](platform/getting_started/create_new_provider_extension): This page will walk through creating a new OpenBB provider extension from scratch. By the end, you will have the shell structure for holding models that connect to a router through the provider interface.
- [Create New Router Extension](platform/getting_started/create_new_router_extension): This page will walk through creating a new OpenBB Router Extension from scratch. By the end, you will have the code structure for a new router path and an api endpoint.
- [Economic Indicators](platform/getting_started/economic_indicators): This page provides a tutorial for getting started using the `obb.economy.indicators` endpoint, with the `openbb-econdb` provider extension. The command provides access to over 100 standardized indicator symbols, covering countries around the world.
- [Introduction to Financial Statements](platform/getting_started/financial_statements): This page provides an introduction to financial statement data available in the OpenBB Platform. This includes quarterly and annual reports, along with metrics and ratios by company. This guide provides examples for using the variety of sources.
- [Finding Ticker Symbols](platform/getting_started/find_symbols): This page provides comprehensive information about finding stocks in the with the OpenBB Platform. Search companies from different sources, and filter results. This guide is intended to introduce some methods for searching, screening, and discovery.
- [Loading Historical Price Data](platform/getting_started/historical_prices): This page provides an introduction to historical prices, including how to access and use them in the OpenBB Platform.
- [Getting started](platform/getting_started/index): The pages in this section outline different processes for building with the OpenBB Platform. Guides cover adding data, toolkit and OBBject extensions.
- [Fetch Data From a New Provider](platform/getting_started/map_a_provider_to_a_route): This page demonstrates how to get started mapping Provider extension models to the Provider Interface and Router. By the end, you will have mapped a new Provider extension to World News standard model.
- [Market Calendars](platform/getting_started/market_calendars): This page provides details on the market calendars available in the OpenBB Platform. Equity and economic calendars keep investors abreast of market activity and events. This guide provides examples for using the variety of calendars, and differences between sources.
- [Quickstart](platform/getting_started/quickstart-python): Get started with the OpenBB Platform by following this quickstart guide for the Python interface.
- [Quickstart - Workspace Custom Backend](platform/getting_started/quickstart-workspace): Get started using the OpenBB Platform as a custom Workspace backend.
- [Introduction](platform/index): Introduction to OpenBB Platform; a convenient and powerful tool that provides pre-built data connectors and libraries to design and build financial reports and applications. Learn more about contributing to the platform.
- [Installation](platform/installation): This page presents the general system requirements, supported environments, installation procedures, and setup for running the OpenBB Platform. It discusses the prerequisites including Python version, operating system requirements, Docker usage, and the process of building the platform from source.
- [OpenBB Platform Licensing FAQ](platform/licensing/index): As we adopt the Affero General Public License (AGPL) for our OpenBB Platform, we understand you may have questions about how this change affects your use of the platform. Below are some frequently asked questions to help clarify the implications of our new licensing model.
- [Commodity](platform/reference/commodity/index): Menus
- [petroleum_status_report](platform/reference/commodity/petroleum_status_report): EIA Weekly Petroleum Status Report
- [Price](platform/reference/commodity/price/index): Commands
- [spot](platform/reference/commodity/price/spot): Commodity Spot Prices
- [short_term_energy_outlook](platform/reference/commodity/short_term_energy_outlook): Monthly short term (18 month) projections using EIA's STEO model
- [Crypto](platform/reference/crypto/index): Menus
- [historical](platform/reference/crypto/price/historical): Learn how to use the `obb.equity.price.historical` function to load historical  price data for a specific stock ticker. Find out about the available parameters  and providers, as well as the structure of the returned data and the columns it  contains.
- [Price](platform/reference/crypto/price/index): Commands
- [search](platform/reference/crypto/search): The documentation page provides information on how to perform a cryptocurrency  search, including the search query and provider parameters, as well as the resulting  crypto search data such as symbol, name, currency, and exchange information.
- [Currency](platform/reference/currency/index): Menus
- [historical](platform/reference/currency/price/historical): Learn how to use the `obb.equity.price.historical` function to load historical  price data for a specific stock ticker. Find out about the available parameters  and providers, as well as the structure of the returned data and the columns it  contains.
- [Price](platform/reference/currency/price/index): Commands
- [reference_rates](platform/reference/currency/reference_rates): Current, official, currency reference rates
- [search](platform/reference/currency/search): Learn how to search for available currency pairs using the `obb.currency.search`  function, and retrieve a list of results, including provider name, warnings, chart,  and metadata. Explore the various parameters such as provider, symbol, date, search  terms, active tickers, order data, sort field, and limit. Dive into the details  of the returned data, including name, symbol, currency, stock exchange, exchange  short name, code, base currency, quote currency, market, locale, currency symbol,  currency name, base currency symbol, base currency name, last updated timestamp  in UTC, and delisted timestamp in UTC.
- [snapshots](platform/reference/currency/snapshots): Snapshots of currency exchange rates from an indirect or direct perspective of a base currency
- [curve](platform/reference/derivatives/futures/curve): Learn about fetching historical futures price data using Python and an  API. Understand the available parameters, such as symbol, date, and provider. Explore  the returned results, including FuturesCurve, warnings, chart, and metadata. Analyze  the data, including expiration, close price, and trading symbol.
- [historical](platform/reference/derivatives/futures/historical): Futures Historical Price
- [Futures](platform/reference/derivatives/futures/index): Commands
- [info](platform/reference/derivatives/futures/info): Get current trading statistics by futures contract symbol
- [instruments](platform/reference/derivatives/futures/instruments): Get reference data for available futures instruments by provider
- [Derivatives](platform/reference/derivatives/index): Menus
- [chains](platform/reference/derivatives/options/chains): Learn how to get the complete options chain for a ticker using the OBB.equity.options.chains  function. Explore the available parameters like symbol and provider, and understand  the data returned, including contract symbol, expiration, strike price, and more.
- [Options](platform/reference/derivatives/options/index): Commands
- [snapshots](platform/reference/derivatives/options/snapshots): Get a snapshot of the options market universe
- [unusual](platform/reference/derivatives/options/unusual): Learn how to get the complete options chain for a ticker with the equity  options unusual API. Explore the available parameters such as symbol and provider.  Retrieve valuable data like the underlying symbol, contract symbol, trade type,  sentiment, total value, total size, average price, ask/bid prices at execution,  underlying price at execution, and timestamp.
- [autocorrelation](platform/reference/econometrics/autocorrelation): Learn how to perform the Durbin-Watson test for autocorrelation in Python.  Understand the parameters and return value of the function, and how to use exogenous  variables in the analysis. This documentation provides a detailed explanation.
- [causality](platform/reference/econometrics/causality): Learn how to perform a Granger causality test to determine if X causes  y. Understand the parameters and the results returned by the test.
- [cointegration](platform/reference/econometrics/cointegration): Learn how to use the two-step Engle-Granger test to show co-integration  between two time series in Python. Explore the parameters, input dataset, data columns,  and the OBBject returned with the test results.
- [correlation_matrix](platform/reference/econometrics/correlation_matrix): Learn how to get the correlation matrix of an input dataset using Python.  Find information on the parameters and return value of the function.
- [Econometrics](platform/reference/econometrics/index): Commands
- [ols_regression](platform/reference/econometrics/ols_regression): Learn how to perform OLS regression using statsmodels in Python. This  documentation explains the parameters required and the object returned.
- [ols_regression_summary](platform/reference/econometrics/ols_regression_summary): Learn how to perform OLS regression using statsmodels in Python. Explore  the parameters and returns of the function, including the data, target column, exogenous  variables, and summary object.
- [panel_between](platform/reference/econometrics/panel_between): Perform a Between estimator regression on panel data. This page provides  details on the parameters required and the returned OBBject with the fit model.
- [panel_first_difference](platform/reference/econometrics/panel_first_difference): Learn how to perform a first-difference estimate for panel data using  this Python function. Understand the parameters and the object returned by the function.
- [panel_fixed](platform/reference/econometrics/panel_fixed): Learn about the one- and two-way fixed effects estimator for panel data  analysis. Explore the parameters and returns of this function for panel data regression  and modeling.
- [panel_fmac](platform/reference/econometrics/panel_fmac): Learn how to use the Fama-MacBeth estimator for panel data analysis in  Python. Understand the parameters required and how to specify the input dataset  and target column. Explore how this function can help you analyze panel data by  incorporating exogenous variables.
- [panel_pooled](platform/reference/econometrics/panel_pooled): Learn how to perform a pooled coefficient estimator regression on panel  data in Python. Understand the parameters and return value of the function.
- [panel_random_effects](platform/reference/econometrics/panel_random_effects): Learn how to perform One-way Random Effects model for panel data using  a Python function. This function takes an input dataset, target column, and exogenous  variables as parameters and returns the fit model.
- [residual_autocorrelation](platform/reference/econometrics/residual_autocorrelation): Perform Breusch-Godfrey Lagrange Multiplier tests for residual autocorrelation  in a Python function. Learn about the parameters used and the returned object.
- [unit_root](platform/reference/econometrics/unit_root): Learn how to use the Augmented Dickey-Fuller unit root test to check  for stationarity in time series data. This function takes in an input dataset and  performs the test on specified data columns. The regression type can be customized,  and the function returns the results.
- [variance_inflation_factor](platform/reference/econometrics/variance_inflation_factor): Calculate VIF (variance inflation factor), which tests for collinearity
- [available_indicators](platform/reference/economy/available_indicators): Get the available economic indicators for a provider
- [balance_of_payments](platform/reference/economy/balance_of_payments): Balance of Payments Reports
- [calendar](platform/reference/economy/calendar): The Economic Calendar provides information on economic events and data.  Use the OBB Python function `obb.economy.calendar()` to retrieve economic calendar  data. The function accepts parameters such as start date, end date, provider, country,  importance, and group. It returns a list of economic calendar data, including the  date, event, reference, source, actual value, previous value, consensus value, and  forecast value. The data can be filtered by provider such as FMP, Nasdaq, or Trading  Economics.
- [central_bank_holdings](platform/reference/economy/central_bank_holdings): Get the balance sheet holdings of a central bank
- [composite_leading_indicator](platform/reference/economy/composite_leading_indicator): Get the composite leading indicator (CLI)
- [country_profile](platform/reference/economy/country_profile): Get a profile of country statistics and economic indicators
- [cpi](platform/reference/economy/cpi): Get Consumer Price Index (CPI) data for various countries and calculate  inflation measurements. This economic indicator provides insights into the growth  rate of prices on a monthly, quarterly, and annual basis. Harmonized CPI data is  also available. Specify the start and end dates for the desired data range. The  data provider and metadata information are included in the results.
- [direction_of_trade](platform/reference/economy/direction_of_trade): Get Direction Of Trade Statistics from the IMF database
- [export_destinations](platform/reference/economy/export_destinations): Get top export destinations by country from the UN Comtrade International Trade Statistics Database
- [fomc_documents](platform/reference/economy/fomc_documents): Get FOMC documents by year and document type
- [fred_regional](platform/reference/economy/fred_regional): Query the Geo Fred API for regional economic data by series group
- [fred_release_table](platform/reference/economy/fred_release_table): Get economic release data by ID and/or element from FRED
- [fred_search](platform/reference/economy/fred_search): Search for FRED series or economic releases by ID or string
- [fred_series](platform/reference/economy/fred_series): Get data by series ID from FRED
- [forecast](platform/reference/economy/gdp/forecast): Forecasted GDP Data
- [Gdp](platform/reference/economy/gdp/index): Commands
- [nominal](platform/reference/economy/gdp/nominal): Nominal GDP Data
- [real](platform/reference/economy/gdp/real): Learn about Real GDP Data and how to access it using the provided parameters.  Find detailed descriptions of the available parameters and the data returned. Understand  the structure of the returns and explore the data attributes.
- [house_price_index](platform/reference/economy/house_price_index): Get the House Price Index by country from the OECD Short-Term Economics Statistics
- [immediate_interest_rate](platform/reference/economy/immediate_interest_rate): Get immediate interest rates by country
- [Economy](platform/reference/economy/index): Menus
- [indicators](platform/reference/economy/indicators): Get economic indicators by country and indicator
- [interest_rates](platform/reference/economy/interest_rates): Get interest rates by country(s) and duration
- [long_term_interest_rate](platform/reference/economy/long_term_interest_rate): Get Long-term interest rates that refer to government bonds maturing in ten years
- [money_measures](platform/reference/economy/money_measures): Get Money Measures (M1/M2 and components)
- [pce](platform/reference/economy/pce): Get Personal Consumption Expenditures (PCE) reports
- [port_volume](platform/reference/economy/port_volume): Get average dwelling times and TEU volumes from the top ports
- [primary_dealer_fails](platform/reference/economy/primary_dealer_fails): Primary Dealer Statistics for Fails to Deliver and Fails to Receive
- [primary_dealer_positioning](platform/reference/economy/primary_dealer_positioning): Get Primary dealer positioning statistics
- [retail_prices](platform/reference/economy/retail_prices): Get retail prices for common items
- [risk_premium](platform/reference/economy/risk_premium): Learn about Historical Market Risk Premium and the obb.economy.risk_premium  function. Explore the parameters, returns, and data available, including results,  warnings, chart, metadata, country, continent, total equity risk premium, and country  risk premium.
- [share_price_index](platform/reference/economy/share_price_index): Get the Share Price Index by country from the OECD Short-Term Economics Statistics
- [short_term_interest_rate](platform/reference/economy/short_term_interest_rate): Get Short-term interest rates
- [bls_search](platform/reference/economy/survey/bls_search): Search BLS surveys by category and keyword or phrase to identify BLS series IDs
- [bls_series](platform/reference/economy/survey/bls_series): Get time series data for one, or more, BLS series IDs
- [economic_conditions_chicago](platform/reference/economy/survey/economic_conditions_chicago): Get The Survey Of Economic Conditions For The Chicago Region
- [Survey](platform/reference/economy/survey/index): Commands
- [manufacturing_outlook_ny](platform/reference/economy/survey/manufacturing_outlook_ny): Get the Empire State Manufacturing Survey
- [manufacturing_outlook_texas](platform/reference/economy/survey/manufacturing_outlook_texas): Get The Manufacturing Outlook Survey For The Texas Region
- [nonfarm_payrolls](platform/reference/economy/survey/nonfarm_payrolls): Get Nonfarm Payrolls Survey
- [sloos](platform/reference/economy/survey/sloos): Get Senior Loan Officers Opinion Survey
- [university_of_michigan](platform/reference/economy/survey/university_of_michigan): Get University of Michigan Consumer Sentiment and Inflation Expectations Surveys
- [unemployment](platform/reference/economy/unemployment): Get global unemployment data
- [dividend](platform/reference/equity/calendar/dividend): Get upcoming and historical dividend data with the OBB.equity.calendar.dividend  method. This method allows you to retrieve dividend information such as dates, amounts,  and provider details. It also provides warnings, charts, and metadata for further  analysis.
- [earnings](platform/reference/equity/calendar/earnings): Learn how to retrieve upcoming and historical earnings calendar data  using the OBB.equity.calendar.earnings Python function. The function allows you  to specify symbols, limit the number of data entries, and choose a data provider.  The returned data includes EPS, revenue, and other important details for the specified  symbols and dates.
- [events](platform/reference/equity/calendar/events): Get historical and upcoming company events, such as Investor Day, Conference Call, Earnings Release
- [Calendar](platform/reference/equity/calendar/index): Commands
- [ipo](platform/reference/equity/calendar/ipo): Access the Upcoming and Historical IPO Calendars and retrieve IPO information  using Python.
- [splits](platform/reference/equity/calendar/splits): Get historical and upcoming stock split operations
- [company_facts](platform/reference/equity/compare/company_facts): Compare reported company facts and fundamental data points
- [groups](platform/reference/equity/compare/groups): Get company data grouped by sector, industry or country and display either performance or valuation metrics
- [Compare](platform/reference/equity/compare/index): Commands
- [peers](platform/reference/equity/compare/peers): Learn how to compare and analyze equity peers with the `obb.equity.compare.peers`  function. This function allows you to retrieve a list of company peers based on  symbol, sector, exchange, and market cap. Understand the parameters, returns, and  data structure provided by this function.
- [Darkpool](platform/reference/equity/darkpool/index): Commands
- [otc](platform/reference/equity/darkpool/otc): Get weekly aggregate trade data for Over The Counter deals, including  ATS trading data and non-ATS trading data. The data is provided for each ATS/firm  with trade reporting obligations under FINRA rules.
- [active](platform/reference/equity/discovery/active): Learn how to get the most active ETFs using the ETF discovery API. This  page provides documentation for the parameters, returns, and data associated with  the API endpoint. Understand how to use the sorting, limiting, and provider parameters  and explore the returned results, chart object, and metadata. Find details about  the data fields including symbol, name, last price, percent change, net change,  volume, date, country, mantissa, type, and formatted values. Retrieve the source  url for additional information.
- [aggressive_small_caps](platform/reference/equity/discovery/aggressive_small_caps): Learn how to get aggressive small cap equities with the equity discovery  API. Understand the parameters, returns, and data format.
- [filings](platform/reference/equity/discovery/filings): Get the most-recent filings submitted to the SEC
- [gainers](platform/reference/equity/discovery/gainers): Learn how to get the top ETF gainers using Python code. This documentation  includes details about the parameters, return values, and data format.
- [growth_tech](platform/reference/equity/discovery/growth_tech): Learn how to get growth tech equities, sort them, and retrieve detailed  data such as symbol, name, price, volume, and more using the OBB.equity.discovery.growth_tech  method in the provided code snippet. This documentation page also covers the parameters,  returns, and available data structures.
- [Discovery](platform/reference/equity/discovery/index): Commands
- [latest_financial_reports](platform/reference/equity/discovery/latest_financial_reports): Get the newest quarterly, annual, and current reports for all companies
- [losers](platform/reference/equity/discovery/losers): Learn how to get the top ETF losers using the OBB ETF Discovery API endpoint.  Explore the available parameters and the returned data, including symbols, names,  prices, percentage changes, and trading volumes.
- [top_retail](platform/reference/equity/discovery/top_retail): Learn about the OBB.equity.discovery.top_retail function in Python, which  tracks retail activity and sentiment for over 9,500 US traded stocks, ADRs, and  ETPs. Find out how to use the function's parameters and understand the data it returns.
- [undervalued_growth](platform/reference/equity/discovery/undervalued_growth): Learn how to get undervalued growth equities using the equity discovery  feature, and understand the various parameters, returns, and data available in the  results.
- [undervalued_large_caps](platform/reference/equity/discovery/undervalued_large_caps): Learn how to get undervalued large cap equities and explore equity discovery  using the OBB equity API. Understand the parameters available, such as sorting undervalued  large caps and selecting the yfinance provider. Retrieve useful equity data, including  the symbol, name, price, change, percent change, volume, market cap, average volume,  and PE ratio.
- [analyst_search](platform/reference/equity/estimates/analyst_search): Search for specific analysts and get their forecast track record
- [consensus](platform/reference/equity/estimates/consensus): Learn how to access and use the Price Target Consensus functionality  in your application. Explore the available parameters and understand the returned  data structure.
- [forward_ebitda](platform/reference/equity/estimates/forward_ebitda): Get forward EBITDA estimates
- [forward_eps](platform/reference/equity/estimates/forward_eps): Get forward EPS estimates
- [forward_pe](platform/reference/equity/estimates/forward_pe): Get forward PE estimates
- [forward_sales](platform/reference/equity/estimates/forward_sales): Get forward sales estimates
- [historical](platform/reference/equity/estimates/historical): Learn about historical analyst estimates and analyst stock recommendations  with the OBBPy library in Python. Explore the usage of the `obb.equity.estimates.historical`  function and its parameters, including `symbol`, `period`, `limit`, and `provider`.  Understand the structure of the returned object, `OBBject`, with `results`, `provider`,  `warnings`, `chart`, and `metadata` properties. Dive into the available data such  as `symbol`, `date`, `estimated revenue`, `ebitda`, `ebit`, `net income`, `SGA expense`,  `EPS`, and the number of analysts who estimated revenue and EPS.
- [Estimates](platform/reference/equity/estimates/index): Commands
- [price_target](platform/reference/equity/estimates/price_target): Get price target data for an equity symbol. Retrieve information such  as publication date, analyst details, price target, and more. Supports multiple  symbols and customizable providers.
- [balance](platform/reference/equity/fundamental/balance): Learn how to use the balance sheet function in Python to retrieve financial  statement data. This documentation provides details about the function parameters,  return values, and available data types.
- [balance_growth](platform/reference/equity/fundamental/balance_growth): Learn about balance sheet statement growth, equity data for a company,  parameters like symbol, limit, and provider, and explore the returned results, warnings,  charts, and metadata. Retrieve detailed data on various balance sheet growth metrics  like cash and cash equivalents, short-term investments, inventory, total assets,  total liabilities, and more.
- [cash](platform/reference/equity/fundamental/cash): Learn how to use the Cash Flow Statement API endpoint to retrieve information  about cash flow statements. Understand the parameters and return values of the API,  and explore the available data fields for cash flow statements.
- [cash_growth](platform/reference/equity/fundamental/cash_growth): Learn about Cash Flow Statement Growth and how to retrieve cash growth  data using the Python function obb.equity.fundamental.cash_growth(). This page provides  details on the function's parameters and the data it returns, including information  on net income, depreciation and amortization, working capital, investments, financing  activities, and more.
- [dividends](platform/reference/equity/fundamental/dividends): Get historical dividends data for a given company with the OBB.equity.fundamental.dividends  function. Explore parameters like symbol and provider, and understand the returned  results, warnings, and metadata. View the data fields, including date, label, adj_dividend,  dividend, record_date, payment_date, and declaration_date.
- [employee_count](platform/reference/equity/fundamental/employee_count): Learn how to retrieve historical employee count data using the Python  API. Understand the parameters, returns, and data structure for the OBB.equity.fundamental.employee_count  method.
- [filings](platform/reference/equity/fundamental/filings): Learn how to retrieve company filings data such as date, type of document,  and link. Understand the available parameters to filter the data, including symbol,  limit, provider, type, and page. Explore the different fields in the data, such  as ticker symbol, accepted date, and final link.
- [historical_attributes](platform/reference/equity/fundamental/historical_attributes): Get the historical values of a data tag from Intrinio
- [historical_eps](platform/reference/equity/fundamental/historical_eps): Historical earnings-per-share for a given company
- [historical_splits](platform/reference/equity/fundamental/historical_splits): Learn how to retrieve historical stock splits data using the Python obb.equity.fundamental.historical_splits  function. Understand the parameters, returns, and data structure for this API call.
- [income](platform/reference/equity/fundamental/income): Get income statement and financial performance data for a company. Parameters  include symbol, period, limit, provider, and more. Data includes revenue, gross  profit, operating expenses, net income, and more.
- [income_growth](platform/reference/equity/fundamental/income_growth): Explore the growth of a company's income statement with the Python function  obb.equity.fundamental.income_growth. Retrieve data for symbols, specify the limit,  period, and provider, and get detailed information on various aspects of the income  statement growth.
- [Fundamental](platform/reference/equity/fundamental/index): Commands
- [latest_attributes](platform/reference/equity/fundamental/latest_attributes): Get the latest value of a data tag from Intrinio
- [management](platform/reference/equity/fundamental/management): Learn about key executives for a company and how to retrieve their data  using the `obb.equity.fundamental.management` function. Get details such as designation,  name, pay, currency, gender, birth year, and title since.
- [management_compensation](platform/reference/equity/fundamental/management_compensation): Learn how to retrieve executive compensation data for a company using  the equity management compensation function in Python. Understand the parameters,  return values, and available data fields such as symbol, salary, bonus, stock award,  and more.
- [management_discussion_analysis](platform/reference/equity/fundamental/management_discussion_analysis): Get the Management Discussion & Analysis section from the financial statements for a given company
- [metrics](platform/reference/equity/fundamental/metrics): Learn about key metrics for a given company using the `obb.equity.fundamental.metrics`  Python function. This API endpoint provides data such as revenue per share, net  income per share, market capitalization, price-to-earnings ratio, and more. Explore  the available parameters and returned data to analyze financial performance. Full  documentation and usage examples available.
- [multiples](platform/reference/equity/fundamental/multiples): Learn how to calculate equity valuation multiples for a stock ticker  using the OBB Python function. Discover the available parameters and the data returned,  including revenue per share, net income per share, market capitalization, price-to-earnings  ratio, and more. Improve your investment analysis with this powerful tool.
- [ratios](platform/reference/equity/fundamental/ratios): Learn about financial ratios for a given company over time. Explore various  equity ratios, such as current ratio, quick ratio, and cash conversion cycle. Understand  key profitability metrics like return on equity and profit margin. Analyze debt  ratios, inventory turnover, and operating and free cash flows. Evaluate the price  to earnings ratio and dividend yield.
- [reported_financials](platform/reference/equity/fundamental/reported_financials): Get financial statements as reported by the company
- [revenue_per_geography](platform/reference/equity/fundamental/revenue_per_geography): Learn about the revenue per geography data with the geographic revenue  data Python function in this documentation page. Understand the symbol, period,  structure, and provider parameters. Explore the returns, results, metadata, and  the data structure including the date, geographic segment, and revenue by region  (Americas, Europe, Greater China, Japan, Rest of Asia Pacific).
- [revenue_per_segment](platform/reference/equity/fundamental/revenue_per_segment): Learn how to get revenue data for a specific business line using the  equity fundamental revenue per segment function.
- [search_attributes](platform/reference/equity/fundamental/search_attributes): Search Intrinio data tags to search in latest or historical attributes
- [trailing_dividend_yield](platform/reference/equity/fundamental/trailing_dividend_yield): Trailing 1yr dividend yield
- [transcript](platform/reference/equity/fundamental/transcript): Learn how to retrieve earnings call transcripts for a given company using  Python obb.equity.fundamental.transcript. Understand the data parameters, returns,  symbol, year, quarter, and metadata associated with the transcripts.
- [historical_market_cap](platform/reference/equity/historical_market_cap): Get the historical market cap of a ticker symbol
- [Equity](platform/reference/equity/index): Menus
- [market_snapshots](platform/reference/equity/market_snapshots): Get a current, complete market snapshot with the obb.equity.market_snapshots  Python method. Retrieve equity data such as stock information, financial data, market  analysis, and trading volume. Explore details like stock performance, price change,  moving averages, 52-week high and low, market cap, earnings per share, price to  earnings ratio, and stock exchange.
- [form_13f](platform/reference/equity/ownership/form_13f): Get the form 13F
- [government_trades](platform/reference/equity/ownership/government_trades): Obtain government transaction data, including data from the Senate and the House of Representatives
- [Ownership](platform/reference/equity/ownership/index): Commands
- [insider_trading](platform/reference/equity/ownership/insider_trading): Learn how to use the stock insider trading Python function to get information  about insider trading, including parameter details, return types, and data descriptions.
- [institutional](platform/reference/equity/ownership/institutional): Learn about institutional ownership data, and how to use the OBB.equity.ownership.institutional  function in Python to access the data. Explore the symbol, include_current_quarter,  date, and provider parameters. Understand the meaning and usage of the results,  provider, warnings, chart, and metadata properties. Additionally, get detailed descriptions  of the various data fields such as symbol, cik, date, investors_holding, number_of_13f_shares,  total_invested, ownership_percent, new_positions, closed_positions, total_calls,  total_puts, and put_call_ratio.
- [major_holders](platform/reference/equity/ownership/major_holders): Get detailed information about equity ownership and stock ownership,  including investment data, security data, market value data, shares data, performance  data, and ownership data. Use the equity ownership API to retrieve equity ownership  details, and explore various stock ownership parameters and returns. Access company  ownership data, investor data, filing data, industry data, and more.
- [share_statistics](platform/reference/equity/ownership/share_statistics): Learn how to retrieve and analyze share statistics for a given company  using the obb.equity.ownership.share_statistics API endpoint. This documentation  provides details on the parameters, return values, and data structure.
- [historical](platform/reference/equity/price/historical): Learn how to use the `obb.equity.price.historical` function to load historical  price data for a specific stock ticker. Find out about the available parameters  and providers, as well as the structure of the returned data and the columns it  contains.
- [Price](platform/reference/equity/price/index): Commands
- [nbbo](platform/reference/equity/price/nbbo): Learn how to load the National Best Bid and Offer (NBBO) for a specific  equity using the OBB.equity.price.nbbo API. Explore the parameters and data returned  by the query, including ask price, bid price, ask size, bid size, exchange details,  timestamps, and more.
- [performance](platform/reference/equity/price/performance): Learn how to calculate the price performance return for a symbol over  different time periods using the OBB.equity.price.performance function. Retrieve  data such as one-day return, week to date return, one-week return, month to date  return, and more. Understand the parameters, returns, and data structure of the  function.
- [quote](platform/reference/equity/price/quote): Learn how to load stock data for a specific ticker with the Equity Quote  function. Discover the various parameters and data returned, including day low,  day high, date, symbol, name, price, volume, and more.
- [profile](platform/reference/equity/profile): Get general price and performance metrics of a stock with the Equity  Information API. Retrieve data such as the symbol, name, price, open price, high  price, low price, close price, change in price, change percent, previous close,  type, exchange ID, bid, ask, volume, implied volatility, realized volatility, last  trade timestamp, annual high, and annual low.
- [screener](platform/reference/equity/screener): Equity Screen
- [search](platform/reference/equity/search): Learn how to perform an equity search to find a company or stock ticker.  Understand the query parameters, such as search by ticker symbol and search provider.  Explore the various filters available, including market cap, price, beta, volume,  dividend, ETF, sector, industry, country, and exchange. Limit and structure the  results accordingly. Get access to the returned data, provider information, warnings,  chart, and metadata.
- [fails_to_deliver](platform/reference/equity/shorts/fails_to_deliver): Learn how to retrieve reported Fail-to-deliver (FTD) data using the OBB.equity.shorts.fails_to_deliver  function in Python. Explore the available parameters for symbol selection and provider  options. Understand the data returned, including settlement date, symbol, quantity  of fails, and more.
- [Shorts](platform/reference/equity/shorts/index): Commands
- [short_interest](platform/reference/equity/shorts/short_interest): Learn how to get reported Short Volume and Days to Cover data using the  OBB.equity.shorts.short_interest function in Python. This page provides information  on the parameters, returns, and available data fields such as settlement date, symbol,  issue name, market class, current short position, previous short position, average  daily volume, days to cover, change, and change percentage.
- [short_volume](platform/reference/equity/shorts/short_volume): This documentation page provides information and usage instructions on  retrieving Fail-to-deliver (FTD) data using the Python library. Learn how to use  the `obb.equity.shorts.short_volume` function to fetch FTD data, including parameters,  return values, and data details such as date, market, volume, and more. The page  also covers the stockgrid provider, chart object, and metadata information about  the command execution.
- [countries](platform/reference/etf/countries): Learn about ETF country weighting and how to retrieve country exposure  data using obb.etf.countries API endpoint.
- [active](platform/reference/etf/discovery/active): Learn how to get the most active ETFs using the ETF discovery API. This  page provides documentation for the parameters, returns, and data associated with  the API endpoint. Understand how to use the sorting, limiting, and provider parameters  and explore the returned results, chart object, and metadata. Find details about  the data fields including symbol, name, last price, percent change, net change,  volume, date, country, mantissa, type, and formatted values. Retrieve the source  url for additional information.
- [gainers](platform/reference/etf/discovery/gainers): Learn how to get the top ETF gainers using Python code. This documentation  includes details about the parameters, return values, and data format.
- [Discovery](platform/reference/etf/discovery/index): Commands
- [losers](platform/reference/etf/discovery/losers): Learn how to get the top ETF losers using the OBB ETF Discovery API endpoint.  Explore the available parameters and the returned data, including symbols, names,  prices, percentage changes, and trading volumes.
- [equity_exposure](platform/reference/etf/equity_exposure): Get the exposure to ETFs for a specific stock
- [historical](platform/reference/etf/historical): Learn how to access historical market price data for ETFs with the OBB.etf.historical()  method. This method allows you to retrieve data such as the opening, high, low,  and closing prices, as well as the trading volume and adjusted closing price for  a specific ETF symbol during a given time period.
- [holdings](platform/reference/etf/holdings): Learn how to get the holdings data for an individual ETF using the `obb.etf.holdings`  method. Understand the parameters like symbol, provider, date, and CIK. Explore  the returns, results, warnings, chart, and metadata. Dive into the data fields like  symbol, name, LEI, title, CUSIP, ISIN, balance, units, currency, value, weight,  payoff profile, asset category, issuer category, country, and more.
- [holdings_date](platform/reference/etf/holdings_date): Learn how to retrieve the holdings filing date for an individual ETF  using the OBB.etf.holdings_date API. Explore the available parameters, such as symbol  and provider, and understand the returned results like results list, chart object,  and metadata info.
- [Etf](platform/reference/etf/index): Menus
- [info](platform/reference/etf/info): Get an overview of ETF information using the `obb.etf.info` function.  Learn about the available parameters, returns, and data fields like name, inception  date, asset class, assets under management, average trading volume, CUSIP, description,  domicile, expense ratio, ISIN, net asset value, website link, and holdings count.
- [price_performance](platform/reference/etf/price_performance): Learn about price performance returns over different periods and how  to retrieve data for a given symbol. Find out how to analyze the time series data,  view the provider information, and access additional metadata and warnings.
- [search](platform/reference/etf/search): Learn how to search for ETFs with parameters like query, provider, exchange  code, and more. Retrieve key details about ETFs, including market cap, industry,  sector, beta, current price, annual dividend, trading volume, exchange, and country.  Find actively trading ETFs and their symbol representation.
- [sectors](platform/reference/etf/sectors): Learn about ETF sector weighting using OBB.etf.sectors API. Find information  about the parameters, returns, and data, including sectors, weights, and exposure  levels in normalized percentage points.
- [bond_indices](platform/reference/fixedincome/bond_indices): Bond Indices
- [bond_prices](platform/reference/fixedincome/corporate/bond_prices): Corporate Bond Prices
- [commercial_paper](platform/reference/fixedincome/corporate/commercial_paper): Learn about commercial paper, a form of short-term promissory notes issued  primarily by corporations. Discover how it can help raise cash for current transactions  and serve as a lower-cost alternative to bank loans. Explore the parameters and  data returned by the commercial paper API endpoint.
- [hqm](platform/reference/fixedincome/corporate/hqm): Learn about the HQM yield curve and the high quality corporate bond market.  Get information on AAA, AA, and A bonds, market-weighted average quality, corporate  bond rates, maturity, yield curve type, provider, and data.
- [ice_bofa](platform/reference/fixedincome/corporate/ice_bofa): Learn about ICE BofA US Corporate Bond Indices, including the ICE BofA  US Corporate Index and parameters for the `obb.fixedincome.corporate.ice_bofa` function.  Find out how to retrieve historical data and explore the available categories and  areas.
- [Corporate](platform/reference/fixedincome/corporate/index): Commands
- [moody](platform/reference/fixedincome/corporate/moody): Moody Corporate Bond Index
- [spot_rates](platform/reference/fixedincome/corporate/spot_rates): Learn about spot rates and how they are used to calculate the yield on  a bond. Understand the concept of discounting and its application in evaluating  pension liabilities. Explore the parameters needed to query and retrieve spot rate  data. Get the serializable results, provider information, warnings, chart, and metadata  associated with the query. Access the spot rate data including the date and rate.
- [Government](platform/reference/fixedincome/government/index): Commands
- [tips_yields](platform/reference/fixedincome/government/tips_yields): Get current Treasury inflation-protected securities yields
- [treasury_auctions](platform/reference/fixedincome/government/treasury_auctions): Government Treasury Auctions
- [treasury_prices](platform/reference/fixedincome/government/treasury_prices): Government Treasury Prices by date
- [treasury_rates](platform/reference/fixedincome/government/treasury_rates): Government Treasury Rates
- [yield_curve](platform/reference/fixedincome/government/yield_curve): Get yield curve data by country and date
- [Fixedincome](platform/reference/fixedincome/index): Menus
- [mortgage_indices](platform/reference/fixedincome/mortgage_indices): Mortgage Indices
- [ameribor](platform/reference/fixedincome/rate/ameribor): Ameribor
- [dpcredit](platform/reference/fixedincome/rate/dpcredit): Discount Window Primary Credit Rate
- [ecb](platform/reference/fixedincome/rate/ecb): Learn about the key interest rates set by the European Central Bank (ECB)  for the Euro area. Explore the Python API for accessing European Central Bank interest  rate data and understand the available parameters to customize your queries.
- [effr](platform/reference/fixedincome/rate/effr): Fed Funds Rate
- [effr_forecast](platform/reference/fixedincome/rate/effr_forecast): Fed Funds Rate Projections
- [estr](platform/reference/fixedincome/rate/estr): Euro Short-Term Rate
- [Rate](platform/reference/fixedincome/rate/index): Commands
- [iorb](platform/reference/fixedincome/rate/iorb): Interest on Reserve Balances
- [overnight_bank_funding](platform/reference/fixedincome/rate/overnight_bank_funding): Overnight Bank Funding
- [sofr](platform/reference/fixedincome/rate/sofr): Secured Overnight Financing Rate
- [sonia](platform/reference/fixedincome/rate/sonia): Sterling Overnight Index Average
- [sofr](platform/reference/fixedincome/sofr): Learn about the Secured Overnight Financing Rate (SOFR), a measure of  the cost of borrowing cash overnight collateralized by Treasury securities. Explore  the SOFR Python function parameters, data returns, and more.
- [Spreads](platform/reference/fixedincome/spreads/index): Commands
- [tcm](platform/reference/fixedincome/spreads/tcm): Treasury Constant Maturity
- [tcm_effr](platform/reference/fixedincome/spreads/tcm_effr): Select Treasury Constant Maturity
- [treasury_effr](platform/reference/fixedincome/spreads/treasury_effr): This documentation page provides information about Treasury Bill data,  including the selected Treasury Bill rate minus Federal Funds Rate. It explains  the concept of constant maturity and the Treasury yield curve. The page also covers  the parameters, returns, and data associated with the `obb.fixedincome.spreads.treasury_effr`  function.
- [Reference](platform/reference/index): <ReferenceCard
- [available](platform/reference/index/available): Available Indices
- [constituents](platform/reference/index/constituents): Learn how to fetch constituents of an index using the OBB library in  Python. Get detailed information such as symbol, name, sector, sub-sector, headquarters,  date of first addition, CIK, and founding year of the constituent companies in the  index.
- [Index](platform/reference/index/index): Menus
- [historical](platform/reference/index/price/historical): Historical Index Levels
- [Price](platform/reference/index/price/index): Commands
- [search](platform/reference/index/search): Learn how to perform index search and retrieve index data using this  Python API. Understand the different parameters and their defaults, and get detailed  information about index symbols, names, and additional attributes such as ISIN code,  region, description, currency, and trading times.
- [sectors](platform/reference/index/sectors): Get Index Sectors
- [snapshots](platform/reference/index/snapshots): Index Snapshots documentation page with information on current levels  for all indices from a specific provider, and details on parameters, query, returns,  and data.
- [sp500_multiples](platform/reference/index/sp500_multiples): Learn about S&P 500 multiples and Shiller PE ratios. Use the `index.sp500_multiples`  query to retrieve historical data on various financial metrics such as PE Ratio,  Dividend, Earnings, Inflation Adjusted Price, Sales, Price to Sales Ratio, and Book  Value per Share. Specify query parameters such as start date, end date, and provider.  Collapse the frequency or transform the time series. Get results, charts, metadata,  and more.
- [company](platform/reference/news/company): Get company news for one or more companies using various providers. This  API allows you to retrieve news articles along with metadata such as date, title,  image, text, and URL. The available providers include Benzinga, FMP, Intrinio, Polygon,  Ultima, and Yfinance.
- [News](platform/reference/news/index): Commands
- [world](platform/reference/news/world): Learn how to retrieve global news data using the obb.news.world API.  This documentation covers the parameters, returns, and data structures used in the  API, including details on how to set the limit and provider, and how to filter the  news by date, author, channels, and more. Explore the different data fields such  as date, title, images, text, and URL, and understand the structure of the returned  results, warnings, chart, and metadata.
- [capm](platform/reference/quantitative/capm): Learn about the Capital Asset Pricing Model (CAPM), a widely-used finance  theory for determining an investment's expected return based on its risk. Understand  how CAPM can be used as an investment strategy to evaluate and select securities.
- [Quantitative](platform/reference/quantitative/index): Menus
- [normality](platform/reference/quantitative/normality): Learn about normality statistics and their significance in data analysis.  Discover different techniques such as kurtosis, skewness, Jarque-Bera, Shapiro-Wilk,  and Kolmogorov-Smirnov for evaluating normality in time series data. Explore how  these tests can help determine if a data sample follows a normal distribution.
- [Performance](platform/reference/quantitative/performance/index): Commands
- [omega_ratio](platform/reference/quantitative/performance/omega_ratio): Calculate the Omega Ratio
- [sharpe_ratio](platform/reference/quantitative/performance/sharpe_ratio): Get Rolling Sharpe Ratio
- [sortino_ratio](platform/reference/quantitative/performance/sortino_ratio): Get rolling Sortino Ratio
- [Rolling](platform/reference/quantitative/rolling/index): Commands
- [kurtosis](platform/reference/quantitative/rolling/kurtosis): Calculate the rolling kurtosis of a target column within a given window size
- [mean](platform/reference/quantitative/rolling/mean): Calculate the rolling average of a target column within a given window size
- [quantile](platform/reference/quantitative/rolling/quantile): Calculate the rolling quantile of a target column within a given window size at a specified quantile percentage
- [skew](platform/reference/quantitative/rolling/skew): Get Rolling Skew
- [stdev](platform/reference/quantitative/rolling/stdev): Calculate the rolling standard deviation of a target column within a given window size
- [variance](platform/reference/quantitative/rolling/variance): Calculate the rolling variance of a target column within a given window size
- [Stats](platform/reference/quantitative/stats/index): Commands
- [kurtosis](platform/reference/quantitative/stats/kurtosis): Calculate the rolling kurtosis of a target column
- [mean](platform/reference/quantitative/stats/mean): Calculate the average of a target column
- [quantile](platform/reference/quantitative/stats/quantile): Calculate the quantile of a target column at a specified quantile percentage
- [skew](platform/reference/quantitative/stats/skew): Get the skew of the data set
- [stdev](platform/reference/quantitative/stats/stdev): Calculate the rolling standard deviation of a target column
- [variance](platform/reference/quantitative/stats/variance): Calculate the variance of a target column
- [summary](platform/reference/quantitative/summary): Learn how to get summary statistics on time series data using Python.  This documentation page provides information on the parameters and return value  of the function.
- [unitroot_test](platform/reference/quantitative/unitroot_test): Learn about the Unit Root Test function in Python, including the Augmented  Dickey-Fuller test and the Kwiatkowski-Phillips-Schmidt-Shin test. Explore the parameters,  such as data, target, fuller_reg, and kpss_reg, and understand how to interpret  the unit root tests summary.
- [cot](platform/reference/regulators/cftc/cot): Learn how to lookup Commitment of Traders Reports by series ID and view  the results, metadata, warnings, and charts associated with the reports. Understand  the available parameters such as default report, provider, data type, legacy format,  report type, measure, start date, end date, and transform.
- [cot_search](platform/reference/regulators/cftc/cot_search): Learn about curated Commitment of Traders Reports series information  and how to perform a search for specific data. Find details on the parameters,  data returned, and available CFTC codes.
- [Cftc](platform/reference/regulators/cftc/index): Commands
- [Regulators](platform/reference/regulators/index): Menus
- [cik_map](platform/reference/regulators/sec/cik_map): Learn how to retrieve the CIK number corresponding to a ticker symbol  using the python obb.regulators.sec.cik_map function. Understand the available parameters,  return values, and data structure.
- [filing_headers](platform/reference/regulators/sec/filing_headers): Download the index headers, and cover page if available, for any SEC filing
- [htm_file](platform/reference/regulators/sec/htm_file): Download a raw HTML object from the SEC website
- [Sec](platform/reference/regulators/sec/index): Commands
- [institutions_search](platform/reference/regulators/sec/institutions_search): Learn how to use the OBB.regulators.sec.institutions_search() method  to look up institutions regulated by the SEC. This method allows you to search for  institutions based on various parameters such as the query and provider. It returns  a list of search results and provides additional attributes like warnings, chart,  and metadata. Explore the attributes like name and cik for more details on the institution.
- [rss_litigation](platform/reference/regulators/sec/rss_litigation): Learn how to use the RSS feed to access litigation releases, including  civil lawsuits brought by the Commission in federal court. This documentation provides  details about the 'obb.regulators.sec.rss_litigation' python function, its parameters  and return values, as well as the data structure used for the releases.
- [schema_files](platform/reference/regulators/sec/schema_files): Get lists of SEC XML schema files by year with the OBBect function. Returns  serializable results, provider name, warnings list, chart object, metadata info,  and data including a list of URLs to SEC Schema Files.
- [sic_search](platform/reference/regulators/sec/sic_search): Learn how to perform a search for industry titles, reporting office,  and SIC codes using Python. Explore the parameters, returns, and data associated  with the `obb.regulators.sec.sic_search` function.
- [symbol_map](platform/reference/regulators/sec/symbol_map): Retrieve the ticker symbol corresponding to a company CIK using the  OBB API endpoint. This function allows you to perform a search query and get the  results along with additional metadata, warnings, and optional chart data.
- [ad](platform/reference/technical/ad): Learn about the Accumulation/Distribution Line and how it is interpreted  to detect trends in price movement. Explore its parameters, usage, and see code  examples.
- [adosc](platform/reference/technical/adosc): Learn about the Accumulation/Distribution Oscillator, also known as the  Chaikin Oscillator. This momentum indicator examines the strength of price moves  and underlying buying and selling pressure. Discover how divergence between the  indicator and price signals market turning points. Explore the parameters, data,  and examples for using this oscillator in your analysis.
- [adx](platform/reference/technical/adx): Learn about ADX, a Welles Wilder style moving average of the Directional  Movement Index. Understand its calculation, interpretation, and usage with stock  data. Explore examples for implementation.
- [aroon](platform/reference/technical/aroon): Learn about the Aroon Indicator, a trend indicator in technical analysis.  Understand how the Aroon Up and Down lines can help identify upward and downward  trends, and how to calculate and use the Aroon Indicator. Includes examples and  parameters.
- [atr](platform/reference/technical/atr): Learn about the Average True Range indicator used to measure volatility  in financial data and how to apply it with examples.
- [bbands](platform/reference/technical/bbands): Learn about Bollinger Bands, a popular trading indicator used to identify  volatility, overbought or oversold conditions, support and resistance levels, and  price targets. Understand how they work, their parameters, and how to use them effectively  in your trading strategy.
- [cci](platform/reference/technical/cci): Learn about the Commodity Channel Index (CCI) and how it can be used  to detect market trends, overbought or oversold conditions, and price divergence.  This documentation provides an overview of the CCI, its parameters, and its calculation,  along with an explanation of the CCI data it returns.
- [cg](platform/reference/technical/cg): Learn about the Center of Gravity (COG) indicator, how it predicts price  movements and reversals, and its use in range-bound markets. Explore the parameters,  examples, and how to calculate COG data with OpenBB for technical analysis.
- [clenow](platform/reference/technical/clenow): Learn about Clenow Volatility Adjusted Momentum and how to calculate  it using Python code with openbb library. Explore the parameters, examples, and  returns of this technical analysis function.
- [cones](platform/reference/technical/cones): Calculate realized volatility quantiles over rolling windows of time  using different volatility models. Understand the parameters and their effects,  such as index, quantile values, and is_crypto. Examples and code snippets provided.
- [demark](platform/reference/technical/demark): Learn how to use the Demark sequential indicator function in the OBBject  library to analyze stock market data and calculate specific values. See examples  of its implementation with the OpenBB package.
- [donchian](platform/reference/technical/donchian): Learn about Donchian Channels, an indicator formed by upper and lower  bands around a midrange or median band. Explore the parameters, returns, and examples.
- [ema](platform/reference/technical/ema): Learn how to calculate the Exponential Moving Average (EMA) in Python  using the openbb library. Understand its benefits as a cumulative calculation and  how it maintains data responsiveness. Find details on parameters like data, target  column, index column, length, and offset. Get code examples to implement EMA calculations  in your projects.
- [fib](platform/reference/technical/fib): Learn how to create Fibonacci Retracement Levels using the openbb Python  library for technical analysis. Apply the Fibonacci indicator to stock data and  visualize the results.
- [fisher](platform/reference/technical/fisher): Learn about the Fisher Transform, a technical indicator created by John  F. Ehlers that converts prices into a Gaussian normal distribution. This indicator  can help identify extreme prices and turning points in asset prices. Discover how  to use the Fisher Transform with examples and parameter explanations.
- [hma](platform/reference/technical/hma): Learn about the Hull Moving Average (HMA), a responsive and smooth moving  average indicator. Understand how to use the HMA, its parameters, and see examples  using the OBBject library.
- [ichimoku](platform/reference/technical/ichimoku): Learn about Ichimoku Cloud, a versatile indicator that defines support  and resistance, identifies trend direction, gauges momentum, and provides trading  signals. Explore its parameters and usage in Python.
- [Technical](platform/reference/technical/index): Commands
- [kc](platform/reference/technical/kc): Learn how to use Keltner Channels, volatility-based bands used to determine  the direction of a trend. This documentation covers the Keltner Channels calculation,  breakout signals, and parameters like the moving average mode, length, scalar value,  and offset.
- [macd](platform/reference/technical/macd): Learn about the Moving Average Convergence Divergence (MACD), a powerful  technical indicator used in financial analysis. Understand how the MACD signals  trend changes, identifies overbought and oversold conditions, and generates buy/sell  signals. Explore the parameters and see examples of how to use this indicator in  Python.
- [obv](platform/reference/technical/obv): Learn about On Balance Volume (OBV), a cumulative volume indicator that  helps to interpret price moves, identify trends, and determine market trends. This  documentation page provides an explanation of how OBV works, its parameters, and  a Python example.
- [relative_rotation](platform/reference/technical/relative_rotation): Calculate the Relative Strength Ratio and Relative Strength Momentum for a group of symbols against a benchmark
- [rsi](platform/reference/technical/rsi): Learn about Relative Strength Index (RSI) and how to calculate it. Understand  its interpretation as an overbought/oversold indicator and its relevance in identifying  price movements and reversals. Explore the various parameters involved in the RSI  calculation with practical examples.
- [sma](platform/reference/technical/sma): Learn about the Simple Moving Average and how it can be used to smooth  data, eliminate noise, and identify trends. Gain insights into the simple form of  moving averages, equal weighting, responsiveness to changes, and filtering data.  Understand the parameters involved in the calculation, such as length and offset.
- [stoch](platform/reference/technical/stoch): Learn about the Stochastic Oscillator and its calculation. Understand  the parameters, returns, and see examples of how to use it with OpenBB. Improve  your page's SEO with this well-researched content.
- [vwap](platform/reference/technical/vwap): Learn about the Volume Weighted Average Price (VWAP) and how it measures  the average typical price by volume. Discover how it can be used with intraday charts  to identify general direction. Explore Python examples using the OpenBB OBB package.
- [wma](platform/reference/technical/wma): Learn about the Weighted Moving Average (WMA) and how it is used to give  more weight to recent data. Understand its unique calculation and how it compares  to the Simple Moving Average. Find out the parameters for the WMA function, such  as the target and index column names, length, and offset. See an example of using  the WMA function in Python with the OpenBB library to calculate WMA data for historical  stock prices.
- [zlma](platform/reference/technical/zlma): Learn about the zero lag exponential moving average (ZLEMA) and how it  can be used to perform EMA calculations on de-lagged data. Explore the parameters  and get examples of implementing ZLEMA in Python.
- [User Settings & Environment Variables](platform/settings_and_environment_variables): This section details configuring the OpenBB Platform settings and environment variables.
- [Build New Provider Extension](platform/user_guides/add_data_provider_extension): This guide outlines the process for adding a new data provider extension to the OpenBB Platform.
- [Add Provider To An Existing Command](platform/user_guides/add_data_to_existing_endpoint): This guide outlines the process for adding an endpoint to an existing data provider and router endpoint.
- [Add Command To An Existing Provider](platform/user_guides/add_endpoint_to_existing_provider): This guide outlines the process for adding a new endpoint to an existing data provider, that does not yet have a standard model.
- [Build New OBBject Extension](platform/user_guides/add_obbject_extension): This page provides information about how to write extensions for the OpenBB OBBject class.
- [Build New Toolkit Extension](platform/user_guides/add_toolkit_extension): This guide outlines the process for adding a new toolkit extension and router path to the OpenBB Platform.
- [Basic Response](platform/user_guides/basic_response): This page details the basic response and output that can be expected to be received from the the OpenBB Platform.
- [Basic Syntax](platform/user_guides/basic_syntax): This page provides comprehensive information about standardized command syntax for an open-source platform. Topics discussed include the structure of command syntax, use of standardized parameters, usage of provider and symbol parameters, handling of date and limit parameters, and more. Also explored, are the methods for selecting data sources, handling different list and ticker symbol formats, and dealing with command responses and warnings.
- [Commitments of Traders](platform/user_guides/commitments_of_traders): This page provides details on the accessing Commitments of Traders reports with the OpenBB Platform, published by the CFTC weekly. There are explanations of the query parameters and data response, as well as examples for use.
- [Dynamic Command Execution](platform/user_guides/dynamic_command_execution): This guide provides detailed instructions on how to execute commands dynamically in the OpenBB Platform.
- [Extensions](platform/user_guides/extensions): This page describes the toolkit extensions available for the OpenBB Platform.
- [User Guides](platform/user_guides/index): This section provides user_guides of concepts related to usage and getting started with the OpenBB Platform. The pages include example syntax and outline what you can expect while working with the OpenBB Python interface and REST API.
- [LLM Friendly Mode](platform/user_guides/llm_mode): This guide provides detailed instructions on how to enable LLM mode in the OpenBB Platform.
- [Metadata](platform/user_guides/metadata): This guide provides an overview of the types of metadata returned within function responses, and shows samples demonstrating what to expect.
- [REST API](platform/user_guides/rest_api): Learn how to configure and deploy the OpenBB Platform's REST API using FastAPI, including detailed guidelines on API documentation, authorization, CORS settings, and server configurations.