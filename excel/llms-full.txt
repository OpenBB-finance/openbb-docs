---
title: Overview
sidebar_position: 0
description: The OpenBB Add-in for Excel is a powerful integration that enables direct access to financial data within Microsoft Excel. This seamless integration allows you to create sophisticated financial models and perform comprehensive analysis without leaving your spreadsheet environment.
keywords:
- excel add-in
- financial data integration
- dynamic widgets
- excel formulas
- dashboard export
- financial modeling
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="OpenBB Add-in for Excel Docs" />

The OpenBB Add-in for Excel enables enterprise users to access all available data from their OpenBB Workspace through interactive widgets.

## OpenBB Widgets

Enterprise users with access to the OpenBB Add-in for Excel can utilize the **Excel formula** option in their widget settings to access widget data directly in Excel.

<center>
<img src="https://openbb-cms.directus.app/assets/cf39abef-9a93-42fa-b98f-d1e7a2e38c77.png" alt="Excel formula dropdown in widget settings" width="900px" />
</center>

### Dynamic Widgets with Implicit Parameters

When accessing the **Excel formula** dropdown, users will see the following interface:

<center>
<img src="https://openbb-cms.directus.app/assets/fd7f2baf-edd3-48b9-a3d8-6bc3f33c0c68.png" alt="Excel formula interface" width="900px" />
</center>

The interface displays the widget name, backend information, and the corresponding Excel formula. For example:

```excel
=OBB.WIDGET("DTCC Trades","swap_rate_levels_custom_obb",{"currency","USD";"swap_type","OIS";"period","1y"})
```

Note: The formula is displayed with indentation for better readability, but when copied to the clipboard, it will be formatted as a single line for Excel compatibility.

Here's how it appears in Excel:

<center>
<img src="https://openbb-cms.directus.app/assets/7478fdf5-de07-472b-993f-45bfbef4b1e2.png" alt="Excel formula implementation" width="600px" />
</center>

### Dynamic Widgets with Explicit Parameters

Users can enable an alternative mode by selecting the "with explicit parameters" checkbox. This mode separates the parameters from the formula, creating a more flexible widget-like experience in Excel.

<center>
<img src="https://openbb-cms.directus.app/assets/22ce67c6-efec-4021-886d-0452891a2af9.png" alt="Explicit parameters interface" width="900px" />
</center>

Implementation example:

<center>
<img src="https://openbb-cms.directus.app/assets/aa48622e-a634-4565-a5e4-03ee0cfd5a3a.png" alt="Explicit parameters in Excel" width="600px" />
</center>

Note: The formula and parameters are initially set to cell A1, but users can modify the formula parameters to reference different cell ranges based on their specific needs.

## Dashboard to Excel Export

Users can export entire dashboard data to Excel using the left sidebar export functionality.

<center>
<img src="https://openbb-cms.directus.app/assets/6bf99ebf-7c9e-4a3a-b83b-ee5b466ffd9c.png" alt="Dashboard export options" width="400px" />
</center>

Three export options are available:

<center>
<img src="https://openbb-cms.directus.app/assets/eb099308-327b-4bb5-8e5c-1e9d45534512.png" alt="Export options menu" width="400px" />
</center>

The first worksheet of the exported Excel file contains comprehensive dashboard information:

<center>
<img src="https://openbb-cms.directus.app/assets/c4f4973d-5f8e-411c-a238-370eb0f45ea9.png" alt="Dashboard information in Excel" width="900px" />
</center>

This includes:
- Widget metadata
- Parameter configurations
- Dashboard name
- Export timestamp

### Static Data Export

When exporting in static data mode, a progress dialog appears to indicate the export status:

<center>
<img src="https://openbb-cms.directus.app/assets/db4784db-630e-458c-b60e-699a4444e054.png" alt="Static data export progress" width="400px" />
</center>

Each OpenBB widget is exported to a separate worksheet, containing both the parameters used and the corresponding data:

<center>
<img src="https://openbb-cms.directus.app/assets/a9864e6d-16cc-468f-8045-4e3b1689d6c4.png" alt="Widget data in Excel" width="600px" />
</center>

### Dynamic Export

For dynamic exports (both implicit and explicit parameter modes), the exported Excel file will utilize the OpenBB Add-in formulas as described in the previous sections.

---

---
title: Getting Started
sidebar_position: 1
description: This page presents the general requirements and the steps to install the OpenBB Add-in for Excel. The OpenBB Add-in for Excel is available on Windows, Mac, and Excel on the web. It can be installed by an administrator or by individual users.
keywords:
- Microsoft Excel
- Add-in
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Getting Started | OpenBB Add-in for Excel Docs" />

## Requirements

- The OpenBB Add-in for Excel is available on the following platforms: Windows (Microsoft 365), Mac (Microsoft 365), Excel on the web.
- Access to OpenBB Workspace. If you don't have access you can sign up [here](https://my.openbb.co/app/pro).

## Installation

<div style={{display: 'flex', justifyContent: 'center'}}>
    <iframe
        style={{width: '800px', height: '450px', display: 'block', margin: '0 auto'}}
        src="https://www.youtube.com/embed/Rn3M36H_6Cw?si=6PdxyssA21461hUr)"
        title="YouTube video player"
        frameBorder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    />
</div>

The OpenBB Add-in for Excel is available on the [Microsoft AppSource](https://appsource.microsoft.com/product/office/wa200006381?tab=overview). It can be installed by an administrator or by individual users.

### Individual user

1. Open Microsoft Excel.
2. Go to **Home** tab.
3. Click in the **Add-ins** button and then **More add-ins**.
4. In the **Office Add-ins** dialog box **STORE** tab, search for **OpenBB** and select the add-in.
5. Click **Add**.

### Administrator

1. Go to Microsoft 365 admin center.
2. Click **Settings** > **Integrated apps**.
3. Click **Get apps**.
4. Search for **OpenBB** and select the add-in.
5. Click **Get in now**.
6. Go through the deployment wizard to complete the installation.


---

---
title: OBB.GET
sidebar_position: 3
description: Extract and slice specific data from Excel ranges using labels or indices
keywords:
- Microsoft Excel
- Add-in
- Advanced
- Slice data
- Data slicer
- Get specific fields
- Data extraction
- Excel ranges
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="OBB.GET | OpenBB Add-in for Excel Docs" />

The `OBB.GET` function is a powerful data extraction tool that allows you to precisely slice and extract specific portions of data from any array or range in Excel. It's particularly useful when working with data returned by other OpenBB functions, enabling you to focus on exactly the information you need.

## Key Features

- Extract specific rows, columns, or both from any data range
- Use either labels (like dates or column names) or numeric indices
- Support for single values, ranges, and arrays
- Negative indexing for accessing data from the end
- Flexible input formats for dates and text

## Syntax

```excel
=OBB.GET(array, [rows], [columns])
```

### Parameters

| Parameter | Type | Description | Required | Examples |
|-----------|------|-------------|----------|----------|
| array | Any | The source data range to slice. This can be any array, including results from other OBB functions. | Yes | `A1:D3`, `OBB.WIDGET(...)` |
| rows | Any | Row selection using labels or indices. Can be a single value, range, or array. | No | `"2023/09/30"`, `2`, `{1,3}`, `-1` |
| columns | Any | Column selection using labels or indices. Can be a single value, range, or array. | No | `"revenue"`, `3`, `{"A","C"}` |

### Return Value

Returns a subset of the input array based on the specified row and column selections. The return type matches the input data type.

## Examples

Suppose you have the following financial data in cells A1:D3:

| period_ending | revenue            | cost_of_revenue    | gross_profit       |
|---------------|--------------------|--------------------|--------------------|
| 2023/09/30    | 383 285 000 000.00 | 214 137 000 000.00 | 169 148 000 000.00 |
| 2022/09/24    | 394 328 000 000.00 | 223 546 000 000.00 | 170 782 000 000.00 |
| 2021/09/25    | 365 817 000 000.00 | 212 981 000 000.00 | 152 836 000 000.00 |

### Common Use Cases

1. **Get a Single Row by Date**

```excel
=OBB.GET(A1:D3, "2023/09/30")
```

Returns the entire row for September 30, 2023.

2. **Get a Single Column by Name**

```excel
=OBB.GET(A1:D3, , "revenue")
```

Returns all revenue values.

3. **Get a Single Cell by Index**

```excel
=OBB.GET(A1:D3, 2, 3)
```

Returns the value at row 2, column 3 (cost_of_revenue for 2022/09/24).

4. **Get Multiple Rows and Columns**

```excel
=OBB.GET(A1:D3, {"2023/09/30", "2021/09/25"}, {"cost_of_revenue", "gross_profit"})
```

Returns a 2x2 array with cost_of_revenue and gross_profit for 2023 and 2021.

5. **Using Negative Indices**

```excel
=OBB.GET(A1:D3, -1, -2)
```

Returns the last row and second-to-last column (gross_profit for 2021/09/25).

### Advanced Usage

1. **Using Cell References for Selections**

```excel
=OBB.GET(A1:D3, E1:E2, F1:F2)
```

Where E1:E2 contains dates and F1:F2 contains column names.

2. **Combining with Other OBB Functions**

```excel
=OBB.GET(OBB.WIDGET("My backend", "income_statement", {"ticker","AAPL";"year","2023"}), "2023/09/30", "revenue")
```

Directly extracts revenue from the income statement widget result.

## Best Practices

1. **Date Formats**
   - Use `YYYY/MM/DD` format for date labels
   - Use Excel's DATE function: `DATE(2023,9,30)`
   - Ensure dates match exactly with the data

2. **Column Names**
   - Use exact column names as they appear in the data
   - Case-sensitive matching
   - Include underscores and spaces exactly as in the data

3. **Performance**
   - For large datasets, prefer using indices over labels
   - Use cell references for repeated selections
   - Avoid unnecessary array operations

## Troubleshooting

| Issue | Solution |
|-------|----------|
| #N/A error | Verify that the row/column labels exist in the data |
| #VALUE! error | Check that the array parameter is valid |
| Empty result | Confirm that the selection criteria match the data format |
| Date not found | Ensure date format matches exactly (YYYY/MM/DD) |

## Notes

- When using date labels, ensure consistent date formatting across your workbook
- Column names are case-sensitive
- The function preserves the original data types of the selected cells
- Empty or invalid selections will return appropriate error values
- For best performance with large datasets, consider using numeric indices instead of labels


---

---
title: OBB.WIDGET
sidebar_position: 2
description: This page provides an overview of the basics of the OpenBB add-in for Microsoft Excel. It covers the basic usage of the add-in and the available functions.
keywords:
  - Microsoft Excel
  - Add-in
  - Basics
  - Examples
  - Functions
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="OBB.WIDGET | OpenBB Add-in for Excel Docs" />

This is the most important formula that is available, as it allows you to access any dataset available from the OpenBB workspace.

:::info

- Make sure your backend's CORS settings allow requests coming from [https://excel.openbb.co](https://excel.openbb.co).
- Requests via HTTP will be blocked by Excel. So if you are using the Add-in for Excel on Mac or Office on the web with Safari browser you need to run your backend via HTTPS.

:::

It has the following format:

```excel
=OBB.BYOD(<BACKEND NAME>,<WIDGET ID> or <WIDGET NAME>, <PARAMETERS (OPTIONAL)>)
```

Where parameters, shows up as `{"param1","value1";"param2","value2"; ...}`.

Here are a few examples:

```excel
=OBB.WIDGET("DTCC Trades","swap_rate_levels_custom_obb",{"currency","USD";"swap_type","OIS";"period","1y"})
```

```excel
=OBB.WIDGET("DTCC Trades","Swap Trades",{"currency","USD";"date","2025-04-15";"cleared_only","true";"include_starting","false"})
```

```excel
=OBB.WIDGET("OpenBB Platform","economy_pce_fred_obb",{"category","personal_income";"provider","fred"})
```

```excel
=OBB.WIDGET("Custom Backend","Portugal CPI since 2000")
```

### Explicit parameters

The easiest way to pass optional parameters is to write them into cells and reference them in the function.

For example,

```excel
=OBB.WIDGET("DTCC Trades","swap_rate_levels_custom_obb",{"currency","USD";"swap_type","OIS";"period","1y"})
```

can be rewritten as:

```excel
=OBB.WIDGET("DTCC Trades","swap_rate_levels_custom_obb",A1:B3)
```

where:

- A1 contains "currency" and B1 "USD"
- A2 contains "swap_type" and B2 "OIS"
- A3 contains "period" and B3 "1y"



---

---
title: Troubleshooting
sidebar_position: 5
description: Common issues and solutions for the OpenBB Add-in for Excel, including error handling, installation problems, and connection troubleshooting.
keywords:
  - Microsoft Excel
  - Excel Add-in
  - Troubleshooting
  - Error Handling
  - Permission Error
  - Connection Issues
  - Duplicate Ribbon
  - Excel Help
  - OpenBB Support
---

import HeadTitle from "@site/src/components/General/HeadTitle.tsx";

<HeadTitle title="Troubleshooting | OpenBB Add-in for Excel Docs" />

If you face specific issues while using the add-in and the solutions provided here don't resolve them, don't hesitate to reach out to us for further assistance. You can contact us through [support@openbb.finance](mailto:support@openbb.finance).

### #VALUE! Error

If you encounter a '#VALUE!' error when running an OBB function, first verify that you are using the correct syntax. Either [OBB.WIDGET](/excel/obb-widget) or [OBB.GET](/excel/obb-get).

- If you have just opened your workbook and see this error, try recalculating the cell - this is a known issue with Excel add-ins that sometimes requires a refresh.

### Add-in Not Available

If the OBB functions are not appearing after installation, try these troubleshooting steps:

- Verify that the OpenBB Add-in appears in your Excel ribbon
- If not visible, go to **Insert** > **Get Add-ins** > **My Add-ins**, hover over the OpenBB add-in, click '...', remove it, and reinstall
- If the issue persists, restart your computer or [clear the Office cache](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/clear-cache)

### Permission Error

If you see the message "You don't have permission to use this add-in. Contact your system administrator to request access", try these solutions:

- Confirm that your account has the necessary permissions to use the add-in
- If permissions are correct, try restarting your computer or [clearing the Office cache](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/clear-cache)

### Duplicate Ribbon Tab

If you notice duplicate 'OpenBB' tabs in the ribbon after editing a workbook in both browser and desktop versions, this is a known Excel issue. While there's no permanent fix, you can resolve it using these workarounds:

- **Windows users**: Go to File > Info > Inspect Workbook > Check 'Task Pane Add-ins' > Click 'OK'. This will remove the duplicate add-in reference created by Excel in the browser

- **Mac users**: 
  1. Rename your file from .xlsx to .zip
  2. Use WinZip for Mac to unzip the file (the default unzip tool won't work for this)
  3. Delete the webextension1.xml file from the webextensions folder
  4. Rename the file back to .xlsx

### Connection Issues

If you're unable to retrieve data through OBB.WIDGET from your backend, check these common issues:

- Ensure your backend server is running and accessible from your network
- For Mac or Safari users: Verify that your backend is using HTTPS with a valid SSL certificate
