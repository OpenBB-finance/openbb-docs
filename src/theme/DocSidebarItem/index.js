import { useLocation } from "@docusaurus/router";
import DocSidebarItemCategory from "@theme/DocSidebarItem/Category";
import DocSidebarItemHtml from "@theme/DocSidebarItem/Html";
import DocSidebarItemLink from "@theme/DocSidebarItem/Link";
import { useIFrameContext } from "../Root.tsx";

function shouldHideItem(item, productPath) {
	if (item.items) {
		return item.items.every((childItem) =>
			shouldHideItem(childItem, productPath),
		);
	}

	if (item.type === "link") {
		const itemPath = item.href.replace(/\/$/, "");
		return !itemPath.startsWith(productPath);
	}

	if (item.type === "category") {
		return item.items.every((childItem) =>
			shouldHideItem(childItem, productPath),
		);
	}

	return false;
}

export default function DocSidebarItem({ item, ...props }) {
	const { isIFrame } = useIFrameContext();
	const { pathname } = useLocation();
	const isPro = pathname.startsWith("/workspace");
	const isExcel = pathname.startsWith("/excel");
	const isGettingStarted = pathname.startsWith("/getting-started");
	const isRelevantSection = isPro || isExcel || isGettingStarted;

	// Only show workspace items when in workspace, excel items when in excel, getting-started items always in relevant sections
	if (item.type === "autogenerated") {
		if (item.dirName === "workspace" && !isPro) {
			return null;
		}
		if (item.dirName === "excel" && !isExcel) {
			return null;
		}
		if (item.dirName === "getting-started" && !isRelevantSection) {
			return null;
		}
	}

	// Show section headers when in workspace, excel, or getting-started sections
	if (item.className?.includes("getting-started-section") && !isRelevantSection) {
		return null;
	}
	if (item.className?.includes("developers-section") && !isRelevantSection) {
		return null;
	}
	if (item.className?.includes("analyst-section") && !isRelevantSection) {
		return null;
	}

	if (isIFrame) {
		const firstTwoPathSegments = pathname.split("/").slice(0, 3).join("/");

		if (shouldHideItem(item, firstTwoPathSegments)) {
			return null;
		}
	}

	if (isRelevantSection && item.type === "category" && !checkIfAnyChildIsRelevantSection(item)) {
		return null;
	}

	if (
		!(isPro || isExcel) &&
		item.href?.startsWith("/workspace") &&
		item.href?.startsWith("/excel")
	) {
		return null;
	}

	let addedHtml = null;
	let afterHtml = null;

	switch (item.type) {
		case "category":
			return (
				<>
					{addedHtml}
					<DocSidebarItemCategory 
						item={item} 
						{...props} 
					/>
					{afterHtml}
				</>
			);
		case "html":
			return (
				<>
					{addedHtml}
					<DocSidebarItemHtml item={item} {...props} />
					{afterHtml}
				</>
			);
		case "link":
		default:
			return (
				<>
					{addedHtml}
					<DocSidebarItemLink item={item} {...props} />
					{afterHtml}
				</>
			);
	}
}

function checkIfAnyChildIsRelevantSection(item) {
	if (item.items) {
		return item.items.some((childItem) => checkIfAnyChildIsRelevantSection(childItem));
	}

	if (item.type === "link") {
		return (
			item.href?.startsWith("/workspace") || 
			item.href?.startsWith("/excel") ||
			item.href?.startsWith("/getting-started")
		);
	}

	if (item.type === "category") {
		return item.items.some((childItem) => checkIfAnyChildIsRelevantSection(childItem));
	}

	return false;
}
