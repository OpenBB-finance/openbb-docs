"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[60900],{25761:(e,r,t)=>{t.d(r,{A:()=>j});var a=t(56347),n=t(65627),s=t(96540),i=t(50372),l=t(30604),o=t(11861),d=t(78749);function u(e){return function(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:r,label:t,attributes:a,default:n}}=e;return{value:r,label:t,attributes:a,default:n}}))}function c(e){const{values:r,children:t}=e;return(0,s.useMemo)((()=>{const e=r??u(t);return function(e){const r=(0,o.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function _(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function h(e){let{queryString:r=!1,groupId:t}=e;const n=(0,a.W6)(),i=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const r=new URLSearchParams(n.location.search);r.set(i,e),n.replace({...n.location,search:r.toString()})}),[i,n])]}function p(e){const{defaultValue:r,queryString:t=!1,groupId:a}=e,n=c(e),[l,o]=(0,s.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!_({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:r,tabValues:n}))),[u,p]=h({queryString:t,groupId:a}),[m,f]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[a,n]=(0,d.Dv)(t);return[a,(0,s.useCallback)((e=>{t&&n.set(e)}),[t,n])]}({groupId:a}),y=(()=>{const e=u??m;return _({value:e,tabValues:n})?e:null})();(0,i.A)((()=>{y&&o(y)}),[y]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!_({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),f(e)}),[p,f,n]),tabValues:n}}var m=t(9136),f=t(34164);const y={tabList:"tabList_TRJ7",tabItem:"tabItem_hGfb"};var x=t(74848);function g(e){let{className:r,block:t,selectedValue:s,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,n.a_)(),{pathname:u}=(0,a.zy)(),c=e=>{const r=e.currentTarget,t=o.indexOf(r),a=l[t].value;a!==s&&(d(r),i(a))},_=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;r=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;r=o[t]??o[o.length-1];break}}r?.focus()};return(0,x.jsx)("div",{className:"border-b border-grey-400 inline-block",children:(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,f.A)("_group-tab list-none m-0 p-0 flex"),children:l.map((e=>{let{value:r,label:t,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>o.push(e),onKeyDown:_,onClick:c,...a,className:(0,f.A)("font-bold tracking-widest uppercase text-lg cursor-pointer mr-4 pb-2 border-b-2 -mb-px first:pl-0 pl-2",y.tabItem,a?.className,{"pointer-events-none":s===r,"text-[#669dcb] border-[#669dcb]":s===r&&u.startsWith("/workspace"),"text-[#FB923C] border-[#FB923C]":s===r&&u.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#ffd4b1] hover:border-[#ffd4b1]":s!==r&&u.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#abd2f1] hover:border-[#abd2f1]":s!==r&&u.startsWith("/workspace")}),children:t??r},r)}))})})}function b(e){let{lazy:r,children:t,selectedValue:a}=e;if(t=Array.isArray(t)?t:[t],r){const e=t.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:t.map(((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function v(e){const r=p(e);return(0,x.jsxs)("div",{className:(0,f.A)("tabs-container",y.tabList),children:[(0,x.jsx)(g,{...e,...r}),(0,x.jsx)(b,{...e,...r})]})}function j(e){const r=(0,m.A)();return(0,x.jsx)(v,{...e},String(r))}},28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>l});var a=t(96540);const n={},s=a.createContext(n);function i(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:r},e.children)}},39068:(e,r,t)=>{t.d(r,{A:()=>s});t(96540);var a=t(27143),n=t(74848);function s(e){let{title:r}=e;return(0,n.jsx)(a.A,{children:(0,n.jsx)("title",{children:r})})}},59470:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>d,metadata:()=>a,toc:()=>_});const a=JSON.parse('{"id":"python/reference/index/sp500_multiples","title":"sp500_multiples","description":"Learn about S&P 500 multiples and Shiller PE ratios. Use the `index.sp500_multiples`  query to retrieve historical data on various financial metrics such as PE Ratio,  Dividend, Earnings, Inflation Adjusted Price, Sales, Price to Sales Ratio, and Book  Value per Share. Specify query parameters such as start date, end date, and provider.  Collapse the frequency or transform the time series. Get results, charts, metadata,  and more.","source":"@site/content/python/reference/index/sp500_multiples.md","sourceDirName":"python/reference/index","slug":"/python/reference/index/sp500_multiples","permalink":"/python/reference/index/sp500_multiples","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/reference/index/sp500_multiples.md","tags":[],"version":"current","frontMatter":{"title":"sp500_multiples","description":"Learn about S&P 500 multiples and Shiller PE ratios. Use the `index.sp500_multiples`  query to retrieve historical data on various financial metrics such as PE Ratio,  Dividend, Earnings, Inflation Adjusted Price, Sales, Price to Sales Ratio, and Book  Value per Share. Specify query parameters such as start date, end date, and provider.  Collapse the frequency or transform the time series. Get results, charts, metadata,  and more.","keywords":["S&P 500 multiples","Shiller PE ratios","SP500Multiples","index.sp500_multiples","historical data","PE Ratio","Dividend","Earnings","Inflation Adjusted Price","Sales","Price to Sales Ratio","Book Value per Share","query parameters","start date","end date","provider","collapse","transform","results","chart","metadata","data","date"]},"sidebar":"tutorialSidebar","previous":{"title":"snapshots","permalink":"/python/reference/index/snapshots"},"next":{"title":"News","permalink":"/python/reference/news/"}}');var n=t(74848),s=t(28453),i=t(39068),l=t(25761),o=t(79329);const d={title:"sp500_multiples",description:"Learn about S&P 500 multiples and Shiller PE ratios. Use the `index.sp500_multiples`  query to retrieve historical data on various financial metrics such as PE Ratio,  Dividend, Earnings, Inflation Adjusted Price, Sales, Price to Sales Ratio, and Book  Value per Share. Specify query parameters such as start date, end date, and provider.  Collapse the frequency or transform the time series. Get results, charts, metadata,  and more.",keywords:["S&P 500 multiples","Shiller PE ratios","SP500Multiples","index.sp500_multiples","historical data","PE Ratio","Dividend","Earnings","Inflation Adjusted Price","Sales","Price to Sales Ratio","Book Value per Share","query parameters","start date","end date","provider","collapse","transform","results","chart","metadata","data","date"]},u=void 0,c={},_=[{value:"Examples",id:"examples",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Data",id:"data",level:2}];function h(e){const r={code:"code",em:"em",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.A,{title:"index/sp500_multiples - Reference | OpenBB Docs"}),"\n","\n",(0,n.jsx)(r.p,{children:"Get historical S&P 500 multiples and Shiller PE ratios."}),"\n",(0,n.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"from openbb import obb\nobb.index.sp500_multiples(provider='multpl')\nobb.index.sp500_multiples(series_name='shiller_pe_year', provider='multpl')\n"})}),"\n",(0,n.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(l.A,{children:[(0,n.jsxs)(o.A,{value:"standard",label:"standard",children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"series_name"}),": ",(0,n.jsx)(r.code,{children:"Union[Union[Literal['shiller_pe_month', 'shiller_pe_year', 'pe_year', 'pe_month', 'dividend_year', 'dividend_month', 'dividend_growth_quarter', 'dividend_growth_year', 'dividend_yield_year', 'dividend_yield_month', 'earnings_year', 'earnings_month', 'earnings_growth_year', 'earnings_growth_quarter', 'real_earnings_growth_year', 'real_earnings_growth_quarter', 'earnings_yield_year', 'earnings_yield_month', 'real_price_year', 'real_price_month', 'inflation_adjusted_price_year', 'inflation_adjusted_price_month', 'sales_year', 'sales_quarter', 'sales_growth_year', 'sales_growth_quarter', 'real_sales_year', 'real_sales_quarter', 'real_sales_growth_year', 'real_sales_growth_quarter', 'price_to_sales_year', 'price_to_sales_quarter', 'price_to_book_value_year', 'price_to_book_value_quarter', 'book_value_year', 'book_value_quarter'], str], list[Union[Literal['shiller_pe_month', 'shiller_pe_year', 'pe_year', 'pe_month', 'dividend_year', 'dividend_month', 'dividend_growth_quarter', 'dividend_growth_year', 'dividend_yield_year', 'dividend_yield_month', 'earnings_year', 'earnings_month', 'earnings_growth_year', 'earnings_growth_quarter', 'real_earnings_growth_year', 'real_earnings_growth_quarter', 'earnings_yield_year', 'earnings_yield_month', 'real_price_year', 'real_price_month', 'inflation_adjusted_price_year', 'inflation_adjusted_price_month', 'sales_year', 'sales_quarter', 'sales_growth_year', 'sales_growth_quarter', 'real_sales_year', 'real_sales_quarter', 'real_sales_growth_year', 'real_sales_growth_quarter', 'price_to_sales_year', 'price_to_sales_quarter', 'price_to_book_value_year', 'price_to_book_value_quarter', 'book_value_year', 'book_value_quarter'], str]]]"}),(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.em,{children:"Default:"})," pe_month",(0,n.jsx)("br",{}),"\nThe name of the series. Defaults to 'pe_month'. Multiple items allowed for provider(s): multpl."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"start_date"}),": ",(0,n.jsx)(r.code,{children:"date | str"}),(0,n.jsx)("br",{}),"\nStart date of the data, in YYYY-MM-DD format."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"end_date"}),": ",(0,n.jsx)(r.code,{children:"date | str"}),(0,n.jsx)("br",{}),"\nEnd date of the data, in YYYY-MM-DD format."]})]}),(0,n.jsxs)(o.A,{value:"multpl",label:"multpl",children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"series_name"}),": ",(0,n.jsx)(r.code,{children:"Union[Union[Literal['shiller_pe_month', 'shiller_pe_year', 'pe_year', 'pe_month', 'dividend_year', 'dividend_month', 'dividend_growth_quarter', 'dividend_growth_year', 'dividend_yield_year', 'dividend_yield_month', 'earnings_year', 'earnings_month', 'earnings_growth_year', 'earnings_growth_quarter', 'real_earnings_growth_year', 'real_earnings_growth_quarter', 'earnings_yield_year', 'earnings_yield_month', 'real_price_year', 'real_price_month', 'inflation_adjusted_price_year', 'inflation_adjusted_price_month', 'sales_year', 'sales_quarter', 'sales_growth_year', 'sales_growth_quarter', 'real_sales_year', 'real_sales_quarter', 'real_sales_growth_year', 'real_sales_growth_quarter', 'price_to_sales_year', 'price_to_sales_quarter', 'price_to_book_value_year', 'price_to_book_value_quarter', 'book_value_year', 'book_value_quarter'], str], list[Union[Literal['shiller_pe_month', 'shiller_pe_year', 'pe_year', 'pe_month', 'dividend_year', 'dividend_month', 'dividend_growth_quarter', 'dividend_growth_year', 'dividend_yield_year', 'dividend_yield_month', 'earnings_year', 'earnings_month', 'earnings_growth_year', 'earnings_growth_quarter', 'real_earnings_growth_year', 'real_earnings_growth_quarter', 'earnings_yield_year', 'earnings_yield_month', 'real_price_year', 'real_price_month', 'inflation_adjusted_price_year', 'inflation_adjusted_price_month', 'sales_year', 'sales_quarter', 'sales_growth_year', 'sales_growth_quarter', 'real_sales_year', 'real_sales_quarter', 'real_sales_growth_year', 'real_sales_growth_quarter', 'price_to_sales_year', 'price_to_sales_quarter', 'price_to_book_value_year', 'price_to_book_value_quarter', 'book_value_year', 'book_value_quarter'], str]]]"}),(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.em,{children:"Default:"})," pe_month",(0,n.jsx)("br",{}),"\nThe name of the series. Defaults to 'pe_month'. Multiple items allowed for provider(s): multpl."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"start_date"}),": ",(0,n.jsx)(r.code,{children:"date | str"}),(0,n.jsx)("br",{}),"\nStart date of the data, in YYYY-MM-DD format."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"end_date"}),": ",(0,n.jsx)(r.code,{children:"date | str"}),(0,n.jsx)("br",{}),"\nEnd date of the data, in YYYY-MM-DD format."]})]})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"results"}),": ",(0,n.jsx)(r.code,{children:"list[SP500Multiples]"})]}),"\n",(0,n.jsx)(r.p,{children:"Serializable results."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"provider"}),": ",(0,n.jsx)(r.code,{children:"Optional[Literal['multpl']]"})]}),"\n",(0,n.jsx)(r.p,{children:"Provider name."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"warnings"}),": ",(0,n.jsx)(r.code,{children:"Optional[list[Warning_]]"})]}),"\n",(0,n.jsx)(r.p,{children:"list of warnings."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"chart"}),": ",(0,n.jsx)(r.code,{children:"Optional[Chart]"})]}),"\n",(0,n.jsx)(r.p,{children:"Chart object."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"extra"}),": ",(0,n.jsx)(r.code,{children:"dict[str, Any]"})]}),"\n",(0,n.jsx)(r.p,{children:"Extra info."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"data",children:"Data"}),"\n",(0,n.jsxs)(l.A,{children:[(0,n.jsxs)(o.A,{value:"standard",label:"standard",children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"date"}),": ",(0,n.jsx)(r.code,{children:"date | str"}),(0,n.jsx)("br",{}),"\nThe date of the data."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"name"}),": ",(0,n.jsx)(r.code,{children:"str"}),(0,n.jsx)("br",{}),"\nName of the series."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"value"}),": ",(0,n.jsx)(r.code,{children:"Union[int, float]"}),(0,n.jsx)("br",{}),"\nValue of the series."]})]}),(0,n.jsxs)(o.A,{value:"multpl",label:"multpl",children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"date"}),": ",(0,n.jsx)(r.code,{children:"date | str"}),(0,n.jsx)("br",{}),"\nThe date of the data."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"name"}),": ",(0,n.jsx)(r.code,{children:"str"}),(0,n.jsx)("br",{}),"\nName of the series."]}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"value"}),": ",(0,n.jsx)(r.code,{children:"Union[int, float]"}),(0,n.jsx)("br",{}),"\nValue of the series."]})]})]})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},79329:(e,r,t)=>{t.d(r,{A:()=>i});t(96540);var a=t(34164);const n={tabItem:"tabItem_Ymn6"};var s=t(74848);function i(e){let{children:r,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(n.tabItem,i),hidden:t,children:r})}}}]);