"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[93040],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},32145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"platform/developer_guide/architecture_overview","title":"Architecture Overview","description":"This guide provides insights into the architecture and components of the OpenBB Platform. It covers the key classes, import statements, and the TET pattern used in building the Fetcher classes.","source":"@site/content/platform/developer_guide/architecture_overview.mdx","sourceDirName":"platform/developer_guide","slug":"/platform/developer_guide/architecture_overview","permalink":"/platform/developer_guide/architecture_overview","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/platform/developer_guide/architecture_overview.mdx","tags":[],"version":"current","lastUpdatedBy":"Danglewood","lastUpdatedAt":1756858465000,"sidebarPosition":1,"frontMatter":{"title":"Architecture Overview","sidebar_position":1,"description":"This guide provides insights into the architecture and components of the OpenBB Platform. It covers the key classes, import statements, and the TET pattern used in building the Fetcher classes.","keywords":["OpenBB Platform Architecture","Python Interface","Build script","FastAPI","API","Key Classes","Import Statements","TET Pattern","Fetcher Classes","Core Dependencies"]},"sidebar":"tutorialSidebar","previous":{"title":"Commitments of Traders","permalink":"/platform/usage/examples/commitments_of_traders"},"next":{"title":"Data Provider","permalink":"/platform/developer_guide/data_provider"}}');var i=t(74848),r=t(28453),o=t(39068);const a={title:"Architecture Overview",sidebar_position:1,description:"This guide provides insights into the architecture and components of the OpenBB Platform. It covers the key classes, import statements, and the TET pattern used in building the Fetcher classes.",keywords:["OpenBB Platform Architecture","Python Interface","Build script","FastAPI","API","Key Classes","Import Statements","TET Pattern","Fetcher Classes","Core Dependencies"]},d=void 0,l={},c=[{value:"Overview",id:"overview",level:2},{value:"Python Interface",id:"python-interface",level:3},{value:"API Interface",id:"api-interface",level:3},{value:"Providers",id:"providers",level:2},{value:"QueryParams Class",id:"queryparams-class",level:3},{value:"Data Class",id:"data-class",level:3},{value:"The TET Pattern",id:"the-tet-pattern",level:4},{value:"Extensions",id:"extensions",level:2},{value:"Routers",id:"routers",level:3},{value:"@router.command",id:"routercommand",level:3},{value:"Response Model",id:"response-model",level:4},{value:"OBBject Class",id:"obbject-class",level:3},{value:"Output Conversion",id:"output-conversion",level:4},{value:"OBBject Extensions",id:"obbject-extensions",level:4},{value:"Provider to Extension",id:"provider-to-extension",level:2},{value:"ProviderInterface",id:"providerinterface",level:3},{value:"Provider Extensions",id:"provider-extensions",level:4},{value:"Provider Class",id:"provider-class",level:3},{value:"Using Fetcher Class as a function",id:"using-fetcher-class-as-a-function",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.A,{title:"Architecture Overview - Developer Guidelines - Development | OpenBB Platform Docs"}),"\n",(0,i.jsx)(n.p,{children:"This page provides a general overview of the OpenBB Platform architecture and the key Python classes most processes interact with."}),"\n",(0,i.jsx)("img",{src:"https://openbb-cms.directus.app/assets/67ec2d35-b194-4ce2-8403-bfe274ac54b2.png",alt:"Overview",width:"100%"}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"openbb-core"})," package relies on a set of carefully selected Python libraries, including:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"FastAPI for building the API."}),"\n",(0,i.jsx)(n.li,{children:"Uvicorn as the ASGI server."}),"\n",(0,i.jsx)(n.li,{children:"Pandas for data manipulation and analysis."}),"\n",(0,i.jsx)(n.li,{children:"Pydantic for data validation and serialization using Python type annotations."}),"\n",(0,i.jsx)(n.li,{children:"Requests/AIOHTTP for making HTTP requests."}),"\n",(0,i.jsx)(n.li,{children:"WebSockets for handling WebSocket connections."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The current specifications can be found in the ",(0,i.jsx)(n.code,{children:"pyproject.toml"})," ",(0,i.jsx)(n.a,{href:"https://raw.githubusercontent.com/OpenBB-finance/OpenBB/refs/heads/develop/openbb_platform/core/pyproject.toml",children:"file"})," of the GitHub repository."]}),"\n",(0,i.jsx)(n.admonition,{title:"Deploying Custom Applications",type:"info",children:(0,i.jsx)(n.p,{children:"Keeping the application as lean as possible is crucial for maintaining its performance, and to eliminate bloat. Install only the components required to get the job(s) done."})}),"\n",(0,i.jsx)(n.p,{children:"With just the Core, there are no routers or endpoints. Users and developers are free to create their own combinations of extensions, tailored to suit specific requirements."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"openbb-core"})," package comes with the ability to operate two, independent, interfaces."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Python Interface","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Python application wrapping the installed routers."}),"\n",(0,i.jsxs)(n.li,{children:["A build script writes static files to create the application, which includes all installed extensions.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Docstrings and function signatures are generated by this process."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Configurable, and extendable, response object handling data validation, timestamping, and more."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["REST API","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An instance of FastAPI"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The application - both Python Interface and REST API - share core logic and models. It is the product of all installed ",(0,i.jsx)(n.a,{href:"/platform/usage/extensions/overview",children:"extensions"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"All routes are a subclass of the Router class."}),"\n",(0,i.jsx)(n.h3,{id:"python-interface",children:"Python Interface"}),"\n",(0,i.jsxs)(n.admonition,{title:"Key Information",type:"important",children:[(0,i.jsx)(n.p,{children:"The build script requires write access to the site-packages folder, post-installation, for generating static assets."}),(0,i.jsx)(n.p,{children:"When a new extension is installed, or removed, the static assets must be regenerated in order to reflect the changes."}),(0,i.jsxs)(n.p,{children:["Remote deployments utilizing the interface should invoke the ",(0,i.jsx)(n.code,{children:"openbb-build"})," command line script from the shell script establishing the environment, packages, and file system."]})]}),"\n",(0,i.jsx)(n.p,{children:"Using the import below initializes the application instance from static files generated by the build script."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb import obb\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The build script is not part of the ",(0,i.jsx)(n.code,{children:"openbb-core"})," package. It is in the main package (",(0,i.jsx)(n.code,{children:"pip install openbb"}),"), and it can be installed without any other components."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"openbb"})," is not an installed package, but ",(0,i.jsx)(n.code,{children:"openbb-core"})," is:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"pip install openbb --no-deps\n"})}),"\n",(0,i.jsx)(n.p,{children:"To build the assets:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import openbb\n\nopenbb.build()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Restart the Python interpreter to begin using the application with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb import obb\n"})}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, the process above can be run from the command line shell:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"openbb-build\n"})}),"\n",(0,i.jsx)(n.p,{children:"The bare interface includes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Deprecated"})," /account: This module is deprecated and will be removed in a future version."]}),"\n",(0,i.jsxs)(n.li,{children:["/user: The ",(0,i.jsx)(n.a,{href:"/platform/settings/environment_variables",children:(0,i.jsx)(n.code,{children:"user_settings.json"})})," object."]}),"\n",(0,i.jsxs)(n.li,{children:["/system: The ",(0,i.jsx)(n.a,{href:"/platform/settings/system_settings",children:(0,i.jsx)(n.code,{children:"system_settings.json"})})," object."]}),"\n",(0,i.jsx)(n.li,{children:"/coverage: Information and metadata about the data provider extensions and their definitions (providers, commands, command_model, command_schemas, reference)"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Python Settings",type:"tip",children:(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/platform/settings/system_settings",children:(0,i.jsx)(n.code,{children:"system_settings.json"})})," for configuring runtime parameters."]})}),"\n",(0,i.jsx)(n.h3,{id:"api-interface",children:"API Interface"}),"\n",(0,i.jsxs)(n.p,{children:["Items described immediately above will be included as routers by setting the ",(0,i.jsx)(n.a,{href:"/platform/settings/environment_variables",children:"environment variable"}),", ",(0,i.jsx)(n.code,{children:"OPENBB_DEV_MODE='1'"})]}),"\n",(0,i.jsx)(n.p,{children:"The FastAPI instance, with all installed routers and extensions, can be imported with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.rest_api import app\n"})}),"\n",(0,i.jsx)(n.p,{children:"Launched via Uvicorn:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"uvicorn openbb_core.rest_api:app\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"API Settings",type:"tip",children:(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/platform/settings/system_settings",children:(0,i.jsx)(n.code,{children:"system_settings.json"})})," for configuring runtime parameters."]})}),"\n",(0,i.jsx)(n.h2,{id:"providers",children:"Providers"}),"\n",(0,i.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:(0,i.jsx)("img",{src:"https://openbb-cms.directus.app/assets/cc978d76-269b-4793-a0bf-fe892b757e89.png",alt:"Providers",width:"60%"})}),"\n",(0,i.jsx)(n.h3,{id:"queryparams-class",children:"QueryParams Class"}),"\n",(0,i.jsxs)(n.p,{children:["The QueryParams class is a standardized model for handling query input parameters. Similar to ",(0,i.jsx)(n.code,{children:"Data"}),", it is a subclass of ",(0,i.jsx)(n.code,{children:"pydantic.BaseModel"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Behaviour described here is mostly applicable to endpoints utilizing the ",(0,i.jsx)(n.code,{children:"ProviderInterface"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The class is used by the ",(0,i.jsx)(n.code,{children:"ProviderInterface"})," to validate, merge, and discriminate endpoint parameters shared by multiple provider extensions."]}),"\n",(0,i.jsxs)(n.p,{children:["Along with ",(0,i.jsx)(n.code,{children:"__alias_dict__"}),", ",(0,i.jsx)(n.code,{children:"QueryParams"})," uses ",(0,i.jsx)(n.code,{children:"__json_schema_extra__"})," to constrict parameter inputs, and to deterimine when more than one entry should be accepted as a list."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.provider.abstract.query_params import QueryParams\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'"""Some Query Model."""\n\nfrom datetime import date as dateType\nfrom typing import Optional\nfrom warnings import warn\n\nfrom openbb_core.provider.abstract.query_params import QueryParams\nfrom pydantic import Field, field_validator\n\n\nclass SomeQueryParams(QueryParams):\n    """Some Query Parameters."""\n\n    __alias_dict__ = {\n        "symbol": "ticker",\n        "start_date": "begin",\n        # "input_field": "output_alias"\n    }\n    __json_schema_extra__ = {\n        "symbol": {"multiple_items_allowed": True, "choices": SOME_SYMBOL_LIST},\n        "interval": {"multiple_items_allowed": False},  # No need to define this, it is the default behaviour.\n    }\n\n    symbol: str = Field(description="The ticker symbol.")\n    interval: Literal["1d", "1w", "1m"] = Field(\n        default="1d",\n        description="The interval of the timeseries. Choices: ["1d", "1w", "1m"]",\n    )\n    start_date: Optional[dateType] = Field(\n        default=None,\n        description="The start date, as YYYY-MM-SS, or datetime.date object",\n    )\n    end_date: Optional[dateType] = Field(\n        default=None,\n        description="The end date, as YYYY-MM-SS, or datetime.date object",\n    )\n\n    @field_validator("symbol", mode="before", check_fields=False)\n    @classmethod\n    def _validate_symbol(cls, v) -> str:\n        """Validate the symbol."""\n        if not v:\n            raise ValueError("Please enter a symbol.")\n        symbol = v if isinstance(v, list) else v.upper().split(",")\n\n        new_symbols: list = []\n\n        for s in symbol:\n            if s not in SOME_SYMBOL_LIST:\n                msg = f"Invalid symbol provided {s}"\n                warn(msg)\n                continue\n            new_symbols.append(s)\n\n        if not new_symbols:\n            raise ValueError(f"No valid symbols supplied. Choices are: {SOME_SYMBOL_LIST}")\n\n        return ",".join(new_symbols)\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"data-class",children:"Data Class"}),"\n",(0,i.jsxs)(n.p,{children:["The OpenBB Standardized Data Model, and is a subclass of ",(0,i.jsx)(n.code,{children:"pydantic.BaseModel"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This is the base class for all data returned via the ",(0,i.jsx)(n.code,{children:"ProviderInterface"}),", and is used for ",(0,i.jsx)(n.code,{children:"POST"})," requests to the ",(0,i.jsx)(n.code,{children:"data"})," field."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.provider.abstract.data import Data\n"})}),"\n",(0,i.jsx)(n.p,{children:"Key Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dynamic field support: Dynamically handles fields that are not pre-defined in the model,"}),"\n",(0,i.jsx)(n.li,{children:"Alias handling: Maintain compatibility with different naming conventions across various data formats."}),"\n",(0,i.jsx)(n.li,{children:"Datetime/string interoperability."}),"\n"]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Direct instantiation\ndata_record = Data(name="OpenBB", value=42)\n\n# Conversion from a dictionary\ndata_dict = {"name": "OpenBB", "value": 42}\ndata_record = Data(**data_dict)\n\n# __alias_dict__\nclass SomeData(Data):\n    """Some Data Model."""\n\n    __alias_dict__ = {\n        "output_field": "someWhackyInputName",\n    }\n    output_field: str = Field(description="My Output")\n\nSomeData(someWhackyInputName="Some Output")\n'})}),(0,i.jsx)(n.p,{children:"Output:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"SomeData(output_field=Some Output)\n"})})]}),"\n",(0,i.jsx)(n.p,{children:"Using  as a function"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Fetcher"})," class imposes a standardized structure, namely:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Transform the query: output of this method should be ",(0,i.jsx)(n.code,{children:"QueryParams"})," child."]}),"\n",(0,i.jsxs)(n.li,{children:["Extract the data: output of this method can be ",(0,i.jsx)(n.code,{children:"Any"})," but it's recommended to be a ",(0,i.jsx)(n.code,{children:"dict"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Transform the data: output of this method should be a ",(0,i.jsx)(n.code,{children:"List[Data]"})," or ",(0,i.jsx)(n.code,{children:"Data"})," (or a child of it - i.e. SomeData)."]}),"\n",(0,i.jsx)(n.li,{children:"Built-in test for verifying basic operation at each stage."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"the-tet-pattern",children:"The TET Pattern"}),"\n",(0,i.jsxs)(n.p,{children:["Each ",(0,i.jsx)(n.code,{children:"Fetcher"})," follows this pattern. It stands for ",(0,i.jsx)(n.strong,{children:"Transform, Extract, Transform"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The workflow divides data collection into three, seperate, tasks."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/OpenBB-finance/OpenBB/assets/48914296/ae9908be-00c0-40af-8acb-afeeb9629f2b",alt:"Diagram"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.provider.abstract.fetcher import Fetcher\n"})}),"\n",(0,i.jsx)(n.p,{children:"The generic methods are meant to be overwritten with the implementation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'\nclass SomeFetcher(Fetcher[SomeQueryParams, list[SomeData]]):\n    """Some Fetcher."""\n\n    # Tell query executor if credentials are required. Can be overridden by subclasses.\n    # Useful if a provider has some endpoints requiring API keys, but not all.\n    require_credentials = False\n\n    @staticmethod\n    def transform_query(params: dict[str, Any]) -> SomeQueryParams:\n        """Transform the params to the provider-specific query."""\n        raise NotImplementedError\n\n    @staticmethod\n    async def aextract_data(query: SomeQueryParams, credentials: Optional[dict[str, str]], **kwargs: Any) -> dict:\n        """Asynchronously extract the data from the provider."""\n        raise NotImplementedError\n\n    @staticmethod\n    def extract_data(query: SomeQueryParams, credentials: Optional[dict[str, str]], **kwargs: Any) -> dict:\n        """Extract the data from the provider."""\n        raise NotImplementedError\n\n    @staticmethod\n    def transform_data(query: SomeQueryParams, data: dict, **kwargs: Any) -> list[SomeData]:\n        """Transform the provider-specific data."""\n        raise NotImplementedError\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"Notes",type:"note",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["One of, ",(0,i.jsx)(n.code,{children:"extract_data"}),", or, ",(0,i.jsx)(n.code,{children:"aextract_data"}),", must be implemented."]}),"\n",(0,i.jsx)(n.li,{children:"All parameters for these methods are positional and should be defined as described above."}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"extensions",children:"Extensions"}),"\n",(0,i.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:(0,i.jsx)("img",{src:"https://openbb-cms.directus.app/assets/a25f6c03-19a8-4775-9e52-180aff8bf186.png",alt:"Extensions",width:"60%"})}),"\n",(0,i.jsx)(n.h3,{id:"routers",children:"Routers"}),"\n",(0,i.jsxs)(n.p,{children:["Router extensions are registered in the ",(0,i.jsx)(n.code,{children:"pyproject.toml"})," file, and installed as a Python package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[tool.poetry.plugins."openbb_core_extension"]\nmy_router = "my_router.my_router:router"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Router"})," class is a subclass of ",(0,i.jsx)(n.code,{children:"fastapi.APIRouter"}),", helping validate and complete function signatures, ensuring that the functions registered as API endpoints have the correct parameters and return types."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.provider.app.router import Router\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initialize the class with a prefix and description."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'some_router = Router(prefix="", description="Some description of this router.")\nsome_router.include_router(some_sub_router)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"api_router"})," property provides access to the underlying APIRouter instance, allowing for direct interaction with the FastAPI routing system, if needed."]}),"\n",(0,i.jsx)(n.h3,{id:"routercommand",children:"@router.command"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"@router.command"})," decorator is exposed upon initialization, extending the functionality of ",(0,i.jsx)(n.code,{children:"FastAPI().add_api_route()"})," to include additional parameters:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"model"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'A model name shared by all Provider extensions feeding the same input - i.e, "EquityHistorical"'}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"examples"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Examples for use to include in documentation and Python docstring - see the page ",(0,i.jsx)(n.a,{href:"extensions",children:"here"})," for an explanation."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"no_validate"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A flag to disable response validation for the endpoint.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The output type is assigned as ",(0,i.jsx)(n.code,{children:"Any"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["All other arguments and keyword arguments are passed to ",(0,i.jsx)(n.code,{children:"APIRouter.add_api_route"})," - i.e, ",(0,i.jsx)(n.code,{children:"openapi_extra=dict(some_key=some_value)"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"response-model",children:"Response Model"}),"\n",(0,i.jsx)(n.p,{children:"Define the response model as part of the function's definition."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@router.command(\n    methods=["POST"],\n    examples=[\n        PythonEx(\n            description="Calculate HMA with historical stock data.",\n            code=[\n                "stock_data = obb.equity.price.historical(symbol=\'TSLA\', start_date=\'2023-01-01\', provider=\'fmp\')",\n                "hma_data = obb.technical.hma(data=stock_data.results, target=\'close\', length=50, offset=0)",\n            ],\n        ),\n    ],\n)\ndef hma(\n    data: list[Data],\n    target: str = "close",\n    index: str = "date",\n    length: int = 50,\n    offset: int = 0,\n) -> list[Data]: ...\n'})}),"\n",(0,i.jsx)(n.h3,{id:"obbject-class",children:"OBBject Class"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"OBBject"})," class is the standard response object from output functions, and has the following attributes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"results"}),": Serializable data that was returned by the command."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),": The name of the provider that was used to obtain the data, if any."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"warnings"}),": Warnings generated by the command execution."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"extra"}),": Additional metadata about the command run, including any arguments, the route, the timestamp, etc."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"It is extendable, similar to a Pandas extension, and has methods for converting the results to different formats."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.app.model.obbject import OBBject\n"})}),"\n",(0,i.jsxs)(n.p,{children:["A bare instance can be created by defining ",(0,i.jsx)(n.code,{children:"results"})," as None."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"obbject = OBBject(results=None)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-conversion",children:"Output Conversion"}),"\n",(0,i.jsx)(n.p,{children:"Various formats and filtering can be applied to the function's output."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"model_dump()"}),": Pydantic method for converting the complete object to a Python dictionary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"model_dump_json()"}),": Pydantic method for converting the complete object to a serialized JSON string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"to_df()"}),": Alias for ",(0,i.jsx)(n.code,{children:"to_dataframe()"}),", and converts the contents of ",(0,i.jsx)(n.code,{children:"obbject.results"})," to a Pandas DataFrame."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"to_dict()"}),": Converts the contents of ",(0,i.jsx)(n.code,{children:"obbject.results"})," to a Python dictionary object with a given ",(0,i.jsx)(n.code,{children:"orientation"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"to_numpy()"}),": Convert the contents of ",(0,i.jsx)(n.code,{children:"obbject.results"})," to a NumPy array."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"to_polars()"}),": Converts the contents of ",(0,i.jsx)(n.code,{children:"obbject.results"})," to a Polars DataFrame."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Polars is not included with OpenBB packages and must be installed."})}),"\n",(0,i.jsx)(n.h4,{id:"obbject-extensions",children:"OBBject Extensions"}),"\n",(0,i.jsxs)(n.p,{children:["An OBBject extension is created by defining ",(0,i.jsx)(n.code,{children:"pyproject.toml"})," and installing the package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[tool.poetry.plugins."openbb_obbject_extension"]\nsome_extension = "some_extension:ext"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The module's ",(0,i.jsx)(n.code,{children:"__init__.py"})," file creates an instance of the extension object, and is attached to the output of every command."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from openbb_core.app.model.extension import Extension\n\next = Extension(name="some_extension")\n\n@ext.obbject_accessor\nclass SomeExtension:\n    def __init__(self, obbject):\n        self._obbject = obbject\n\n    def hello(self):\n        print(f"Say Hello!")\n'})}),"\n",(0,i.jsxs)(n.p,{children:["An example of this type of extension is, ",(0,i.jsx)(n.a,{href:"https://pypi.org/project/openbb-charting/",children:(0,i.jsx)(n.code,{children:"openbb-charting"})}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"provider-to-extension",children:"Provider to Extension"}),"\n",(0,i.jsx)("img",{src:"https://openbb-cms.directus.app/assets/67ec2d35-b194-4ce2-8403-bfe274ac54b2.png",alt:"Overview",width:"100%"}),"\n",(0,i.jsx)(n.h3,{id:"providerinterface",children:"ProviderInterface"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ProviderInterface"})," is the map of all installed provider extensions to their respective callables, and is a Singleton accepting no initialization parameters."]}),"\n",(0,i.jsxs)(n.p,{children:["It is responsible for handling the ",(0,i.jsx)(n.code,{children:"provider"})," parameter - i.e, ",(0,i.jsx)(n.code,{children:'provider="yfinance"'})," at execution, and is called by internal processes."]}),"\n",(0,i.jsx)(n.p,{children:"There is not a general need to interact with this class directly; however, it is useful to know that it exists."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.app.provider_interface import ProviderInterface\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Each item in the ",(0,i.jsx)(n.code,{children:"ProviderInterface"})," maps to a ",(0,i.jsx)(n.code,{children:"Fetcher"}),", which executes the TET pattern."]}),"\n",(0,i.jsx)(n.h4,{id:"provider-extensions",children:"Provider Extensions"}),"\n",(0,i.jsxs)(n.p,{children:["A provider extension is created by defining ",(0,i.jsx)(n.code,{children:"pyproject.toml"})," and installing the package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[tool.poetry.plugins."openbb_provider_extension"]\nsome_provider = "some_provider:some_provider"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["It is a collection of data-collecting Fetchers that should be added to the application via the ",(0,i.jsx)(n.code,{children:"provider"})," parameter."]}),"\n",(0,i.jsx)(n.h3,{id:"provider-class",children:"Provider Class"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Provider"})," class is initialized in the ",(0,i.jsx)(n.code,{children:"__init__.py"})," file of a provider extension module."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from openbb_core.provider.abstract.provider import Provider\n"})}),"\n",(0,i.jsxs)(n.p,{children:["It maps the ",(0,i.jsx)(n.code,{children:"Router"})," to the ",(0,i.jsx)(n.code,{children:"Provider"}),", and defines other key metadata for the extension. The example below is from ",(0,i.jsx)(n.code,{children:"openbb-bls"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This is how the ",(0,i.jsx)(n.code,{children:"ProviderInterface"})," maps any ",(0,i.jsx)(n.code,{children:'@router.command(model="SomeModel")'})," function to all known instances."]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'"""BLS Provider Module."""\n\nfrom openbb_bls.models.search import BlsSearchFetcher\nfrom openbb_bls.models.series import BlsSeriesFetcher\nfrom openbb_core.provider.abstract.provider import Provider\n\nbls_provider = Provider(\n    name="bls",\n    website="https://www.bls.gov/developers/api_signature_v2.htm",\n    description="The Bureau of Labor Statistics\' (BLS) Public Data Application Programming Interface (API)"\n    + " gives the public access to economic data from all BLS programs."\n    + " It is the Bureau\'s hope that talented developers and programmers will use the BLS Public Data API to create"\n    + " original, inventive applications with published BLS data.",\n    credentials=["api_key"],\n    fetcher_dict={\n        "BlsSearch": BlsSearchFetcher,\n        "BlsSeries": BlsSeriesFetcher,\n    },\n    repr_name="Bureau of Labor Statistics\' (BLS) Public Data API",\n    instructions="Sign up for a free API key here: https://data.bls.gov/registrationEngine/",\n)\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"using-fetcher-class-as-a-function",children:"Using Fetcher Class as a function"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"Fetcher"})," can be executed without initialization, as an async function. It requires two positional arguments as dictionaries:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"query"})," - a dictionary to be converted into the QueryParams class."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"credentials"})," - a dictionary of credentials required for the provider and endpoint.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pass as an empty dictionary when no credentials are required."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'results = await SomeFetcher.fetch_data({"symbol": "btcusd"}, {})\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The return is the output of ",(0,i.jsx)(n.code,{children:"SomeFetcher.tranform_data"})]}),"\n",(0,i.jsxs)(n.p,{children:["To implement the ",(0,i.jsx)(n.code,{children:"ProviderInterface"})," as a ",(0,i.jsx)(n.code,{children:"Router"})," endpoint, follow the pattern below in the extension's ",(0,i.jsx)(n.code,{children:"router"})," file."]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'\nfrom openbb_core.app.model.command_context import CommandContext  # A FastAPI Depends injection with the initialized user and system preferences\nfrom openbb_core.app.model.obbject import OBBject  # The OpenBB standard response object with output validation.\nfrom openbb_core.app.provider_interface import (\n    ExtraParams, # All provider-specific parameters.\n    ProviderChoices, # All providers feeding the endpoint.\n    StandardParams,  # Parameters defined in the common \'Standard\' model, if any.\n)\nfrom openbb_core.app.query import Query  # The query executor.\nfrom openbb_core.app.router import Router\n\n\nrouter = Router(prefix="", description="Some Router.")\n\n\n@router.command(\n    model="SomeModel",\n    examples=[\n        APIEx(parameters={"symbol": "btcusd", "interval": "1d", "provider": "some_provider"}),\n    ],\n)\nasync def some_function(\n    cc: CommandContext,\n    provider_choices: ProviderChoices,\n    standard_params: StandardParams,\n    extra_params: ExtraParams,\n) -> OBBject:\n    """Use the `SomeModel` Fetcher."""\n    return await OBBject.from_query(Query(**locals()))\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},39068:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var s=t(27143),i=t(74848);function r(e){let{title:n}=e;return(0,i.jsx)(s.A,{children:(0,i.jsx)("title",{children:n})})}}}]);