"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[27740],{25761:(e,t,r)=>{r.d(t,{A:()=>w});var n=r(56347),s=r(65627),a=r(96540),o=r(50372),i=r(30604),c=r(11861),l=r(78749);function d(e){return function(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}function h(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??d(r);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function u(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const s=(0,n.W6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(s.location.search);t.set(o,e),s.replace({...s.location,search:t.toString()})}),[o,s])]}function x(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,s=h(e),[i,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[d,x]=p({queryString:r,groupId:n}),[m,j]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,l.Dv)(r);return[n,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:n}),f=(()=>{const e=d??m;return u({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{f&&c(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),x(e),j(e)}),[x,j,s]),tabValues:s}}var m=r(9136),j=r(34164);const f={tabList:"tabList_TRJ7",tabItem:"tabItem_hGfb"};var b=r(74848);function v(e){let{className:t,block:r,selectedValue:a,selectValue:o,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),{pathname:d}=(0,n.zy)(),h=e=>{const t=e.currentTarget,r=c.indexOf(t),n=i[r].value;n!==a&&(l(t),o(n))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return(0,b.jsx)("div",{className:"border-b border-grey-400 inline-block",children:(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,j.A)("_group-tab list-none m-0 p-0 flex"),children:i.map((e=>{let{value:t,label:r,attributes:n}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>c.push(e),onKeyDown:u,onClick:h,...n,className:(0,j.A)("font-bold tracking-widest uppercase text-lg cursor-pointer mr-4 pb-2 border-b-2 -mb-px first:pl-0 pl-2",f.tabItem,n?.className,{"pointer-events-none":a===t,"text-[#669dcb] border-[#669dcb]":a===t&&d.startsWith("/workspace"),"text-[#FB923C] border-[#FB923C]":a===t&&d.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#ffd4b1] hover:border-[#ffd4b1]":a!==t&&d.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#abd2f1] hover:border-[#abd2f1]":a!==t&&d.startsWith("/workspace")}),children:r??t},t)}))})})}function g(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function y(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,j.A)("tabs-container",f.tabList),children:[(0,b.jsx)(v,{...e,...t}),(0,b.jsx)(g,{...e,...t})]})}function w(e){const t=(0,m.A)();return(0,b.jsx)(y,{...e},String(t))}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(96540);const s={},a=n.createContext(s);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:t},e.children)}},39068:(e,t,r)=>{r.d(t,{A:()=>a});r(96540);var n=r(27143),s=r(74848);function a(e){let{title:t}=e;return(0,s.jsx)(n.A,{children:(0,s.jsx)("title",{children:t})})}},79329:(e,t,r)=>{r.d(t,{A:()=>o});r(96540);var n=r(34164);const s={tabItem:"tabItem_Ymn6"};var a=r(74848);function o(e){let{children:t,hidden:r,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,o),hidden:r,children:t})}},89954:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"python/reference/etf/discovery/active","title":"active","description":"Learn how to get the most active ETFs using the ETF discovery API. This  page provides documentation for the parameters, returns, and data associated with  the API endpoint. Understand how to use the sorting, limiting, and provider parameters  and explore the returned results, chart object, and metadata. Find details about  the data fields including symbol, name, last price, percent change, net change,  volume, date, country, mantissa, type, and formatted values. Retrieve the source  url for additional information.","source":"@site/content/python/reference/etf/discovery/active.md","sourceDirName":"python/reference/etf/discovery","slug":"/python/reference/etf/discovery/active","permalink":"/python/reference/etf/discovery/active","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/reference/etf/discovery/active.md","tags":[],"version":"current","frontMatter":{"title":"active","description":"Learn how to get the most active ETFs using the ETF discovery API. This  page provides documentation for the parameters, returns, and data associated with  the API endpoint. Understand how to use the sorting, limiting, and provider parameters  and explore the returned results, chart object, and metadata. Find details about  the data fields including symbol, name, last price, percent change, net change,  volume, date, country, mantissa, type, and formatted values. Retrieve the source  url for additional information.","keywords":["ETFs","most active ETFs","ETF discovery","sort order","limit parameter","provider parameter","results","chart object","metadata","symbol","name","last price","percent change","net change","volume","date","country","mantissa","type","formatted price","formatted volume","formatted price change","formatted percent change","url"]},"sidebar":"tutorialSidebar","previous":{"title":"Discovery","permalink":"/python/reference/etf/discovery/"},"next":{"title":"gainers","permalink":"/python/reference/etf/discovery/gainers"}}');var s=r(74848),a=r(28453),o=r(39068),i=r(25761),c=r(79329);const l={title:"active",description:"Learn how to get the most active ETFs using the ETF discovery API. This  page provides documentation for the parameters, returns, and data associated with  the API endpoint. Understand how to use the sorting, limiting, and provider parameters  and explore the returned results, chart object, and metadata. Find details about  the data fields including symbol, name, last price, percent change, net change,  volume, date, country, mantissa, type, and formatted values. Retrieve the source  url for additional information.",keywords:["ETFs","most active ETFs","ETF discovery","sort order","limit parameter","provider parameter","results","chart object","metadata","symbol","name","last price","percent change","net change","volume","date","country","mantissa","type","formatted price","formatted volume","formatted price change","formatted percent change","url"]},d=void 0,h={},u=[{value:"Examples",id:"examples",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Data",id:"data",level:2}];function p(e){const t={code:"code",em:"em",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.A,{title:"etf/discovery/active - Reference | OpenBB Docs"}),"\n","\n",(0,s.jsx)(t.p,{children:"Get the most active ETFs."}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from openbb import obb\n# Get the most active ETFs.\nobb.etf.discovery.active(provider='wsj')\n"})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(c.A,{value:"standard",label:"standard",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"sort"}),": ",(0,s.jsx)(t.code,{children:"Literal['asc', 'desc']"}),(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.em,{children:"Default:"})," desc",(0,s.jsx)("br",{}),"\nSort order. Possible values: 'asc', 'desc'. Default: 'desc'."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"limit"}),": ",(0,s.jsx)(t.code,{children:"int"}),(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.em,{children:"Default:"})," 10",(0,s.jsx)("br",{}),"\nThe number of data entries to return."]})]}),(0,s.jsxs)(c.A,{value:"wsj",label:"wsj",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"sort"}),": ",(0,s.jsx)(t.code,{children:"Literal['asc', 'desc']"}),(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.em,{children:"Default:"})," desc",(0,s.jsx)("br",{}),"\nSort order. Possible values: 'asc', 'desc'. Default: 'desc'."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"limit"}),": ",(0,s.jsx)(t.code,{children:"int"}),(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.em,{children:"Default:"})," 10",(0,s.jsx)("br",{}),"\nThe number of data entries to return."]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"results"}),": ",(0,s.jsx)(t.code,{children:"list[ETFActive]"})]}),"\n",(0,s.jsx)(t.p,{children:"Serializable results."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"provider"}),": ",(0,s.jsx)(t.code,{children:"Optional[Literal['wsj']]"})]}),"\n",(0,s.jsx)(t.p,{children:"Provider name."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"warnings"}),": ",(0,s.jsx)(t.code,{children:"Optional[list[Warning_]]"})]}),"\n",(0,s.jsx)(t.p,{children:"list of warnings."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"chart"}),": ",(0,s.jsx)(t.code,{children:"Optional[Chart]"})]}),"\n",(0,s.jsx)(t.p,{children:"Chart object."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"extra"}),": ",(0,s.jsx)(t.code,{children:"dict[str, Any]"})]}),"\n",(0,s.jsx)(t.p,{children:"Extra info."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"data",children:"Data"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(c.A,{value:"standard",label:"standard",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"symbol"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nSymbol representing the entity requested in the data."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"name"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nName of the entity."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"last_price"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nLast price."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"percent_change"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nPercent change."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"net_change"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nNet change."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"volume"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nThe trading volume."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"date"}),": ",(0,s.jsx)(t.code,{children:"date | str"}),(0,s.jsx)("br",{}),"\nThe date of the data."]})]}),(0,s.jsxs)(c.A,{value:"wsj",label:"wsj",children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"symbol"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nSymbol representing the entity requested in the data."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"name"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nName of the entity."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"last_price"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nLast price."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"percent_change"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nPercent change."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"net_change"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nNet change."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"volume"}),": ",(0,s.jsx)(t.code,{children:"float"}),(0,s.jsx)("br",{}),"\nThe trading volume."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"date"}),": ",(0,s.jsx)(t.code,{children:"date | str"}),(0,s.jsx)("br",{}),"\nThe date of the data."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"country"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nCountry of the entity."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"mantissa"}),": ",(0,s.jsx)(t.code,{children:"int"}),(0,s.jsx)("br",{}),"\nMantissa."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"type"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nType of the entity."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"formatted_price"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nFormatted price."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"formatted_volume"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nFormatted volume."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"formatted_price_change"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nFormatted price change."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"formatted_percent_change"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nFormatted percent change."]}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"url"}),": ",(0,s.jsx)(t.code,{children:"str"}),(0,s.jsx)("br",{}),"\nThe source url."]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);