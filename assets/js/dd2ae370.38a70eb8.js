"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[83221],{25761:(e,t,r)=>{r.d(t,{A:()=>y});var n=r(56347),o=r(65627),s=r(96540),a=r(50372),l=r(30604),i=r(11861),d=r(78749);function c(e){return function(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:o}}=e;return{value:t,label:r,attributes:n,default:o}}))}function h(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??c(r);return function(e){const t=(0,i.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function u(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const o=(0,n.W6)(),a=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(o.location.search);t.set(a,e),o.replace({...o.location,search:t.toString()})}),[a,o])]}function x(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,o=h(e),[l,i]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[c,x]=p({queryString:r,groupId:n}),[m,j]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,d.Dv)(r);return[n,(0,s.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:n}),f=(()=>{const e=c??m;return u({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!u({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),x(e),j(e)}),[x,j,o]),tabValues:o}}var m=r(9136),j=r(34164);const f={tabList:"tabList_TRJ7",tabItem:"tabItem_hGfb"};var b=r(74848);function g(e){let{className:t,block:r,selectedValue:s,selectValue:a,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.a_)(),{pathname:c}=(0,n.zy)(),h=e=>{const t=e.currentTarget,r=i.indexOf(t),n=l[r].value;n!==s&&(d(t),a(n))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;t=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;t=i[r]??i[i.length-1];break}}t?.focus()};return(0,b.jsx)("div",{className:"border-b border-grey-400 inline-block",children:(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,j.A)("_group-tab list-none m-0 p-0 flex"),children:l.map((e=>{let{value:t,label:r,attributes:n}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>i.push(e),onKeyDown:u,onClick:h,...n,className:(0,j.A)("font-bold tracking-widest uppercase text-lg cursor-pointer mr-4 pb-2 border-b-2 -mb-px first:pl-0 pl-2",f.tabItem,n?.className,{"pointer-events-none":s===t,"text-[#669dcb] border-[#669dcb]":s===t&&c.startsWith("/workspace"),"text-[#FB923C] border-[#FB923C]":s===t&&c.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#ffd4b1] hover:border-[#ffd4b1]":s!==t&&c.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#abd2f1] hover:border-[#abd2f1]":s!==t&&c.startsWith("/workspace")}),children:r??t},t)}))})})}function v(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function _(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,j.A)("tabs-container",f.tabList),children:[(0,b.jsx)(g,{...e,...t}),(0,b.jsx)(v,{...e,...t})]})}function y(e){const t=(0,m.A)();return(0,b.jsx)(_,{...e},String(t))}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>l});var n=r(96540);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},79329:(e,t,r)=>{r.d(t,{A:()=>a});r(96540);var n=r(34164);const o={tabItem:"tabItem_Ymn6"};var s=r(74848);function a(e){let{children:t,hidden:r,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,a),hidden:r,children:t})}},94525:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"python/data_models/PortVolume","title":"Port Volume","description":"Daily port calls and estimates of trading volumes for ports around the world","source":"@site/content/python/data_models/PortVolume.md","sourceDirName":"python/data_models","slug":"/python/data_models/PortVolume","permalink":"/python/data_models/PortVolume","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/data_models/PortVolume.md","tags":[],"version":"current","frontMatter":{"title":"Port Volume","description":"Daily port calls and estimates of trading volumes for ports around the world"},"sidebar":"tutorialSidebar","previous":{"title":"Port Info","permalink":"/python/data_models/PortInfo"},"next":{"title":"Price Performance","permalink":"/python/data_models/PricePerformance"}}');var o=r(74848),s=r(28453),a=r(25761),l=r(79329);const i={title:"Port Volume",description:"Daily port calls and estimates of trading volumes for ports around the world"},d=void 0,c={},h=[{value:"Implementation details",id:"implementation-details",level:2},{value:"Class names",id:"class-names",level:3},{value:"Import Statement",id:"import-statement",level:3},{value:"Parameters",id:"parameters",level:2},{value:"Data",id:"data",level:2}];function u(e){const t={code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"implementation-details",children:"Implementation details"}),"\n",(0,o.jsx)(t.h3,{id:"class-names",children:"Class names"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Model name"}),(0,o.jsx)(t.th,{children:"Parameters class"}),(0,o.jsx)(t.th,{children:"Data class"})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"PortVolume"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"PortVolumeQueryParams"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"PortVolumeData"})})]})})]}),"\n",(0,o.jsx)(t.h3,{id:"import-statement",children:"Import Statement"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"from openbb_core.provider.standard_models.port_volume import (\nPortVolumeData,\nPortVolumeQueryParams,\n)\n"})}),"\n",(0,o.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(l.A,{value:"standard",label:"standard",children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"start_date"}),": ",(0,o.jsx)(t.code,{children:"date"}),(0,o.jsx)("br",{}),"\nStart date of the data, in YYYY-MM-DD format."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"end_date"}),": ",(0,o.jsx)(t.code,{children:"date | str"}),(0,o.jsx)("br",{}),"\nEnd date of the data, in YYYY-MM-DD format."]})]}),(0,o.jsxs)(l.A,{value:"econdb",label:"econdb",children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"start_date"}),": ",(0,o.jsx)(t.code,{children:"date"}),(0,o.jsx)("br",{}),"\nStart date of the data, in YYYY-MM-DD format."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"end_date"}),": ",(0,o.jsx)(t.code,{children:"date | str"}),(0,o.jsx)("br",{}),"\nEnd date of the data, in YYYY-MM-DD format."]})]}),(0,o.jsxs)(l.A,{value:"imf",label:"imf",children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"start_date"}),": ",(0,o.jsx)(t.code,{children:"date"}),(0,o.jsx)("br",{}),"\nStart date of the data, in YYYY-MM-DD format."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"end_date"}),": ",(0,o.jsx)(t.code,{children:"date | str"}),(0,o.jsx)("br",{}),"\nEnd date of the data, in YYYY-MM-DD format."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_code"}),": ",(0,o.jsx)(t.code,{children:"str | list[str]"}),(0,o.jsx)("br",{}),"\nPort code to filter results by a specific port. This parameter is ignored if ",(0,o.jsx)(t.code,{children:"country"})," parameter is provided. To get a list of available ports, use ",(0,o.jsx)(t.code,{children:"obb.economy.shipping.port_info()"}),". Multiple items allowed for provider(s): imf."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"country"}),": ",(0,o.jsx)(t.code,{children:"Literal['ABW', 'AGO', 'AIA', 'ALB', 'ARE', 'ARG', 'ASM', 'ATG', 'AUS', 'AZE', 'BEL', 'BEN', 'BES', 'BGD', 'BGR', 'BHR', 'BHS', 'BLM', 'BLZ', 'BRA', 'BRB', 'BRN', 'CAN', 'CHL', 'CHN', 'CIV', 'CMR', 'COD', 'COG', 'COK', 'COL', 'COM', 'CPV', 'CRI', 'CUB', 'CUW', 'CYM', 'CYP', 'DEU', 'DJI', 'DMA', 'DNK', 'DOM', 'DZA', 'ECU', 'EGY', 'ERI', 'ESP', 'EST', 'FIN', 'FJI', 'FRA', 'FRO', 'FSM', 'GAB', 'GBR', 'GEO', 'GHA', 'GIB', 'GIN', 'GLP', 'GMB', 'GNB', 'GNQ', 'GRC', 'GRD', 'GTM', 'GUF', 'GUM', 'GUY', 'HKG', 'HND', 'HRV', 'HTI', 'IDN', 'IND', 'IRL', 'IRN', 'IRQ', 'ISL', 'ISR', 'ITA', 'JAM', 'JOR', 'JPN', 'KAZ', 'KEN', 'KHM', 'KIR', 'KNA', 'KOR', 'KWT', 'LBN', 'LBR', 'LBY', 'LCA', 'LKA', 'LTU', 'LVA', 'MAC', 'MAF', 'MAR', 'MDA', 'MDG', 'MDV', 'MEX', 'MHL', 'MLT', 'MMR', 'MNE', 'MNP', 'MOZ', 'MRT', 'MSR', 'MTQ', 'MUS', 'MYS', 'MYT', 'NAM', 'NCL', 'NGA', 'NIC', 'NLD', 'NOR', 'NRU', 'NZL', 'OMN', 'PAK', 'PAN', 'PER', 'PHL', 'PLW', 'PNG', 'POL', 'PRI', 'PRT', 'PYF', 'QAT', 'REU', 'ROU', 'RUS', 'SAU', 'SDN', 'SEN', 'SGP', 'SLB', 'SLE', 'SLV', 'SOM', 'STP', 'SUR', 'SVN', 'SWE', 'SXM', 'SYC', 'SYR', 'TCA', 'TGO', 'THA', 'TKM', 'TLS', 'TON', 'TTO', 'TUN', 'TUR', 'TUV', 'TWN', 'TZA', 'UKR', 'URY', 'USA', 'VCT', 'VEN', 'VGB', 'VIR', 'VNM', 'VUT', 'WSM', 'YEM', 'ZAF']"}),(0,o.jsx)("br",{}),"\nCountry to focus on. Enter as a 3-letter ISO country code. This parameter is overridden by ",(0,o.jsx)(t.code,{children:"port_code"})," if both are provided."]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"data",children:"Data"}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(l.A,{value:"standard",label:"standard",children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"date"}),": ",(0,o.jsx)(t.code,{children:"date | str"}),(0,o.jsx)("br",{}),"\nThe date of the data."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_code"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nPort code."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_name"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nPort name."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"country"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nCountry where the port is located."]})]}),(0,o.jsxs)(l.A,{value:"econdb",label:"econdb",children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"date"}),": ",(0,o.jsx)(t.code,{children:"date | str"}),(0,o.jsx)("br",{}),"\nThe date of the data."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_code"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nPort code."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_name"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nPort name."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"country"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nCountry where the port is located."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"export_dwell_time"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nEconDB model estimate for the average number of days from when a container enters the terminal gates until it is loaded on a vessel. High dwelling times can indicate vessel delays."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"import_dwell_time"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nEconDB model estimate for the average number of days from when a container is discharged from a vessel until it exits the terminal gates. High dwelling times can indicate trucking or port congestion."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"import_teu"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nEconDB model estimate for the number of twenty-foot equivalent units (TEUs) of containers imported through the port."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"export_teu"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nEconDB model estimate for the number of twenty-foot equivalent units (TEUs) of containers exported through the port."]})]}),(0,o.jsxs)(l.A,{value:"imf",label:"imf",children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"date"}),": ",(0,o.jsx)(t.code,{children:"date | str"}),(0,o.jsx)("br",{}),"\nThe date of the data."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_code"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nPort code."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"port_name"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nPort name."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"country"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\nCountry where the port is located."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"country_code"}),": ",(0,o.jsx)(t.code,{children:"str"}),(0,o.jsx)("br",{}),"\n3-letter ISO country code of the country where the port is located."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"portcalls"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nTotal number of ships entering the port at this date. This is the sum of portcalls_container, portcalls_dry_bulk, portcalls_general_cargo, portcalls_roro and portcalls_tanker."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"portcalls_tanker"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nNumber of tankers transiting through the chokepoint or making a port call."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"portcalls_container"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nNumber of containers transiting through the chokepoint or making a port call."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"portcalls_general_cargo"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nNumber of general cargo ships transiting through the chokepoint or making a port call."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"portcalls_dry_bulk"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nNumber of dry bulk carriers transiting through the chokepoint or making a port call."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"portcalls_roro"}),": ",(0,o.jsx)(t.code,{children:"int"}),(0,o.jsx)("br",{}),"\nNumber of Ro-Ro ships transiting through the chokepoint or making a port call."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of all ships entering the port at this date. This is the sum of import_container, import_dry_bulk, import_general_cargo, import_roro and import_tanker."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports_cargo"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of all ships (excluding tankers) entering the port at this date. This is the sum of import_container, import_dry_bulk, import_general_cargo and import_roro."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports_tanker"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of tankers entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports_container"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of all container ships entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports_general_cargo"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of general cargo ships entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports_dry_bulk"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of dry bulk carriers entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"imports_roro"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal import volume (in metric tons) of Ro-Ro ships entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of all ships entering the port at this date. This is the sum of export_container, export_dry_bulk, export_general_cargo, export_roro and export_tanker."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports_cargo"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of all ships (excluding tankers) entering the port at this date. This is the sum of export_container, export_dry_bulk, export_general_cargo and export_roro."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports_tanker"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of tankers entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports_container"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of all container ships entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports_general_cargo"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of general cargo ships entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports_dry_bulk"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of dry bulk carriers entering the port at this date."]}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"exports_roro"}),": ",(0,o.jsx)(t.code,{children:"float"}),(0,o.jsx)("br",{}),"\nTotal export volume (in metric tons) of Ro-Ro ships entering the port at this date."]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);