"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[21369],{25853:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"workspace/developers/widget-parameters/cell-click-grouping","title":"Cell Click Grouping","description":"Learn how to implement cell click grouping in OpenBB Workspace widgets, allowing users to click on cells in a table to update related widgets","source":"@site/content/workspace/developers/widget-parameters/cell-click-grouping.md","sourceDirName":"workspace/developers/widget-parameters","slug":"/workspace/developers/widget-parameters/cell-click-grouping","permalink":"/workspace/developers/widget-parameters/cell-click-grouping","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/developers/widget-parameters/cell-click-grouping.md","tags":[],"version":"current","lastUpdatedBy":"DidierRLopes","lastUpdatedAt":1758054293000,"sidebarPosition":31,"frontMatter":{"title":"Cell Click Grouping","sidebar_position":31,"description":"Learn how to implement cell click grouping in OpenBB Workspace widgets, allowing users to click on cells in a table to update related widgets","keywords":["cell click grouping","table cell click","interactive tables","widget parameters","cell interaction"]},"sidebar":"tutorialSidebar","previous":{"title":"Input Form","permalink":"/workspace/developers/widget-parameters/input-form"},"next":{"title":"Parameter Grouping","permalink":"/workspace/developers/widget-parameters/parameter-grouping"}}');var i=n(74848),a=n(28453),s=n(39068);const r={title:"Cell Click Grouping",sidebar_position:31,description:"Learn how to implement cell click grouping in OpenBB Workspace widgets, allowing users to click on cells in a table to update related widgets",keywords:["cell click grouping","table cell click","interactive tables","widget parameters","cell interaction"]},o=void 0,c={},d=[];function p(e){const t={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.A,{title:"Cell Click Grouping | OpenBB Workspace Docs"}),"\n",(0,i.jsx)(t.p,{children:"A widget that demonstrates how to use cell clicks to trigger parameter updates across multiple widgets. This feature allows users to click on cells in a table to automatically update related widgets with the selected data."}),"\n",(0,i.jsx)("img",{className:"pro-border-gradient",width:"1000",alt:"Cell Click Grouping Example",src:"https://openbb-cms.directus.app/assets/9e3fe731-2a87-4c85-8650-0404c3c400b2.png"}),"\n",(0,i.jsx)(t.p,{children:"The implementation consists of three main components:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"An endpoint that provides a list of available stock symbols that can be selected in the widgets."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'@app.get("/get_tickers_list")\ndef get_tickers_list():\n    """Returns a list of available stock symbols"""\n    return [\n        {"label": "Apple Inc.", "value": "AAPL"},\n        {"label": "Microsoft Corporation", "value": "MSFT"},\n        {"label": "Google", "value": "GOOGL"},\n        {"label": "Amazon", "value": "AMZN"},\n        {"label": "Tesla", "value": "TSLA"}\n    ]\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsxs)(t.li,{children:["A table widget that displays stock data and allows users to click on symbol cells to update related widgets. The key feature is the ",(0,i.jsx)(t.code,{children:"cellOnClick"})," renderFn in the symbol column, which triggers the ",(0,i.jsx)(t.code,{children:"groupBy"})," action when a cell is clicked."]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'@register_widget({\n    "name": "Table widget with grouping by cell click",\n    "description": "A table widget that groups data when clicking on symbols. Click on a symbol to update all related widgets.",\n    "type": "table",\n    "endpoint": "table_widget_with_grouping_by_cell_click",\n    "params": [\n        {\n            "paramName": "symbol",  # This parameter name is crucial - it\'s used for grouping\n            "description": "Select stocks to display",\n            "value": "AAPL",\n            "label": "Symbol",\n            "type": "endpoint",\n            "optionsEndpoint": "/get_tickers_list",\n            "multiSelect": False,\n            "show": True\n        }\n    ],\n    "data": {\n        "table": {\n            "showAll": True,\n            "columnsDefs": [\n                {\n                    "field": "symbol",\n                    "headerName": "Symbol",\n                    "cellDataType": "text",\n                    "width": 120,\n                    "pinned": "left",\n                    "renderFn": "cellOnClick",\n                    "renderFnParams": {\n                        "actionType": "groupBy",\n                        "groupByParamName": "symbol"\n                    }\n                },\n                {\n                    "field": "price",\n                    "headerName": "Price",\n                    "cellDataType": "number",\n                    "formatterFn": "none",\n                    "width": 120\n                },\n                {\n                    "field": "change",\n                    "headerName": "Change",\n                    "cellDataType": "number",\n                    "formatterFn": "percent",\n                    "renderFn": "greenRed",\n                    "width": 120\n                },\n                {\n                    "field": "volume",\n                    "headerName": "Volume",\n                    "cellDataType": "number",\n                    "formatterFn": "int",\n                    "width": 150\n                }\n            ]\n        }\n    },\n    "gridData": {\n        "w": 20,\n        "h": 9\n    }\n})\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"3",children:["\n",(0,i.jsxs)(t.li,{children:["A markdown widget that displays detailed information about the selected stock. This widget uses the same ",(0,i.jsx)(t.code,{children:"symbol"})," parameter as the table widget, so it automatically updates when a symbol is clicked in the table."]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'@register_widget({\n    "name": "Widget managed by parameter from cell click on table widget",\n    "description": "This widget demonstrates how to use the grouped symbol parameter from a table widget. When a symbol is clicked in the table, this widget will automatically update to show details for the selected symbol.",\n    "type": "markdown",\n    "endpoint": "widget_managed_by_parameter_from_cell_click_on_table_widget",\n    "params": [\n        {\n            "paramName": "symbol",  # Must match the groupByParamName in the table widget\n            "description": "The symbol to get details for",\n            "value": "AAPL",\n            "label": "Symbol",\n            "type": "endpoint",\n            "optionsEndpoint": "/get_tickers_list",\n            "show": True\n        }\n    ],\n    "gridData": {\n        "w": 20,\n        "h": 6\n    }\n})\n'})}),"\n",(0,i.jsx)(t.p,{children:"This functionality is achieved through three key components:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Both widgets must share the same ",(0,i.jsx)(t.code,{children:"paramName"}),' (in this case "symbol") to enable parameter synchronization']}),"\n",(0,i.jsxs)(t.li,{children:["The table widget's ",(0,i.jsx)(t.code,{children:"cellOnClick"})," renderFn must be configured with ",(0,i.jsx)(t.code,{children:'actionType: "groupBy"'})," and specify the ",(0,i.jsx)(t.code,{children:"groupByParamName"}),' as "symbol"']}),"\n",(0,i.jsxs)(t.li,{children:["Both widgets must reference the same endpoint (",(0,i.jsx)(t.code,{children:"/get_tickers_list"}),") for their options data"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The interaction flow works as follows:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["When a user clicks a symbol cell in the table, the ",(0,i.jsx)(t.code,{children:"cellOnClick"})," renderFn activates the ",(0,i.jsx)(t.code,{children:"groupBy"})," action"]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"groupBy"})," action then updates the shared ",(0,i.jsx)(t.code,{children:"symbol"})," parameter value"]}),"\n",(0,i.jsxs)(t.li,{children:["Any widget that uses the ",(0,i.jsx)(t.code,{children:"symbol"})," parameter will automatically refresh to display data for the newly selected symbol"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This implementation creates an intuitive user experience where selecting a symbol in the table instantly updates all connected widgets with the corresponding stock information."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var l=n(96540);const i={},a=l.createContext(i);function s(e){const t=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(a.Provider,{value:t},e.children)}},39068:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var l=n(27143),i=n(74848);function a(e){let{title:t}=e;return(0,i.jsx)(l.A,{children:(0,i.jsx)("title",{children:t})})}}}]);