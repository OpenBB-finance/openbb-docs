"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29767],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},39068:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var s=t(27143),i=t(74848);function o(e){let{title:n}=e;return(0,i.jsx)(s.A,{children:(0,i.jsx)("title",{children:n})})}},58822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"platform/usage/extensions/overview","title":"Overview","description":"This page describes the toolkit extensions available for the OpenBB Platform.","source":"@site/content/platform/usage/extensions/overview.mdx","sourceDirName":"platform/usage/extensions","slug":"/platform/usage/extensions/overview","permalink":"/platform/usage/extensions/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/platform/usage/extensions/overview.mdx","tags":[],"version":"current","lastUpdatedBy":"DidierRLopes","lastUpdatedAt":1757000635000,"sidebarPosition":1,"frontMatter":{"title":"Overview","sidebar_position":1,"description":"This page describes the toolkit extensions available for the OpenBB Platform.","keywords":["OpenBB Platform","Python client","Fast API","getting started","extensions","data providers","data extensions","toolkit extensions","toolkits","endpoints","community","technical analysis","quantitative analysis","charting libraries","Plotly","OpenBBFigure","PyWry"]},"sidebar":"tutorialSidebar","previous":{"title":"Output Data","permalink":"/platform/usage/syntax/output_data"},"next":{"title":"Data Extensions","permalink":"/platform/usage/extensions/data_extensions"}}');var i=t(74848),o=t(28453);t(39068);const a={title:"Overview",sidebar_position:1,description:"This page describes the toolkit extensions available for the OpenBB Platform.",keywords:["OpenBB Platform","Python client","Fast API","getting started","extensions","data providers","data extensions","toolkit extensions","toolkits","endpoints","community","technical analysis","quantitative analysis","charting libraries","Plotly","OpenBBFigure","PyWry"]},r=void 0,l={},d=[{value:"Coverage",id:"coverage",level:2}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The extension framework allows individual pieces to be installed and removed seamlessly within the environment, using only the desired data and toolkit extensions."}),"\n",(0,i.jsx)(n.p,{children:"There are two primary types of extensions for the OpenBB Platform:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Data"}),"\n",(0,i.jsx)(n.li,{children:"Toolkits"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The OpenBB Core installation does not include any toolkit extensions. Install the OpenBB Platform with all data and toolkit extensions from PyPI with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pip install openbb[all]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When installing from source, navigate into the ",(0,i.jsx)(n.code,{children:"openbb_platform"})," folder from the root of the project and enter:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"python dev_install.py -e\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This installs all extensions in editable mode, and the Python interface is compiled in, ",(0,i.jsx)(n.code,{children:"/openbb_platform/openbb/package"}),", instead of the environment's ",(0,i.jsx)(n.code,{children:"site-packages"})," folder. The tables in the next pages lists extensions as either, Core or Community. The Core extensions are installed by default."]}),"\n",(0,i.jsx)(n.p,{children:"A couple of notable differences between data and toolkit extension are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"In the OpenBB GitHub repo, extensions are all located under:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"~/OpenBB/openbb_platform/extensions\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An additional folder housing integration tests, with the ",(0,i.jsx)(n.code,{children:"tests"})," folder staying empty."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["There is a ",(0,i.jsx)(n.code,{children:"router"})," file, and there can be sub-folders with additional routers."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Utility functions don't need their own sub-folder."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"__init__.py"})," files are all empty."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{title:"When an extension is installed or uninstalled, the Python interface will need to rebuild the static assets for the app to fully reflect the changes.",type:"important",children:[(0,i.jsx)(n.p,{children:"To invoke the build process, enter the line below from the command line:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"openbb-build\n"})}),(0,i.jsx)(n.p,{children:"Or"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'python -c "import openbb;openbb.build()"\n'})}),(0,i.jsx)(n.p,{children:"This is not necessary when using the API, changes will be reflected on the next run."})]}),"\n",(0,i.jsx)(n.h2,{id:"coverage",children:"Coverage"}),"\n",(0,i.jsxs)(n.p,{children:["The installed commands and data providers are found under, ",(0,i.jsx)(n.code,{children:"obb.coverage"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"obb.coverage\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"/coverage\n\n    providers\n    commands\n    command_model\n    command_schemas\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"obb.coverage.providers"})," is a dictionary of the installed provider extensions, each with its own list of available commands."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"obb.coverage.commands"})," is a dictionary of commands, each with its own list of available providers for the data."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"obb.coverage.command_model"})," is a dictionary where the keys are the command paths and the values is a nested dictionary of QueryParams and Data models associated with that function."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);