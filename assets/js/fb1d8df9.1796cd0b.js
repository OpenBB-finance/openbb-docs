"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[21707],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var a=n(96540);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},30764:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"workspace/custom-backend/Widgets/chart/native","title":"Native Chart","description":"Learn how to integrate your own backend with OpenBB Workspace using cookie-cutter or language-agnostic API approaches. This guide includes illustrative examples and principles for handling `widget.json` files, APIs, interfaces, Python, FastAPI, and more.","source":"@site/content/workspace/custom-backend/Widgets/chart/native.md","sourceDirName":"workspace/custom-backend/Widgets/chart","slug":"/workspace/custom-backend/Widgets/chart/native","permalink":"/workspace/custom-backend/Widgets/chart/native","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/custom-backend/Widgets/chart/native.md","tags":[],"version":"current","lastUpdatedBy":"Theodore Aptekarev","lastUpdatedAt":1745833196000,"sidebarPosition":2,"frontMatter":{"title":"Native Chart","sidebar_position":2,"description":"Learn how to integrate your own backend with OpenBB Workspace using cookie-cutter or language-agnostic API approaches. This guide includes illustrative examples and principles for handling `widget.json` files, APIs, interfaces, Python, FastAPI, and more.","keywords":["widgets.json","OpenBB API","Endpoint integration","widget configuration","Language-Agnostic API","API implementation","Python","FastAPI","Workspace widgets","Widget definitions"]},"sidebar":"tutorialSidebar","previous":{"title":"Chart","permalink":"/workspace/custom-backend/Widgets/chart/"},"next":{"title":"Plotly Chart","permalink":"/workspace/custom-backend/Widgets/chart/plotly"}}');var s=n(74848),r=n(28453);const i={title:"Native Chart",sidebar_position:2,description:"Learn how to integrate your own backend with OpenBB Workspace using cookie-cutter or language-agnostic API approaches. This guide includes illustrative examples and principles for handling `widget.json` files, APIs, interfaces, Python, FastAPI, and more.",keywords:["widgets.json","OpenBB API","Endpoint integration","widget configuration","Language-Agnostic API","API implementation","Python","FastAPI","Workspace widgets","Widget definitions"]},c="Native Chart",o={},d=[{value:"Step 1: Create a table widget",id:"step-1-create-a-table-widget",level:2},{value:"Step 2: <strong>Add the <code>chartView</code> Property</strong>",id:"step-2-add-the-chartview-property",level:2},{value:"Available Chart Types",id:"available-chart-types",level:3},{value:"Changing the Chart Settings / Visualization",id:"changing-the-chart-settings--visualization",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"native-chart",children:"Native Chart"})}),"\n",(0,s.jsx)(t.p,{children:"This guide will walk you through the process of creating a simple chart widget using the native charting already available in OpenBB Workspace."}),"\n",(0,s.jsxs)(t.p,{children:["Any table widget can be converted to a chart widget by adding the ",(0,s.jsx)(t.code,{children:"chartView"})," property to the ",(0,s.jsx)(t.code,{children:"table"})," section - this allows you to seamlessly switch between table and chart views."]}),"\n",(0,s.jsxs)(t.p,{children:["This guide will walk you through the process using the same example as the ",(0,s.jsx)(t.a,{href:"/workspace/custom-backend/Widgets/table/",children:"table widget"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"step-1-create-a-table-widget",children:"Step 1: Create a table widget"}),"\n",(0,s.jsxs)(t.p,{children:["Copy/Use the Table Widget from the ",(0,s.jsx)(t.a,{href:"/workspace/custom-backend/Widgets/table/",children:"Table Widget"})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Review/Create Widget"}),": The ",(0,s.jsx)(t.code,{children:"table"})," section of the ",(0,s.jsx)(t.code,{children:"widgets.json"})," file should be structured as follows:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'...\n"table": {\n    "showAll": true,\n    "columnsDefs": [\n        {\n            "headerName": "Name",\n            "field": "name",\n            "chartDataType": "category"\n        },\n        {\n            "headerName": "Total Value Locked",\n            "field": "tvl"\n        },\n        {\n            "headerName": "Token Symbol",\n            "field": "tokenSymbol",\n            "chartDataType": "category"\n        }\n    ]\n}\n'})}),"\n",(0,s.jsxs)(t.h2,{id:"step-2-add-the-chartview-property",children:["Step 2: ",(0,s.jsxs)(t.strong,{children:["Add the ",(0,s.jsx)(t.code,{children:"chartView"})," Property"]})]}),"\n",(0,s.jsxs)(t.p,{children:["To enable the chart view for the widget add the ",(0,s.jsx)(t.code,{children:"chartView"})," property to the ",(0,s.jsx)(t.code,{children:"table"})," section. Set the ",(0,s.jsx)(t.code,{children:"chartType"})," to ",(0,s.jsx)(t.code,{children:"bar"})," and ",(0,s.jsx)(t.code,{children:"enabled"})," to ",(0,s.jsx)(t.code,{children:"true"})," to activate the chart by default."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"table": {\n    "chartView": {\n        "enabled": true,\n        "chartType": "bar"\n    },\n    "showAll": false,\n    "columnsDefs": [\n        {\n            "headerName": "Name",\n            "field": "name",\n            "chartDataType": "category"\n        },\n        {\n            "headerName": "Total Value Locked",\n            "field": "tvl"\n        },\n        {\n            "headerName": "Token Symbol",\n            "field": "tokenSymbol",\n            "chartDataType": "category"\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"You should now have a chart widget that looks like this:"}),"\n",(0,s.jsx)("img",{className:"pro-border-gradient",width:"600",alt:"chart",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/bar+example.png"}),"\n",(0,s.jsx)(t.p,{children:"You can now switch between table and chart views by clicking the Chart View icon in the top right corner of the widget (blue highlighted icon top right)."}),"\n",(0,s.jsx)(t.h3,{id:"available-chart-types",children:"Available Chart Types"}),"\n",(0,s.jsx)(t.p,{children:"The built-in charts support a variety of types. Here are the allowed values:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Column Charts"}),": ",(0,s.jsx)(t.code,{children:"column"}),", ",(0,s.jsx)(t.code,{children:"groupedColumn"}),", ",(0,s.jsx)(t.code,{children:"stackedColumn"}),", ",(0,s.jsx)(t.code,{children:"normalizedColumn"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Bar Charts"}),": ",(0,s.jsx)(t.code,{children:"bar"}),", ",(0,s.jsx)(t.code,{children:"groupedBar"}),", ",(0,s.jsx)(t.code,{children:"stackedBar"}),", ",(0,s.jsx)(t.code,{children:"normalizedBar"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Line and Scatter Charts"}),": ",(0,s.jsx)(t.code,{children:"line"}),", ",(0,s.jsx)(t.code,{children:"scatter"}),", ",(0,s.jsx)(t.code,{children:"bubble"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Pie and Donut Charts"}),": ",(0,s.jsx)(t.code,{children:"pie"}),", ",(0,s.jsx)(t.code,{children:"donut"}),", ",(0,s.jsx)(t.code,{children:"doughnut"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Area Charts"}),": ",(0,s.jsx)(t.code,{children:"area"}),", ",(0,s.jsx)(t.code,{children:"stackedArea"}),", ",(0,s.jsx)(t.code,{children:"normalizedArea"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Other Types"}),": ",(0,s.jsx)(t.code,{children:"histogram"}),", ",(0,s.jsx)(t.code,{children:"radarLine"}),", ",(0,s.jsx)(t.code,{children:"radarArea"}),", ",(0,s.jsx)(t.code,{children:"nightingale"}),", ",(0,s.jsx)(t.code,{children:"radialColumn"}),", ",(0,s.jsx)(t.code,{children:"radialBar"}),", ",(0,s.jsx)(t.code,{children:"sunburst"}),", ",(0,s.jsx)(t.code,{children:"rangeBar"}),", ",(0,s.jsx)(t.code,{children:"rangeArea"}),", ",(0,s.jsx)(t.code,{children:"boxPlot"}),", ",(0,s.jsx)(t.code,{children:"treemap"}),", ",(0,s.jsx)(t.code,{children:"heatmap"}),", ",(0,s.jsx)(t.code,{children:"waterfall"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"By following these steps, you can create a chart widget with ease. Experiment with different chart types to best visualize your data."}),"\n",(0,s.jsx)(t.h2,{id:"changing-the-chart-settings--visualization",children:"Changing the Chart Settings / Visualization"}),"\n",(0,s.jsxs)(t.p,{children:["You can change the chart settings by clicking on the three dots and then the ",(0,s.jsx)(t.code,{children:"Chart Settings"})," in the dropdown menu."]}),"\n",(0,s.jsx)("img",{className:"pro-border-gradient",width:"400",alt:"chart",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/chart+settings.png"}),"\n",(0,s.jsx)(t.p,{children:"Here you can change the chart type, the chart settings, and the some other settings in each tab."}),"\n",(0,s.jsx)("img",{className:"pro-border-gradient",width:"400",alt:"chart",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/chart+settings+2.png"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);