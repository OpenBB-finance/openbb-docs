"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86315],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},39068:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var s=t(27143),i=t(74848);function r(e){let{title:n}=e;return(0,i.jsx)(s.A,{children:(0,i.jsx)("title",{children:n})})}},86437:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"workspace/developers/widget-types/newsfeed","title":"Newsfeed","description":"Learn how to create a newsfeed widget for OpenBB Workspace that displays articles in a clean, organized format.","source":"@site/content/workspace/developers/widget-types/newsfeed.md","sourceDirName":"workspace/developers/widget-types","slug":"/workspace/developers/widget-types/newsfeed","permalink":"/workspace/developers/widget-types/newsfeed","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/developers/widget-types/newsfeed.md","tags":[],"version":"current","lastUpdatedBy":"minhhoang1023","lastUpdatedAt":1761019357000,"sidebarPosition":12,"frontMatter":{"title":"Newsfeed","sidebar_position":12,"description":"Learn how to create a newsfeed widget for OpenBB Workspace that displays articles in a clean, organized format.","keywords":["widgets.json","OpenBB API","Newsfeed widget","Article display","News integration","FastAPI","Custom Backend"]},"sidebar":"tutorialSidebar","previous":{"title":"Live Grid","permalink":"/workspace/developers/widget-types/live-grid"},"next":{"title":"Highcharts Chart","permalink":"/workspace/developers/widget-types/highcharts"}}');var i=t(74848),r=t(28453),a=t(39068);const o={title:"Newsfeed",sidebar_position:12,description:"Learn how to create a newsfeed widget for OpenBB Workspace that displays articles in a clean, organized format.",keywords:["widgets.json","OpenBB API","Newsfeed widget","Article display","News integration","FastAPI","Custom Backend"]},d=void 0,c={},l=[{value:"Step 1: Set Up Your Project",id:"step-1-set-up-your-project",level:2},{value:"Step 2: Create the Newsfeed Endpoint",id:"step-2-create-the-newsfeed-endpoint",level:2},{value:"Step 3: Configure widgets.json",id:"step-3-configure-widgetsjson",level:2},{value:"Step 4: Run the Application",id:"step-4-run-the-application",level:2},{value:"Step 5: Add to OpenBB Pro",id:"step-5-add-to-openbb-pro",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.A,{title:"Newsfeed | OpenBB Workspace Docs"}),"\n",(0,i.jsx)(n.p,{children:"This guide will walk you through creating a newsfeed widget for OpenBB Workspace. We'll use CoinDesk's API as an example, but you can adapt this to any news source."}),"\n",(0,i.jsx)(n.h2,{id:"step-1-set-up-your-project",children:"Step 1: Set Up Your Project"}),"\n",(0,i.jsx)(n.p,{children:"To get started, create the main application file and the widget configuration file. You will only need these two files:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"main.py"}),": This file will contain your FastAPI application code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"widgets.json"}),": This file will define the configuration for your widget."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The backend will use the same FastAPI setup and structure as described in the ",(0,i.jsx)(n.a,{href:"/workspace/developers/data-integration#1-create-the-api-server",children:"Overview"})," page."]}),"\n",(0,i.jsx)(n.h2,{id:"step-2-create-the-newsfeed-endpoint",children:"Step 2: Create the Newsfeed Endpoint"}),"\n",(0,i.jsxs)(n.p,{children:["Edit the ",(0,i.jsx)(n.code,{children:"main.py"})," file and add the following code."]}),"\n",(0,i.jsx)(n.p,{children:"The newsfeed widget expects articles in a specific format. Each article must include:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'{\n    "title": string,    # Article title\n    "date": string,    # ISO 8601 formatted date\n    "author": string,  # Article author\n    "excerpt": string, # Short preview of the article\n    "body": string,    # Full article text (can include markdown)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Here's an example implementation using CoinDesk's API:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'...\n\nclass CoindeskArticle(TypedDict):\n    TYPE: str\n    ID: int\n    TITLE: str\n    SUBTITLE: Optional[str]\n    AUTHORS: str\n    URL: str\n    BODY: str\n    PUBLISHED_ON: int\n    IMAGE_URL: str\n    KEYWORDS: str\n    LANG: str\n    SENTIMENT: str\n\n\nclass TransformedArticle(TypedDict):\n    title: str\n    date: str\n    author: str\n    excerpt: str\n    body: str\n\n\ndef transform_article(article: CoindeskArticle) -> TransformedArticle:\n    """Transform a CoinDesk article to a standardized format."""\n    # Convert UNIX timestamp to ISO format\n    date = datetime.fromtimestamp(article["PUBLISHED_ON"]).isoformat()\n\n    # Create excerpt from body (first 150 characters)\n    body = article["BODY"]\n    excerpt = f"{body[:150]}..." if len(body) > 150 else body\n\n    return {\n        "title": article["TITLE"],\n        "date": date,\n        "author": article["AUTHORS"],\n        "excerpt": excerpt,\n        "body": body,\n    }\n\n\ndef fetch_news(limit: str, lang: str, categories: Optional[str] = None) -> List[TransformedArticle]:\n    """Fetch news from the CoinDesk API."""\n    url = f"https://data-api.coindesk.com/news/v1/article/list?lang={lang}&limit={limit}"\n\n    if categories:\n        url += f"&categories={categories}"\n\n    response = requests.get(url)\n\n    if response.status_code != 200:\n        raise HTTPException(status_code=response.status_code, detail=f"Failed to fetch news: {response.reason}")\n\n    data = response.json()\n    return [transform_article(article) for article in data.get("Data", [])]\n\n\n@app.get("/news")\ndef get_coindesk_news(limit: str = "10", lang: str = "EN", categories: Optional[str] = None):\n    """Get news from CoinDesk."""\n    try:\n        news = fetch_news(limit, lang, categories)\n        return news\n    except Exception as e:\n        return JSONResponse(content={"error": f"Failed to fetch news: {str(e)}"}, status_code=500)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-3-configure-widgetsjson",children:"Step 3: Configure widgets.json"}),"\n",(0,i.jsxs)(n.p,{children:["Add the widget configuration to your ",(0,i.jsx)(n.code,{children:"widgets.json"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "coindesk_news": {\n    "type": "newsfeed",\n    "name": "CoinDesk News",\n    "description": "Get the latest crypto news from CoinDesk",\n    "endpoint": "/news",\n    "gridData": {\n      "w": 40,\n      "h": 20\n    },\n    "source": "coindesk",\n    "params": [\n      {\n        "paramName": "limit",\n        "label": "Limit",\n        "description": "The number of news articles to fetch",\n        "type": "number",\n        "value": "10"\n      },\n      {\n        "paramName": "lang",\n        "label": "Language",\n        "description": "The language of the news articles",\n        "type": "text",\n        "value": "EN",\n        "options": [\n          {\n            "label": "English",\n            "value": "EN"\n          },\n          {\n            "label": "Spanish",\n            "value": "ES"\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-4-run-the-application",children:"Step 4: Run the Application"}),"\n",(0,i.jsx)(n.p,{children:"Start your FastAPI server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"uvicorn main:app --host localhost --port 5050\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-5-add-to-openbb-pro",children:"Step 5: Add to OpenBB Pro"}),"\n",(0,i.jsxs)(n.p,{children:["Navigate to ",(0,i.jsx)(n.a,{href:"https://pro.openbb.co/app",children:"OpenBB Pro Apps"})," and add your backend by clicking on the ",(0,i.jsx)(n.code,{children:"Manage Backends"})," button in the top right corner. Select ",(0,i.jsx)(n.code,{children:"Add Backend"})," and fill in the details. Your URL will be ",(0,i.jsx)(n.code,{children:"http://localhost:5050"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Once you have added your backend, you can find the widget in the ",(0,i.jsx)(n.code,{children:"Test"})," category with the name ",(0,i.jsx)(n.code,{children:"Test Metric"}),"."]}),"\n",(0,i.jsx)("img",{className:"pro-border-gradient",width:"600",alt:"newsfeed",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/newsfeed.png"}),"\n",(0,i.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,i.jsxs)(n.p,{children:["You can find more examples of how to set up your own backend in the ",(0,i.jsx)(n.a,{href:"https://github.com/OpenBB-finance/backend-examples-for-openbb-workspace",children:"Backend for OpenBB Workspace GitHub"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);