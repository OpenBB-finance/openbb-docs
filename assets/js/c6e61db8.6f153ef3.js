"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2360],{28059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"python/quickstart/index","title":"Quick Start","description":"Get started with the OpenBB Platform by following this quickstart guide for the Python interface.","source":"@site/content/python/quickstart/index.mdx","sourceDirName":"python/quickstart","slug":"/python/quickstart/","permalink":"/python/quickstart/","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/quickstart/index.mdx","tags":[],"version":"current","lastUpdatedBy":"Danglewood","lastUpdatedAt":1761197956000,"sidebarPosition":1,"frontMatter":{"title":"Quick Start","sidebar_position":1,"description":"Get started with the OpenBB Platform by following this quickstart guide for the Python interface.","keywords":["ODP","Python Package","OpenBB Platform","investment research infrastructure","data connectors","financial reports","OpenBB team","quickstart","getting started"]},"sidebar":"tutorialSidebar","previous":{"title":"Environment Variables","permalink":"/python/settings/environment_variables"},"next":{"title":"REST API","permalink":"/python/quickstart/rest_api"}}');var r=t(74848),a=t(28453),o=t(39068);const s={title:"Quick Start",sidebar_position:1,description:"Get started with the OpenBB Platform by following this quickstart guide for the Python interface.",keywords:["ODP","Python Package","OpenBB Platform","investment research infrastructure","data connectors","financial reports","OpenBB team","quickstart","getting started"]},l=void 0,c={},d=[{value:"Import",id:"import",level:2},{value:"Query",id:"query",level:2},{value:"Historical Stock Prices",id:"historical-stock-prices",level:3},{value:"Technical Analysis",id:"technical-analysis",level:3},{value:"Reference",id:"reference",level:2},{value:"Next Steps",id:"next-steps",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.A,{title:"Python Interface - Quick Start | OpenBB Docs"}),"\n",(0,r.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(n.p,{children:"To get started with the ODP Python Package, import it with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from openbb import obb\n"})}),"\n",(0,r.jsx)(n.p,{children:"Show the contents of any given path with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>>obb.equity\n/equity\n    /calendar\n    /compare\n    /darkpool\n    /discovery\n    /estimates\n    /fundamental\n    historical_market_cap\n    market_snapshots\n    /ownership\n    /price\n    profile\n    screener\n    search\n    /shorts\n"})}),"\n",(0,r.jsx)(n.p,{children:"Each endpoint might have multiple data providers servicing it, and parameter choices may vary.\nConsult the docstring for details specific to your combination of installed extensions and available providers."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Docstring snippet from `obb.equity.price.historical`\ninterval : str\n    Time interval of the data to return. (provider: alpha_vantage, cboe, fmp, intrinio, polygon, tiingo, tmx, tradier, yfinance)\n    Choices for alpha_vantage: '1m', '5m', '15m', '30m', '60m', '1d', '1W', '1M'\n    Choices for cboe: '1m', '1d'\n    Choices for fmp: '1m', '5m', '15m', '30m', '1h', '4h', '1d'\n    Choices for intrinio: '1m', '5m', '10m', '15m', '30m', '60m', '1h', '1d', '1W', '1M', '1Q', '1Y'\n    Choices for tradier: '1m', '5m', '15m', '1d', '1W', '1M'\n    Choices for yfinance: '1m', '2m', '5m', '15m', '30m', '60m', '90m', '1h', '1d', '5d', '1W', '1M', '1Q'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"query",children:"Query"}),"\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"provider"})," parameter is not supplied (default), it will pick the first available in alphabetical order."]}),"\n",(0,r.jsxs)(n.p,{children:["If a provider requires an API key for this endpoint, and has not been added to the ",(0,r.jsx)(n.a,{href:"/python/settings/user_settings/api_keys",children:"settings"}),", it will skip and try the next."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Get the price of a stock \n>>> quote_data = obb.equity.price.quote(symbol=\"AAPL\", provider=\"yfinance\")\n>>> quote_data\n\nOBBject\n\nid: 06649f4e-896c-7b31-8000-52242b1605f2\nresults: [{'symbol': 'AAPL', 'asset_type': 'EQUITY', 'name': 'Apple Inc.', 'exchang...\nprovider: yfinance\nwarnings: None\nchart: None\nextra: {'metadata': {'arguments': {'provider_choices': {'provider': 'yfinance'}, 's...\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To output as a DataFrame, use the ",(0,r.jsx)(n.code,{children:"to_df()"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>> quote_data.to_df().T\n\nsymbol                    AAPL\nasset_type              EQUITY\nname                Apple Inc.\nexchange                   NMS\nbid                      232.3\nbid_size                     1\nask                     257.91\nask_size                     1\nlast_price              245.27\nopen                    255.04\nhigh                    256.38\nlow                     244.57\nvolume                61999098\nprev_close              254.04\nyear_high                260.1\nyear_low                169.21\nma_50d                237.0188\nma_200d              222.25485\nvolume_average      54836700.0\nvolume_average_10d  43155290.0\ncurrency                   USD\n"})}),"\n",(0,r.jsx)(n.h3,{id:"historical-stock-prices",children:"Historical Stock Prices"}),"\n",(0,r.jsxs)(n.p,{children:["Time series data will always have ",(0,r.jsx)(n.code,{children:"start_date"})," and ",(0,r.jsx)(n.code,{children:"end_date"})," parameters.\nThe default date range will vary by function, in this example it is one year."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'>>> output = obb.equity.price.historical(symbol="AAPL", provider="yfinance").to_df()\n>>> df = output.to_df()\n>>> df\n\n                  open        high         low       close    volume  dividend\ndate                                                                          \n2024-10-14  228.699997  231.729996  228.600006  231.300003  39882100       0.0\n2024-10-15  233.610001  237.490005  232.369995  233.850006  64751400       0.0\n2024-10-16  231.600006  232.119995  229.839996  231.779999  34082200       0.0\n2024-10-17  233.429993  233.850006  230.520004  232.149994  32993800       0.0\n2024-10-18  236.179993  236.179993  234.009995  235.000000  46431500       0.0\n...                ...         ...         ...         ...       ...       ...\n2025-10-06  257.989990  259.070007  255.050003  256.690002  44664100       0.0\n2025-10-07  256.809998  257.399994  255.429993  256.480011  31955800       0.0\n2025-10-08  256.519989  258.519989  256.109985  258.059998  36496900       0.0\n2025-10-09  257.809998  258.000000  253.139999  254.039993  38322000       0.0\n2025-10-10  254.940002  256.380005  244.000000  245.270004  61782400       0.0\n\n[249 rows x 6 columns]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"technical-analysis",children:"Technical Analysis"}),"\n",(0,r.jsx)(n.p,{children:"Use the output to feed the input of data processing functions."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'>>> ta = obb.technical.donchian(data=output.results).to_df().dropna(how="any")\n>>> ta\n\n                  open        high         low       close    volume  dividend   DCL_20_20   DCM_20_20   DCU_20_20\ndate                                                                                                              \n2024-11-08  227.169998  228.660004  226.410004  226.960007  38328800      0.25  219.710007  228.600006  237.490005\n2024-11-11  225.000000  225.699997  221.500000  224.229996  42005600      0.00  219.710007  228.600006  237.490005\n2024-11-12  224.550003  225.589996  223.360001  224.229996  40398300      0.00  219.710007  228.280006  236.850006\n2024-11-13  224.009995  226.649994  222.759995  225.119995  48566200      0.00  219.710007  228.280006  236.850006\n2024-11-14  225.020004  228.869995  225.000000  228.220001  44923900      0.00  219.710007  228.280006  236.850006\n...                ...         ...         ...         ...       ...       ...         ...         ...         ...\n2025-10-06  257.989990  259.070007  255.050003  256.690002  44664100      0.00  225.949997  242.594994  259.239990\n2025-10-07  256.809998  257.399994  255.429993  256.480011  31955800      0.00  225.949997  242.594994  259.239990\n2025-10-08  256.519989  258.519989  256.109985  258.059998  36496900      0.00  226.649994  242.944992  259.239990\n2025-10-09  257.809998  258.000000  253.139999  254.039993  38322000      0.00  229.020004  244.129997  259.239990\n2025-10-10  254.940002  256.380005  244.000000  245.270004  61782400      0.00  235.029999  247.134995  259.239990\n\n[230 rows x 9 columns]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)(n.p,{children:"All function metadata is available directly as a JSON dictionary."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>> obb.reference.keys()\n\ndict_keys(['openbb', 'info', 'paths', 'routers'])\n"})}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{mdxType:"summary",children:"Example JSON Content"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "deprecated": {\n        "flag": null,\n        "message": null\n    },\n    "description": "Get summary, status, and other metadata for a specific bill.\\n\\nEnter the URL of the bill as: https://api.congress.gov/v3/bill/119/hr/131?\\n\\nURLs for bills can be found from the `uscongress.bills` endpoint.\\n\\nThe raw JSON response from the API will be returned along with a formatted\\ntext version of the key information from the raw response.\\n\\nIn OpenBB Workspace, this command returns as a Markdown widget.",\n    "examples": "\\nExamples\\n--------\\n\\n```python\\nfrom openbb import obb\\nobb.uscongress.bill_info(provider=\'congress_gov\', bill_url=https://api.congress.gov/v3/bill/119/s/1947?)\\n# The bill URL can be shortened to just the bill number (e.g., \'119/s/1947\').\\nobb.uscongress.bill_info(bill_url=119/s/1947, provider=\'congress_gov\')\\n```\\n\\n",\n    "parameters": {\n        "standard": [],\n        "congress_gov": [\n            {\n                "name": "bill_url",\n                "type": "str",\n                "description": "Enter a base URL of a bill (e.g., \'https://api.congress.gov/v3/bill/119/s/1947?format=json\'). Alternatively, you can enter a bill number (e.g., \'119/s/1947\').",\n                "default": "",\n                "optional": false,\n                "choices": null\n            }\n        ]\n    },\n    "returns": {\n        "OBBject": [\n            {\n                "name": "results",\n                "type": "list[CongressBillInfo]",\n                "description": "Serializable results."\n            },\n            {\n                "name": "provider",\n                "type": "Optional[Literal[\'congress_gov\']]",\n                "description": "Provider name."\n            },\n            {\n                "name": "warnings",\n                "type": "Optional[list[Warning_]]",\n                "description": "list of warnings."\n            },\n            {\n                "name": "chart",\n                "type": "Optional[Chart]",\n                "description": "Chart object."\n            },\n            {\n                "name": "extra",\n                "type": "dict[str, Any]",\n                "description": "Extra info."\n            }\n        ]\n    },\n    "data": {\n        "standard": [],\n        "congress_gov": [\n            {\n                "name": "markdown_content",\n                "type": "str",\n                "description": "Aggregated metadata for the bill in Markdown format.",\n                "default": "",\n                "optional": false,\n                "choices": null\n            },\n            {\n                "name": "raw_data",\n                "type": "dict[str, Any]",\n                "description": "Raw JSON data from the collected bill information.",\n                "default": "",\n                "optional": false,\n                "choices": null\n            }\n        ]\n    },\n    "model": "CongressBillInfo",\n    "openapi_extra": {\n        "model": "CongressBillInfo"\n    }\n}\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.p,{children:["Go to the ",(0,r.jsx)(n.a,{href:"/python/quickstart/workspace",children:"Workspace"})," page to get started using ODP as an OpenBB Workspace Backend."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},39068:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var i=t(27143),r=t(74848);function a(e){let{title:n}=e;return(0,r.jsx)(i.A,{children:(0,r.jsx)("title",{children:n})})}}}]);