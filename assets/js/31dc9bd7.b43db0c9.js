"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88014],{25761:(e,t,n)=>{n.d(t,{A:()=>y});var r=n(56347),a=n(65627),o=n(96540),s=n(50372),i=n(30604),l=n(11861),d=n(78749);function c(e){return function(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function u(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,l.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(s),(0,o.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=u(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[c,p]=m({queryString:n,groupId:r}),[b,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,d.Dv)(n);return[r,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),x=(()=>{const e=c??b;return h({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{x&&l(x)}),[x]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),f(e)}),[p,f,a]),tabValues:a}}var b=n(9136),f=n(34164);const x={tabList:"tabList_TRJ7",tabItem:"tabItem_hGfb"};var g=n(74848);function j(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),{pathname:c}=(0,r.zy)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),r=i[n].value;r!==o&&(d(t),s(r))},h=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,g.jsx)("div",{className:"border-b border-grey-400 inline-block",children:(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,f.A)("_group-tab list-none m-0 p-0 flex"),children:i.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,ref:e=>l.push(e),onKeyDown:h,onClick:u,...r,className:(0,f.A)("font-bold tracking-widest uppercase text-lg cursor-pointer mr-4 pb-2 border-b-2 -mb-px first:pl-0 pl-2",x.tabItem,r?.className,{"pointer-events-none":o===t,"text-[#669dcb] border-[#669dcb]":o===t&&c.startsWith("/workspace"),"text-[#FB923C] border-[#FB923C]":o===t&&c.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#ffd4b1] hover:border-[#ffd4b1]":o!==t&&c.startsWith("/python"),"border-transparent text-grey-400 hover:text-[#abd2f1] hover:border-[#abd2f1]":o!==t&&c.startsWith("/workspace")}),children:n??t},t)}))})})}function v(e){let{lazy:t,children:n,selectedValue:r}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function k(e){const t=p(e);return(0,g.jsxs)("div",{className:(0,f.A)("tabs-container",x.tabList),children:[(0,g.jsx)(j,{...e,...t}),(0,g.jsx)(v,{...e,...t})]})}function y(e){const t=(0,b.A)();return(0,g.jsx)(k,{...e},String(t))}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(96540);const a={},o=r.createContext(a);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:t},e.children)}},79329:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var r=n(34164);const a={tabItem:"tabItem_Ymn6"};var o=n(74848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,s),hidden:n,children:t})}},81461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"python/data_models/MaritimeChokePointInfo","title":"Maritime Choke Point Info","description":"Get general metadata and statistics for all maritime chokepoint locations from a given provider","source":"@site/content/python/data_models/MaritimeChokePointInfo.md","sourceDirName":"python/data_models","slug":"/python/data_models/MaritimeChokePointInfo","permalink":"/python/data_models/MaritimeChokePointInfo","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/data_models/MaritimeChokePointInfo.md","tags":[],"version":"current","frontMatter":{"title":"Maritime Choke Point Info","description":"Get general metadata and statistics for all maritime chokepoint locations from a given provider"},"sidebar":"tutorialSidebar","previous":{"title":"Manufacturing Outlook Texas","permalink":"/python/data_models/ManufacturingOutlookTexas"},"next":{"title":"Maritime Choke Point Volume","permalink":"/python/data_models/MaritimeChokePointVolume"}}');var a=n(74848),o=n(28453),s=n(25761),i=n(79329);const l={title:"Maritime Choke Point Info",description:"Get general metadata and statistics for all maritime chokepoint locations from a given provider"},d=void 0,c={},u=[{value:"Implementation details",id:"implementation-details",level:2},{value:"Class names",id:"class-names",level:3},{value:"Import Statement",id:"import-statement",level:3},{value:"Parameters",id:"parameters",level:2},{value:"Data",id:"data",level:2}];function h(e){const t={code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"implementation-details",children:"Implementation details"}),"\n",(0,a.jsx)(t.h3,{id:"class-names",children:"Class names"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Model name"}),(0,a.jsx)(t.th,{children:"Parameters class"}),(0,a.jsx)(t.th,{children:"Data class"})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"MaritimeChokePointInfo"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"MaritimeChokePointInfoQueryParams"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"MaritimeChokePointInfoData"})})]})})]}),"\n",(0,a.jsx)(t.h3,{id:"import-statement",children:"Import Statement"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"from openbb_core.provider.standard_models.maritime_chokepoint_info import (\nMaritimeChokePointInfoData,\nMaritimeChokePointInfoQueryParams,\n)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(i.A,{value:"standard",label:"standard"}),(0,a.jsx)(i.A,{value:"imf",label:"imf",children:(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"theme"}),": ",(0,a.jsx)(t.code,{children:"Literal['dark', 'light']"}),(0,a.jsx)("br",{}),"\nTheme for the map. Only valid if ",(0,a.jsx)(t.code,{children:"openbb-charting"})," is installed and ",(0,a.jsx)(t.code,{children:"chart"})," parameter is set to ",(0,a.jsx)(t.code,{children:"true"}),". Default is the 'chart_style' setting in ",(0,a.jsx)(t.code,{children:"user_settings.json"}),", if available, otherwise 'dark'."]})})]}),"\n",(0,a.jsx)(t.h2,{id:"data",children:"Data"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(i.A,{value:"standard",label:"standard",children:(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"chokepoint_code"}),": ",(0,a.jsx)(t.code,{children:"str"}),(0,a.jsx)("br",{}),"\nUnique ID assigned to the chokepoint by the source."]})}),(0,a.jsxs)(i.A,{value:"imf",label:"imf",children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"chokepoint_code"}),": ",(0,a.jsx)(t.code,{children:"str"}),(0,a.jsx)("br",{}),"\nUnique ID assigned to the chokepoint by the source."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"name"}),": ",(0,a.jsx)(t.code,{children:"str"}),(0,a.jsx)("br",{}),"\nPort name."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"latitude"}),": ",(0,a.jsx)(t.code,{children:"float"}),(0,a.jsx)("br",{}),"\nLatitude of the chokepoint location."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"longitude"}),": ",(0,a.jsx)(t.code,{children:"float"}),(0,a.jsx)("br",{}),"\nLongitude of the chokepoint location."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"vessel_count_total"}),": ",(0,a.jsx)(t.code,{children:"int"}),(0,a.jsx)("br",{}),"\nYearly average number of all ships transiting through the chokepoint. Estimated using AIS data beginning 2019. The total is calculated over the sum of vessel_count_container, vessel_count_dry_bulk, vessel_count_general_cargo, vessel_count_roro and vessel_count_tanker."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"vessel_count_tanker"}),": ",(0,a.jsx)(t.code,{children:"int"}),(0,a.jsx)("br",{}),"\nYearly average number of tankers transiting through the chokepoint. Estimated using AIS data beginning 2019."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"vessel_count_container"}),": ",(0,a.jsx)(t.code,{children:"int"}),(0,a.jsx)("br",{}),"\nYearly average number of containers transiting through the chokepoint. Estimated using AIS data beginning 2019."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"vessel_count_general_cargo"}),": ",(0,a.jsx)(t.code,{children:"int"}),(0,a.jsx)("br",{}),"\nYearly average number of general cargo ships transiting through the chokepoint. Estimated using AIS data beginning 2019."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"vessel_count_dry_bulk"}),": ",(0,a.jsx)(t.code,{children:"int"}),(0,a.jsx)("br",{}),"\nYearly average number of dry bulk carriers transiting through the chokepoint. Estimated using AIS data beginning 2019."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"vessel_count_roro"}),": ",(0,a.jsx)(t.code,{children:"int"}),(0,a.jsx)("br",{}),"\nYearly average number of Ro-Ro ships transiting through the chokepoint. Estimated using AIS data beginning 2019."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"industry_top1"}),": ",(0,a.jsx)(t.code,{children:"str"}),(0,a.jsx)("br",{}),"\nFirst dominant traded industries based on the volume of goods estimated to flow through the chokepoint."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"industry_top2"}),": ",(0,a.jsx)(t.code,{children:"str"}),(0,a.jsx)("br",{}),"\nSecond dominant traded industries based on the volume of goods estimated to flow through the chokepoint."]}),(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"industry_top3"}),": ",(0,a.jsx)(t.code,{children:"str"}),(0,a.jsx)("br",{}),"\nThird dominant traded industries based on the volume of goods estimated to flow through the chokepoint."]})]})]})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);