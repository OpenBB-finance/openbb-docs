"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[25443],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(96540);const i={},l=s.createContext(i);function r(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:t},e.children)}},39068:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var s=n(27143),i=n(74848);function l(e){let{title:t}=e;return(0,i.jsx)(s.A,{children:(0,i.jsx)("title",{children:t})})}},63276:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"python/settings/system_settings","title":"System Settings","description":"This section details configuring the ODP settings and environment variables.","source":"@site/content/python/settings/system_settings.mdx","sourceDirName":"python/settings","slug":"/python/settings/system_settings","permalink":"/python/settings/system_settings","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/settings/system_settings.mdx","tags":[],"version":"current","lastUpdatedBy":"Danglewood","lastUpdatedAt":1761197956000,"sidebarPosition":2,"frontMatter":{"title":"System Settings","sidebar_position":2,"description":"This section details configuring the ODP settings and environment variables.","keywords":["ODP","system_settings.json","OpenBB Platform","Python client","getting started","OpenBB Hub","local environment","environment variables"]},"sidebar":"tutorialSidebar","previous":{"title":"Defaults","permalink":"/python/settings/user_settings/defaults"},"next":{"title":"MCP Settings","permalink":"/python/settings/mcp_settings"}}');var i=n(74848),l=n(28453),r=n(39068);const o={title:"System Settings",sidebar_position:2,description:"This section details configuring the ODP settings and environment variables.",keywords:["ODP","system_settings.json","OpenBB Platform","Python client","getting started","OpenBB Hub","local environment","environment variables"]},c=void 0,d={},h=[{value:"Logging Service",id:"logging-service",level:2},{value:"API Settings",id:"api-settings",level:2},{value:"Python Settings",id:"python-settings",level:2},{value:"Docstring Sections",id:"docstring-sections",level:3},{value:"HTTP",id:"http",level:3},{value:"Available settings:",id:"available-settings",level:4},{value:"Uvicorn",id:"uvicorn",level:3}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{title:"System Settings - ODP Python | OpenBB Docs"}),"\n",(0,i.jsxs)(t.p,{children:["An additional configuration file, ",(0,i.jsx)(t.code,{children:"system_settings.json"}),", is located in the same folder as ",(0,i.jsx)(t.code,{children:"user_settings.json"}),", and can be created manually if it does not exist. The items below can be configured via this file, as a JSON dictionary."]}),"\n",(0,i.jsx)(t.h2,{id:"logging-service",children:"Logging Service"}),"\n",(0,i.jsxs)(t.p,{children:["A logging service can be enabled (default is off) in ",(0,i.jsx)(t.code,{children:"system_settings.json"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["When active, it logs commands executed, with their parameters, and any errors to a file.\nThe files will be stored in the ",(0,i.jsx)(t.code,{children:"OpenBBUserData\\logs"})," folder, with each session assigned a UUID and logged in a separate file."]}),"\n",(0,i.jsxs)(t.p,{children:["Add this entry to ",(0,i.jsx)(t.code,{children:"system_settings.json"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "logging_suppress": false,\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"With the configuration set, the logger can be retrieved by name in the code."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'logger = logging.getLogger("openbb.logging_service")\n'})}),"\n",(0,i.jsx)(t.h2,{id:"api-settings",children:"API Settings"}),"\n",(0,i.jsxs)(t.p,{children:["The, ",(0,i.jsx)(t.code,{children:'"api_settings"'}),", key is a nested dictionary, and is passed to the instance of FastAPI."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "api_settings": {\n        "version": "1",\n        "title": "OpenBB Platform API",\n        "description": "This is the OpenBB Platform API.",\n        "terms_of_service": "http://example.com/terms/",\n        "contact_name": "OpenBB Team",\n        "contact_url": "https://openbb.co",\n        "contact_email": "hello@openbb.co",\n        "license_name": "AGPLv3",\n        "license_url": "https://github.com/OpenBB-finance/OpenBB/blob/develop/LICENSE",\n        "servers": [\n            {\n                "url": "",\n                "description": "Local OpenBB development server"\n            }\n        ],\n        "cors": {\n            "allow_origins": [\n                "*"\n            ],\n            "allow_methods": [\n                "*"\n            ],\n            "allow_headers": [\n                "*"\n            ]\n        },\n        "prefix": "/api/v1"\n    }\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"python-settings",children:"Python Settings"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"python_settings"})," key is a nested dictionary. It contains configurations for the docstring elements within the Python interface, as well as global HTTP and Uvicorn settings."]}),"\n",(0,i.jsx)(t.p,{children:"Additional keys and values can be supplied, however, unless they are specifically implemented by custom code, they will be ignored."}),"\n",(0,i.jsx)(t.h3,{id:"docstring-sections",children:"Docstring Sections"}),"\n",(0,i.jsx)(t.p,{children:"This configuration allows the user to include specific elements of the docstrings. Useful for reducing the context length when incorporating LLMs and function calling. The settings below are for the complete docstring, and are the default state."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "python_settings": {\n        "docstring_sections": ["description", "parameters", "returns", "examples"],\n        "docstring_max_length": null\n    }\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"http",children:"HTTP"}),"\n",(0,i.jsx)(t.admonition,{type:"important",children:(0,i.jsx)(t.p,{children:"This section refers to settings available beginning OpenBB v4.4.0"})}),"\n",(0,i.jsxs)(t.p,{children:["Configurations within, ",(0,i.jsx)(t.code,{children:'python_settings["http"]'}),", apply to both, the requests, and aiohttp, libraries."]}),"\n",(0,i.jsxs)(t.p,{children:["The settings are passed into the ",(0,i.jsx)(t.code,{children:"requests.Session"})," object and the ",(0,i.jsx)(t.code,{children:"aiohttp.ClientSession"})," object by:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"openbb_core.provider.utils.helpers.make_request"})," - Sync"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"openbb_core.provider.utils.helpers.amake_request"})," - Async"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"openbb_core.provider.utils.helpers.amake_requests"})," - Async (multiple requests)"]}),"\n",(0,i.jsx)(t.li,{children:"Inserted to use with YFinance & Finviz library implementations."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Return a session object with the settings applied by:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"openbb_core.provider.utils.helpers.get_requests_session"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"openbb_core.provider.utils.helpers.get_async_requests_session"})}),"\n"]}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:["Pass the session object, returned by ",(0,i.jsx)(t.code,{children:"get_requests_session"}),", to use this configuration directly with the yFinance library."]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import yfinance as yf\nfrom openbb_core.provider.utils.helpers import get_requests_session\n\nsession = get_requests_session()\nticker = yf.Ticker("AAPL", session=session)\n'})})]}),"\n",(0,i.jsx)(t.h4,{id:"available-settings",children:"Available settings:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,i.jsx)(t.th,{style:{textAlign:"right"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"cafile"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Path to a CA certificate file."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"certfile"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Path to a client certificate file."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"keyfile"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Path to a client key file."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"password"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Password for the client key file (aiohttp only)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"verify_ssl"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"bool"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Verify SSL certificates."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"fingerprint"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"SSL fingerprint (aiohttp only)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"proxy"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Proxy URL."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"proxy_auth"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str, list"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Proxy basic authentication (aiohttp only)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"proxy_headers"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"dict"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Proxy headers (aiohttp only)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"int"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Request timeout."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"auth"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"str, list"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Basic authentication."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"headers"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"dict"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Request headers."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"cookies"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"dict"}),(0,i.jsx)(t.td,{style:{textAlign:"right"},children:"Dictionary of session cookies."})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"Any additional keys supplied will be ignored unless explicitly implemented via custom code."}),"\n",(0,i.jsx)(t.h3,{id:"uvicorn",children:"Uvicorn"}),"\n",(0,i.jsxs)(t.p,{children:["The, ",(0,i.jsx)(t.code,{children:'python_settings["uvicorn"]'}),", key covers the launch of FastAPI when using the following entry points:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Running the FastAPI as a Python module script.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"python -m openbb_core.api.rest_api"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Running the ",(0,i.jsx)(t.code,{children:"openbb-api"})," command.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"openbb-api"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["All settings are passed directly to ",(0,i.jsx)(t.code,{children:"uvicorn.run"}),", and can be found in the Uvicorn ",(0,i.jsx)(t.a,{href:"https://www.uvicorn.org/settings/",children:"documentation"})]}),"\n",(0,i.jsx)(t.admonition,{type:"important",children:(0,i.jsx)(t.p,{children:"Keyword arguments supplied to the command line will take priority over the settings in this configuration."})})]})}function g(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);