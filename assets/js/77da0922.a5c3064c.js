"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[82165],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},97148:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"python/extensions/interface/openbb-mcp","title":"openbb-mcp","description":"Learn how to use the `openbb-mcp-server` Python library to convert a FastAPI application into a Workspace-ready MCP server.","source":"@site/content/python/extensions/interface/openbb-mcp.mdx","sourceDirName":"python/extensions/interface","slug":"/python/extensions/interface/openbb-mcp","permalink":"/python/extensions/interface/openbb-mcp","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/extensions/interface/openbb-mcp.mdx","tags":[],"version":"current","lastUpdatedBy":"DidierRLopes","lastUpdatedAt":1761133924000,"sidebarPosition":4,"frontMatter":{"title":"openbb-mcp","sidebar_position":4,"description":"Learn how to use the `openbb-mcp-server` Python library to convert a FastAPI application into a Workspace-ready MCP server.","keywords":["MCP Server","MCP Tool","AI","Ada","Agent","Copilot","Prompts","openapi.json","OpenBB MCP","FastAPI","Python","FastMCP","Workspace widgets","Widget definitions","Autogenerate"]},"sidebar":"tutorialSidebar","previous":{"title":"openbb-api","permalink":"/python/extensions/interface/openbb-api"},"next":{"title":"Providers","permalink":"/python/extensions/providers/"}}');var i=s(74848),r=s(28453);const o={title:"openbb-mcp",sidebar_position:4,description:"Learn how to use the `openbb-mcp-server` Python library to convert a FastAPI application into a Workspace-ready MCP server.",keywords:["MCP Server","MCP Tool","AI","Ada","Agent","Copilot","Prompts","openapi.json","OpenBB MCP","FastAPI","Python","FastMCP","Workspace widgets","Widget definitions","Autogenerate"]},a=void 0,l={},c=[{value:"Features",id:"features",level:2},{value:"Installation &amp; Usage",id:"installation--usage",level:2},{value:"Command Line Arguments",id:"command-line-arguments",level:3},{value:"All other arguments will be passed to <code>uvicorn.run</code>.",id:"all-other-arguments-will-be-passed-to-uvicornrun",level:4},{value:"Settings Reference",id:"settings-reference",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Server-Side Authentication",id:"server-side-authentication",level:3},{value:"Client-Side Authentication",id:"client-side-authentication",level:3},{value:"Programmatic Authentication",id:"programmatic-authentication",level:3},{value:"Advanced Configuration: Lists and Dictionaries",id:"advanced-configuration-lists-and-dictionaries",level:2},{value:"1. Comma-Separated Strings",id:"1-comma-separated-strings",level:4},{value:"2. JSON-Encoded Strings",id:"2-json-encoded-strings",level:4},{value:"Practical Examples",id:"practical-examples",level:4},{value:"Tool Categories",id:"tool-categories",level:2},{value:"Root Tools",id:"root-tools",level:3},{value:"Tool Discovery",id:"tool-discovery",level:2},{value:"System Prompt",id:"system-prompt",level:2},{value:"Server Prompts",id:"server-prompts",level:2},{value:"Inline Prompts",id:"inline-prompts",level:2},{value:"Inline MCP Configuration",id:"inline-mcp-configuration",level:2},{value:"MCPConfigModel Validation",id:"mcpconfigmodel-validation",level:3},{value:"Example",id:"example",level:3},{value:"Client Examples",id:"client-examples",level:2},{value:"Claude Desktop",id:"claude-desktop",level:3},{value:"Cursor",id:"cursor",level:3},{value:"VS Code",id:"vs-code",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The, ",(0,i.jsx)(n.a,{href:"https://pypi.org/project/openbb-mcp-server/",children:"openbb-mcp-server"}),", Python package is for converting OPD Python installations, or other FastAPI instances, into Workspace-compatible MCP servers accessible from the chat interface."]}),"\n",(0,i.jsxs)(n.p,{children:["Servers can be extensively configured in a manner similar to ",(0,i.jsx)(n.a,{href:"/python/extensions/interface/openbb-api",children:(0,i.jsx)(n.code,{children:"openbb-api"})}),", the Minimum Viable Python approach."]}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Convert any FastAPI application into a MCP server."}),"\n",(0,i.jsxs)(n.li,{children:["Configure MCP tools and prompts through inline code via ",(0,i.jsx)(n.code,{children:"openapi_extra"}),", under the ",(0,i.jsx)(n.code,{children:"mcp_config"})," key."]}),"\n",(0,i.jsx)(n.li,{children:"Add a system prompt to provide connecting agents with comprehensive onboarding and usage instructions."}),"\n",(0,i.jsx)(n.li,{children:"Add server prompts for agents to execute multi-tool workflows with minimal reasoning effort."}),"\n",(0,i.jsxs)(n.li,{children:["Compatible with ",(0,i.jsx)(n.code,{children:"stdio"}),", ",(0,i.jsx)(n.code,{children:"sse"}),", and ",(0,i.jsx)(n.code,{children:"streamable-http"})," transports."]}),"\n",(0,i.jsx)(n.li,{children:"Supports dynamic tool discovery and fixed tool sets."}),"\n",(0,i.jsx)(n.li,{children:"No-code Basic Auth implementation via Bearer token."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation--usage",children:"Installation & Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"pip install openbb-mcp-server\n"})}),"\n",(0,i.jsx)(n.p,{children:"Start the OpenBB MCP server with default settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"openbb-mcp\n"})}),"\n",(0,i.jsx)(n.h3,{id:"command-line-arguments",children:"Command Line Arguments"}),"\n",(0,i.jsxs)(n.p,{children:["Enter ",(0,i.jsx)(n.code,{children:"openbb-mcp --help"})," to see the docstring from the command line."]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Arguments List"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"--help\n    Show this help message and exit.\n\n--app <app_path>\n    The path to the FastAPI app instance. This can be in the format\n    'module.path:app_instance' or a file path 'path/to/app.py'.\n    If not provided, the server will run with the default built-in app.\n\n--name <name>\n    The name of the FastAPI app instance or factory function in the app file.\n    Defaults to 'app'.\n\n--factory\n    If set, the app is treated as a factory function that will be called\n    to create the FastAPI app instance.\n\n--host <host>\n    The host to bind the server to. Defaults to '127.0.0.1'.\n    This is a uvicorn argument.\n\n--port <port>\n    The port to bind the server to. Defaults to 8000.\n    This is a uvicorn argument.\n\n--transport <transport>\n    The transport mechanism to use for the MCP server.\n    Defaults to 'streamable-http'.\n\n--allowed-categories <categories>\n    A comma-separated list of tool categories to allow.\n    If not provided, all categories are allowed.\n\n--default-categories <categories>\n    A comma-separated list of tool categories to be enabled by default.\n    Defaults to 'all'.\n\n--no-tool-discovery\n    If set, tool discovery will be disabled.\n\n--system-prompt <path>\n    Path to a TXT file with the system prompt.\n\n--server-prompts <path>\n    Path to a JSON file with a list of server prompts.\n"})})]}),"\n",(0,i.jsxs)(n.h4,{id:"all-other-arguments-will-be-passed-to-uvicornrun",children:["All other arguments will be passed to ",(0,i.jsx)(n.code,{children:"uvicorn.run"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"settings-reference",children:"Settings Reference"}),"\n",(0,i.jsxs)(n.p,{children:["Go ",(0,i.jsx)(n.a,{href:"/python/settings/mcp_settings",children:"here"})," to see the complete table.\nAll settings can be configured via the ",(0,i.jsx)(n.code,{children:"mcp_settings.json"})," file or as environment variables."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"The server can be configured through multiple methods, with settings applied in the following order of precedence:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Command Line Arguments"}),": Highest priority, overriding all other methods."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment Variables"}),": Each setting can be controlled by an environment variable, which will override the configuration file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configuration File"}),": A JSON file at ",(0,i.jsx)(n.code,{children:"~/.openbb_platform/mcp_settings.json"})," provides the base configuration.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If the configuration file does not exist, one will be populated with defaults."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["For some data providers, you need to set API key in the ",(0,i.jsx)(n.code,{children:"~/.openbb_platform/user_settings.json"})," file."]})}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"The MCP server supports client-side and server-side authentication to secure endpoints."}),"\n",(0,i.jsx)(n.h3,{id:"server-side-authentication",children:"Server-Side Authentication"}),"\n",(0,i.jsxs)(n.p,{children:["Server-side authentication requires incoming requests to provide credentials. This is configured using the ",(0,i.jsx)(n.code,{children:"server_auth"})," setting, which accepts a tuple of ",(0,i.jsx)(n.code,{children:"(username, password)"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When ",(0,i.jsx)(n.code,{children:"server_auth"})," is enabled, clients must include an ",(0,i.jsx)(n.code,{children:"Authorization"})," header with a ",(0,i.jsx)(n.code,{children:"Bearer"})," token. The token should be a Base64-encoded string of ",(0,i.jsx)(n.code,{children:"username:password"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example: Environment Variable"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-env",children:'OPENBB_MCP_SERVER_AUTH=\'["myuser", "mypass"]\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Example: ",(0,i.jsx)(n.code,{children:"mcp_settings.json"})]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "server_auth": ["myuser", "mypass"]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"client-side-authentication",children:"Client-Side Authentication"}),"\n",(0,i.jsx)(n.p,{children:"Client-side authentication configures the MCP server to use credentials when making downstream requests. This is useful when the server needs to authenticate with other services."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example: Environment Variable"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-env",children:'OPENBB_MCP_CLIENT_AUTH=\'["client_user", "client_pass"]\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Example: ",(0,i.jsx)(n.code,{children:"mcp_settings.json"})]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "client_auth": ["client_user", "client_pass"]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"programmatic-authentication",children:"Programmatic Authentication"}),"\n",(0,i.jsxs)(n.p,{children:["For advanced use cases, you can pass a pre-configured authentication object directly to the ",(0,i.jsx)(n.code,{children:"create_mcp_server"})," function using the ",(0,i.jsx)(n.code,{children:"auth"})," parameter. This allows you to implement custom authentication logic or use third-party authentication providers."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from fastmcp.server.auth.providers import BearerProvider\nfrom openbb_mcp_server.app import create_mcp_server\n\n# Create a custom auth provider\ncustom_auth = BearerProvider(...)\n\n# Pass it to the server\nmcp_server = create_mcp_server(settings, fastapi_app, auth=custom_auth)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-configuration-lists-and-dictionaries",children:"Advanced Configuration: Lists and Dictionaries"}),"\n",(0,i.jsx)(n.p,{children:"For settings that accept a list or a dictionary, you have two flexible formats for defining them in both command-line arguments and environment variables."}),"\n",(0,i.jsx)(n.h4,{id:"1-comma-separated-strings",children:"1. Comma-Separated Strings"}),"\n",(0,i.jsx)(n.p,{children:"This is a simple and readable way to define lists and simple dictionaries."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lists"}),": Provide a string of comma-separated values.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"equity,news,crypto"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dictionaries"}),": Provide a string of comma-separated ",(0,i.jsx)(n.code,{children:"key:value"})," pairs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:"host:0.0.0.0,port:9000"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"2-json-encoded-strings",children:"2. JSON-Encoded Strings"}),"\n",(0,i.jsx)(n.p,{children:"For more complex data structures, or to ensure precise type handling (e.g., for numbers and booleans), you can use a JSON-encoded string."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lists"}),": A standard JSON array.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:'\'["equity", "news", "crypto"]\''})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dictionaries"}),": A standard JSON object.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Example: ",(0,i.jsx)(n.code,{children:'\'{"host": "0.0.0.0", "port": 9000}\''})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Important Note on Quoting"}),": When passing JSON-encoded strings on the command line, it is highly recommended to wrap the entire string in ",(0,i.jsxs)(n.strong,{children:["single quotes (",(0,i.jsx)(n.code,{children:"'"}),")"]}),". This prevents your shell from interpreting the double quotes (",(0,i.jsx)(n.code,{children:'"'}),") inside the JSON string, which can lead to parsing errors."]}),"\n",(0,i.jsx)(n.h4,{id:"practical-examples",children:"Practical Examples"}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s how you can apply these formats in practice:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command-Line Arguments:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'# List with comma-separated values\nopenbb-mcp --default-categories equity,news\n\n# List with a JSON-encoded string (note the single quotes)\nopenbb-mcp --default-categories \'["equity", "news"]\'\n\n# Dictionary with comma-separated key:value pairs\nopenbb-mcp --uvicorn-config "host:0.0.0.0,port:9000"\n\n# Dictionary with a JSON-encoded string (note the single quotes)\nopenbb-mcp --uvicorn-config \'{"host": "0.0.0.0", "port": 9000, "env_file": "./path_to/.env"}\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Environment Variables (in a ",(0,i.jsx)(n.code,{children:".env"})," file):"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-env",children:'# List with comma-separated values\nOPENBB_MCP_DEFAULT_TOOL_CATEGORIES="equity,news"\n\n# List with a JSON-encoded string\nOPENBB_MCP_DEFAULT_TOOL_CATEGORIES=\'["equity", "news"]\'\n\n# Dictionary with comma-separated key:value pairs\nOPENBB_MCP_UVICORN_CONFIG="host:0.0.0.0,port:9000"\n\n# Dictionary with a JSON-encoded string\nOPENBB_MCP_UVICORN_CONFIG=\'{"host": "0.0.0.0", "port": 9000, "env_file": "./path_to/.env"}\'\n'})}),"\n",(0,i.jsx)(n.h2,{id:"tool-categories",children:"Tool Categories"}),"\n",(0,i.jsx)(n.p,{children:"The server organizes OpenBB tools into categories based on the included API Routers (paths).\nCategories depend on the installed extensions, but will be the first path in the API after the given prefix."}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"equity"})})," - Stock data, fundamentals, price history, estimates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"crypto"})})," - Cryptocurrency data and analysis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"economy"})})," - Economic indicators, GDP, employment data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"news"})})," - Financial news from various sources"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Each category contains subcategories that group related functionality (e.g., ",(0,i.jsx)(n.code,{children:"equity_price"}),", ",(0,i.jsx)(n.code,{children:"equity_fundamental"}),", etc.)."]}),"\n",(0,i.jsx)(n.h3,{id:"root-tools",children:"Root Tools"}),"\n",(0,i.jsx)(n.p,{children:'An additional set of tools are tagged as "admin", or "prompt".'}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Tool List"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"available_categories: List all categories."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"available_tools: List all tools by category."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"category"}),": Category of tool to list."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subcategory"}),": Optional subcategory. Use 'general' for tools directly under the category."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"activate_tools: Activate a tool for use."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tool_names"}),": Names of tools to activate. Comma-separated string for multiple."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"deactivate_tools: Deactivate a tool after use."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tool_names"}),": Names of tools to deactivate. Comma-separated string for multiple."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"list_prompts: Lists all available prompts in the server."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"execute_prompt: Execute a prompt with arguments, if any."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prompt_name"}),": Name of the prompt to execute."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"arguments"}),": Dictionary of argument",":value"," for the prompt."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,i.jsx)(n.h2,{id:"tool-discovery",children:"Tool Discovery"}),"\n",(0,i.jsxs)(n.p,{children:["When ",(0,i.jsx)(n.code,{children:"enable_tool_discovery"})," is enabled (default), the server provides discovery tools that allow agents to:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Discover available tool categories and subcategories"}),"\n",(0,i.jsx)(n.li,{children:"See tool counts and descriptions before activating"}),"\n",(0,i.jsx)(n.li,{children:"Enable/disable specific tools dynamically during a session"}),"\n",(0,i.jsx)(n.li,{children:"Start with minimal tools and progressively add more as needed"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To take full advantage of minimal startup tools, you should set the ",(0,i.jsx)(n.code,{children:"--default-categories"})," argument to ",(0,i.jsx)(n.code,{children:"admin"}),". This will enable only the discovery tools at startup."]}),"\n",(0,i.jsxs)(n.p,{children:["For multi-client deployments or scenarios where you want a fixed toolset, disable tool discovery with ",(0,i.jsx)(n.code,{children:"--no-tool-discovery"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"system-prompt",children:"System Prompt"}),"\n",(0,i.jsxs)(n.p,{children:["A system prompt file can be added on initialization, or defined in the configuration file, or as an environment variable.\nIt should be a valid, relative or absolute, path to a ",(0,i.jsx)(n.code,{children:".txt"})," file."]}),"\n",(0,i.jsxs)(n.p,{children:["The system prompt is made available as a resource, ",(0,i.jsx)(n.code,{children:"resource://system_prompt"}),", and is discoverable from the, ",(0,i.jsx)(n.code,{children:"list_prompts"}),", tool."]}),"\n",(0,i.jsx)(n.p,{children:"Clients will not automatically use the system prompt, instruct them to use it as part of their onboarding and orientation."}),"\n",(0,i.jsx)(n.h2,{id:"server-prompts",children:"Server Prompts"}),"\n",(0,i.jsxs)(n.p,{children:["A system prompt file can be added on initialization, or defined in the configuration file, or as an environment variable.\nIt should be a valid, relative or absolute, path to a ",(0,i.jsx)(n.code,{children:".json"})," file with a list of prompt definitions."]}),"\n",(0,i.jsx)(n.p,{children:"Each entry in the JSON file is a dictionary with the following properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})}),": Name of the prompt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"description"})}),": A brief description of the prompt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"content"})}),": The content for rendering the prompt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"arguments"})}),": Optional list of arguments.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})}),": Name of the argument."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"type"})}),': Simple Python type as a string - i.e, "int".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"default"})}),": Supplying a default value makes the parameter Optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"description"})}),": Description of the parameter. Supply need-to-know details for the LLM."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tags"})}),": List of tags to apply to the argument."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Prompts here should provide the LLM a clear path for executing a workflow combining multiple tools or steps, for example:"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Example Server Prompt"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n    {\n      "name": "equity_analysis",\n      "description": "Perform a comprehensive equity analysis using multiple data sources and metrics",\n      "content": "Conduct a comprehensive analysis of {symbol} for {analysis_period}. Follow this workflow:\\n1. First, get basic stock quote and recent price performance using equity_price_performance.\\n2. Retrieve fundamental data including financial statements, ratios, and key metrics using [equity_fundamental_ratios, equity_fundamental_metrics, quity_fundamental_balance].\\n3. Gather recent news and analyst estimates for the company using [news_company, equity_estiments_price_target].\\n4. Compare valuation metrics with industry peers using equity_compare_peers.\\n5. Summarize findings with investment recommendation.\\n\\nFocus areas: {focus_areas}\\nRisk tolerance: {risk_tolerance}",\n      "arguments": [\n        {\n          "name": "symbol",\n          "type": "str",\n          "description": "Stock ticker symbol to analyze (e.g., AAPL, TSLA)"\n        },\n        {\n          "name": "analysis_period",\n          "type": "str",\n          "default": "last 12 months",\n          "description": "Time period for the analysis"\n        },\n        {\n          "name": "focus_areas",\n          "type": "str",\n          "default": "growth, profitability, valuation",\n          "description": "Specific areas to focus on in the analysis"\n        },\n        {\n          "name": "risk_tolerance",\n          "type": "str",\n          "default": "moderate",\n          "description": "Risk tolerance level: conservative, moderate, or aggressive"\n        }\n      ],\n      "tags": ["equity", "analysis", "comprehensive"]\n    }\n]\n'})})]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"An invalid prompt definition, or prompt argument, will be logged to the console as an error.\nThe item will be ignored, and will not raise an error."})}),"\n",(0,i.jsx)(n.h2,{id:"inline-prompts",children:"Inline Prompts"}),"\n",(0,i.jsxs)(n.p,{children:["Prompts can be added to an endpoint through the ",(0,i.jsx)(n.code,{children:"openapi_extra"})," dictionary."]}),"\n",(0,i.jsx)(n.p,{children:"Adding prompts here will help the LLM use the endpoint for specific purposes, with less reasoning overhead."}),"\n",(0,i.jsxs)(n.p,{children:["Direct it to ",(0,i.jsx)(n.code,{children:"execute_prompt"}),", or to make note that helpful prompts may be included in the tool's metadata."]}),"\n",(0,i.jsxs)(n.p,{children:["The block below assumes ",(0,i.jsx)(n.code,{children:"app"})," is an instance of ",(0,i.jsx)(n.code,{children:"FastAPI"})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Example Inline Prompt"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.get(\n    "/economy/gdp",\n    openapi_extra={\n        "mcp_config": {\n            "prompts": [\n                {\n                    "name": "gdp_summary_prompt",\n                    "description": "Generate a brief summary of GDP for a country.",\n                    "content": "Provide a concise summary of the GDP for {country} over the last {years} years.",\n                    "arguments": [\n                        {\n                            "name": "years",\n                            "type": "int",\n                            "default": 5,\n                            "description": "Number of years to summarize.",\n                        }\n                    ],\n                    "tags": ["economy", "gdp", "summary"],\n                },\n                {\n                    "name": "gdp_comparison_prompt",\n                    "description": "Compare the GDP of two countries.",\n                    "content": "Compare the GDP growth of {country1} and {country2}.",\n                    "arguments": [\n                        {\n                            "name": "country1",\n                            "type": "str",\n                            "description": "First country for comparison.",\n                        },\n                        {\n                            "name": "country2",\n                            "type": "str",\n                            "description": "Second country for comparison.",\n                        },\n                    ],\n                    "tags": ["economy", "gdp", "comparison"],\n                },\n            ]\n        }\n    },\n)\ndef get_gdp_data(country: str, period: Literal["annual", "quarterly"] = "annual"):\n    """Get GDP data for a specific country."""\n    return {"country": country, "period": period}\n'})})]}),"\n",(0,i.jsxs)(n.p,{children:["Along with being added to ",(0,i.jsx)(n.code,{children:"list_prompts"}),", prompts will be included with the tool's metadata, returned by ",(0,i.jsx)(n.code,{children:"list_tools"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The discovery metadata for this tool would look like:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Economy Tools:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"economy_gdp"})}),": Get GDP data for a specific country."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Associated Prompts:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"gdp_summary_prompt"}),": Generate a brief summary of GDP for a country. (Arguments: ",(0,i.jsx)(n.code,{children:"years"}),", ",(0,i.jsx)(n.code,{children:"country"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"gdp_comparison_prompt"}),": Compare the GDP of two countries. (Arguments: ",(0,i.jsx)(n.code,{children:"country1"}),", ",(0,i.jsx)(n.code,{children:"country2"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Use a prompt with the ",(0,i.jsx)(n.code,{children:"execute_prompt"})," tool:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "prompt_name": "gdp_summary_prompt",\n  "arguments": {\n    "years": 10,\n    "country": "Japan"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Which outputs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "description": "Generate a brief summary of GDP for a country.",\n  "messages": [\n    {\n      "role": "user",\n      "content": {\n        "type": "text",\n        "text": "Use the tool, economy_gdp, to perform the following task.\\n\\nProvide a concise summary of the GDP for Japan over the last 10 years."\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"inline-mcp-configuration",children:"Inline MCP Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["In addition to defining prompts, the ",(0,i.jsx)(n.code,{children:"openapi_extra.mcp_config"})," dictionary allows for more granular control over how your FastAPI routes are exposed as MCP tools.\nBy using the ",(0,i.jsx)(n.code,{children:"MCPConfigModel"}),", you can validate your configuration and access several powerful properties to customize tool behavior."]}),"\n",(0,i.jsx)(n.p,{children:"It can be imported with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"from openbb_mcp_server.models.mcp_config import MCPConfigModel\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Including this configuration in the ",(0,i.jsx)(n.code,{children:"openapi_extra"})," slot will override any automatically generated value.\nYou only need to enter the values that you wish to customize."]}),"\n",(0,i.jsxs)(n.p,{children:["Below are the properties you can define within ",(0,i.jsx)(n.code,{children:"mcp_config"}),":"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Properties"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"expose"})})," (",(0,i.jsx)(n.code,{children:"Optional[bool]"}),"): Set to ",(0,i.jsx)(n.code,{children:"False"})," to completely hide a route from the MCP server. This is useful for internal or deprecated endpoints that should not be available as tools."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"mcp_type"})})," (",(0,i.jsx)(n.code,{children:"Optional[MCPType]"}),"): Classify the route as a specific MCP type. Valid options are ",(0,i.jsx)(n.code,{children:'"tool"'}),", ",(0,i.jsx)(n.code,{children:'"resource"'}),", or ",(0,i.jsx)(n.code,{children:'"resource_template"'}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"methods"})})," (",(0,i.jsx)(n.code,{children:"Optional[list[HTTPMethod]]"}),"): Specify which HTTP methods to expose for a route that supports multiple methods (e.g., GET, POST). If omitted, all supported methods are exposed. Valid methods include ",(0,i.jsx)(n.code,{children:'"GET"'}),", ",(0,i.jsx)(n.code,{children:'"POST"'}),", ",(0,i.jsx)(n.code,{children:'"PUT"'}),", ",(0,i.jsx)(n.code,{children:'"PATCH"'}),", ",(0,i.jsx)(n.code,{children:'"DELETE"'}),", ",(0,i.jsx)(n.code,{children:'"HEAD"'}),", ",(0,i.jsx)(n.code,{children:'"OPTIONS"'}),", and ",(0,i.jsx)(n.code,{children:"*"})," (for all)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"exclude_args"})})," (",(0,i.jsx)(n.code,{children:"Optional[list[str]]"}),"): Provide a list of argument names to exclude from the tool\u2019s signature. This is useful for filtering out parameters that are handled internally or are not relevant to the end-user."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"prompts"})})," (",(0,i.jsx)(n.code,{children:"Optional[list[dict[str, str]]]"}),"): List of prompts specific to the endpoint. Keys for a prompt are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})}),": Name of the prompt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"description"})}),": A brief description of the prompt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"content"})}),": The content for rendering the prompt. Endpoint parameters are inferred by placeholders."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"arguments"})}),": Optional list of arguments. Items can be exclusive to the prompt, and not referenced in the endpoint.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})}),": Name of the argument."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"type"})}),': Simple Python type as a string - i.e, "int".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"default"})}),": Supplying a default value makes the parameter Optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"description"})}),": Description of the parameter. Supply need-to-know details for the LLM."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tags"})}),": List of tags to apply to the argument."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"mcpconfigmodel-validation",children:"MCPConfigModel Validation"}),"\n",(0,i.jsx)(n.p,{children:"Values will be validated by the model before including in the server. Invalid configurations will be logged to the console as an error, and the inline definition will be ignored."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"ERROR    Invalid MCP config found in route, 'GET /equity/price'. Skipping tool customization because of validation error ->\n          1 validation error for MCPConfigModel\n          mcp_type\n            Input should be 'tool', 'resource' or 'resource_template' [type=enum, input_value='some_setting', input_type=str]\n              For further information visit https://errors.pydantic.dev/2.11/v/enum\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Here is an example demonstrating how to use these properties to fine-tune a tool\u2019s behavior:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.get(\n    "/some/route",\n    openapi_extra={\n        "mcp_config": {\n            "expose": True,\n            "mcp_type": "tool",\n            "methods": ["GET"],\n            "exclude_args": ["internal_param"],\n            "prompts": [\n                # ... prompt definitions ...\n            ]\n        }\n    },\n)\ndef some_route(param1: str, internal_param: str = "default"):\n    """An example route with advanced MCP configuration."""\n    return {"param1": param1}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, the ",(0,i.jsx)(n.code,{children:"/some/route"})," endpoint is explicitly exposed as a ",(0,i.jsx)(n.code,{children:"tool"})," for the ",(0,i.jsx)(n.code,{children:"GET"})," method only, and the ",(0,i.jsx)(n.code,{children:"internal_param"})," argument is hidden from the tool\u2019s interface."]}),"\n",(0,i.jsx)(n.h2,{id:"client-examples",children:"Client Examples"}),"\n",(0,i.jsxs)(n.p,{children:["Start the server with the appropriate transport and configuration for the client, the default transport is ",(0,i.jsx)(n.code,{children:"http"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start with default settings\nopenbb-mcp\n\n# Use an alternative transport\nopenbb-mcp --transport sse\n\n# Start with specific categories and custom host/port\nopenbb-mcp --default-categories equity,news --host 0.0.0.0 --port 8080\n\n# Start with allowed categories restriction\nopenbb-mcp --allowed-categories equity,crypto,news\n\n# Disable tool discovery for multi-client usage\nopenbb-mcp --no-tool-discovery\n"})}),"\n",(0,i.jsx)(n.h3,{id:"claude-desktop",children:"Claude Desktop"}),"\n",(0,i.jsx)(n.p,{children:"To connect the OpenBB MCP server with Claude Desktop, you need to configure it as a custom tool server. Here are the steps:"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Steps"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Locate the settings or configuration file for Claude Desktop where you can define custom MCP servers."}),"\n",(0,i.jsxs)(n.li,{children:["Add the following entry to your ",(0,i.jsx)(n.code,{children:"mcpServers"})," configuration. This will configure Claude Desktop to launch the OpenBB MCP server automatically using ",(0,i.jsx)(n.code,{children:"stdio"})," for communication."]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "openbb-mcp": {\n      "command": "uvx",\n      "args": [\n        "--from",\n        "openbb-mcp-server",\n        "--with",\n        "openbb",\n        "openbb-mcp",\n        "--transport",\n        "stdio"\n      ]\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Ensure that ",(0,i.jsx)(n.code,{children:"uvx"}),", is installed and available in your system's PATH. If not, follow the installation instructions."]}),"\n",(0,i.jsx)(n.li,{children:'Restart Claude Desktop to apply the changes. You should now see "openbb-mcp" as an available tool source.'}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"cursor",children:"Cursor"}),"\n",(0,i.jsx)(n.p,{children:"To use OpenBB tools within Cursor, you first need to run the MCP server and then tell Cursor how to connect to it."}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Steps"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 1: Run the OpenBB MCP Server"})}),(0,i.jsx)(n.p,{children:"Open your terminal and start the server. You can use the default settings or customize it."}),(0,i.jsx)(n.p,{children:"For a default setup, run:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openbb-mcp\n"})}),(0,i.jsxs)(n.p,{children:["The server will start on ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8001"}),"."]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 2: Configure Cursor"})}),(0,i.jsxs)(n.p,{children:["Add the following configuration to the ",(0,i.jsx)(n.code,{children:"mcpServers"})," object in your ",(0,i.jsx)(n.code,{children:"mcp.json"})," file. If the ",(0,i.jsx)(n.code,{children:"mcpServers"})," object doesn't exist, you can add it."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "openbb-mcp": {\n      "url": "http://localhost:8001/mcp/"\n    }\n  }\n}\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"vs-code",children:"VS Code"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{mdxType:"summary",children:"Steps"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 1: Enable MCP in VS Code Settings"})}),(0,i.jsxs)(n.p,{children:["Enter ",(0,i.jsx)(n.code,{children:"shift + command + p"}),' and open "Preferences: Open User Settings"']}),(0,i.jsx)(n.p,{children:'Search for "mcp", and the item should show up under "Chat". Check the box to enable MCP server integrations.'}),(0,i.jsx)("img",{width:"1278",height:"411",alt:"vs-code-mcp-enable",src:"https://github.com/user-attachments/assets/5ace29de-e59c-45c3-b751-c6d92614e0ee"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 2: Run the OpenBB MCP Server"})}),(0,i.jsx)(n.p,{children:"Open your terminal and start the server. You can use the default settings or customize it."}),(0,i.jsx)(n.p,{children:"For a default setup, run:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openbb-mcp\n"})}),(0,i.jsxs)(n.p,{children:["The server will start on ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8001"}),"."]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 3: Add Server as HTTP"})}),(0,i.jsxs)(n.p,{children:["Enter ",(0,i.jsx)(n.code,{children:"shift + command + p"}),' and select "MCP: Add Server".']}),(0,i.jsx)("img",{width:"595",height:"412",alt:"vs-code-mcp-commands",src:"https://github.com/user-attachments/assets/9b13a5b6-ec20-43e2-9aae-7982e9fdcae6"}),(0,i.jsx)(n.p,{children:"Press enter and then select HTTP."}),(0,i.jsx)("img",{width:"594",height:"174",alt:"vs-code-mcp-add-http",src:"https://github.com/user-attachments/assets/d2a06e4b-404a-4317-ad2c-241c1ac5e04b"}),(0,i.jsx)(n.p,{children:"Copy the URL from the console of the running server, and enter it"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"INFO     Starting MCP server 'OpenBB MCP' with transport 'streamable-http' on http://127.0.0.1:8001/mcp\n"})}),(0,i.jsxs)(n.p,{children:["Give it a name, and add it either as global or to a workspace. The end result will create a ",(0,i.jsx)(n.code,{children:"mcp.json"})," VS Code configuration file for the chosen domain."]}),(0,i.jsx)("img",{width:"402",height:"195",alt:"vs-code-mcp-json",src:"https://github.com/user-attachments/assets/fdea335b-0523-4103-be3e-b5d9675c25b3"}),(0,i.jsx)(n.p,{children:"The tools can now be added as context to the chat."}),(0,i.jsx)("img",{width:"601",height:"442",alt:"vs-code-mcp-tools",src:"https://github.com/user-attachments/assets/06c39248-aedd-4f53-9560-6dfbae1efaf8"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": When adding to the Cline extension, set ",(0,i.jsx)(n.code,{children:"--transport sse"})," when starting the server."]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);