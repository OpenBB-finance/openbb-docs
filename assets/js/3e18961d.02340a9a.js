"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[73370],{22676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"platform/getting_started/quickstart-workspace","title":"Quickstart - Workspace Custom Backend","description":"Get started using the OpenBB Platform as a custom Workspace backend.","source":"@site/content/platform/getting_started/quickstart-workspace.mdx","sourceDirName":"platform/getting_started","slug":"/platform/getting_started/quickstart-workspace","permalink":"/platform/getting_started/quickstart-workspace","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/platform/getting_started/quickstart-workspace.mdx","tags":[],"version":"current","lastUpdatedBy":"Andrew","lastUpdatedAt":1747487561000,"sidebarPosition":1,"frontMatter":{"title":"Quickstart - Workspace Custom Backend","sidebar_position":1,"description":"Get started using the OpenBB Platform as a custom Workspace backend.","keywords":["OpenBB Platform","investment research infrastructure","data connectors","financial reports","OpenBB team","quickstart","getting started","Workspace","custom backend","backend","FastAPI"]},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart","permalink":"/platform/getting_started/quickstart-python"},"next":{"title":"Finding Ticker Symbols","permalink":"/platform/getting_started/find_symbols"}}');var r=t(74848),s=t(28453),o=t(39068);const i={title:"Quickstart - Workspace Custom Backend",sidebar_position:1,description:"Get started using the OpenBB Platform as a custom Workspace backend.",keywords:["OpenBB Platform","investment research infrastructure","data connectors","financial reports","OpenBB team","quickstart","getting started","Workspace","custom backend","backend","FastAPI"]},c=void 0,l={},d=[{value:"Launch Platform App",id:"launch-platform-app",level:2},{value:"Launch Custom Platform App",id:"launch-custom-platform-app",level:2},{value:"Launch Any FastAPI App",id:"launch-any-fastapi-app",level:2},{value:"Parameters With Dropdown",id:"parameters-with-dropdown",level:3},{value:"Table Widget",id:"table-widget",level:3},{value:"Annotated Functions",id:"annotated-functions",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.A,{title:"Quickstart - Workspace Custom Backend | OpenBB Platform Docs"}),"\n",(0,r.jsxs)(n.p,{children:["The OpenBB Platform can be used as a ",(0,r.jsx)(n.a,{href:"/workspace/custom-backend",children:"Workspace custom backend"}),", both as a fully-loaded data source, or as the bare shell and launcher of a FastAPI application."]}),"\n",(0,r.jsx)(n.p,{children:"The sections below will outline a few scenarios."}),"\n",(0,r.jsx)(n.h2,{id:"launch-platform-app",children:"Launch Platform App"}),"\n",(0,r.jsx)(n.p,{children:"To include all installed OpenBB extensions as widgets in the custom backend connector:"}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["Open a terminal, activate the environment where ",(0,r.jsx)(n.code,{children:"openbb"})," was installed, then enter:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"openbb-api\n"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Next, open your browswer and login to ",(0,r.jsx)(n.a,{href:"https://pro.openbb.co",children:"pro.openbb.co"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'From the sidebar, click "Data Connectors".'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Then, click the "Add Data" button.'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://github.com/user-attachments/assets/770e6d6c-6cd7-4073-a874-af0850f404cc",alt:"Add Data"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter a name for the connection, and use the server address displayed in the console."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Then, click the "Test" button.'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:'If a connection error displays after pressing the "Test" button, your browser might be blocking access because of "mixed content". Browsers such as Safari, and Brave, do not permit HTTP connections.'}),(0,r.jsx)(n.p,{children:"Try using Chrome, specifically, or start the server over HTTPS."}),(0,r.jsxs)(n.p,{children:["See the page ",(0,r.jsx)(n.a,{href:"/workspace/custom-backend/faqs",children:"here"})," for the steps to do it."]})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Finally, click the "Add" button.'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All data endpoints are now configured to use and are available to the Search."}),"\n",(0,r.jsx)(n.h2,{id:"launch-custom-platform-app",children:"Launch Custom Platform App"}),"\n",(0,r.jsx)(n.p,{children:"Let's say, you want to create a custom backend that presents data differently, and you don't want any of the built-in widgets to populate. You want complete control over the generated view."}),"\n",(0,r.jsxs)(n.p,{children:["In this scenario, use the ",(0,r.jsx)(n.code,{children:"--exclude"})," argument to ignore the entire ",(0,r.jsx)(n.code,{children:"/api/*"})," path."]}),"\n",(0,r.jsxs)(n.p,{children:["Widgets will now only populate from endpoints added to the imported ",(0,r.jsx)(n.code,{children:"app"})," instance."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from openbb_platform_api.main import app\n\nfrom openbb import obb\n\n\n@app.get("/company_description")\nasync def company_description(symbol: str = "AAPL") -> str:\n    """Reference data for the given company using yFinance."""\n    response = obb.equity.profile(symbol, provider="yfinance")\n\n    description = response.results[0].long_description\n\n    md = f"""\n\n# **{response.results[0].name}**\n## **{response.results[0].sector}**\n### **{response.results[0].industry_category}**\n\n<details>\n<summary mdxType="summary">Company Description</summary>\n{description}\n</details>\n\n{response.results[0].company_url}\n"""\n    return md\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Launch the backend by including the path to the Python file as the ",(0,r.jsx)(n.code,{children:"--app"})," argument."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"openbb-api --app /Users/path/to/some/folder/some_file.py --exclude '\"/api/v1/*\"' --reload\n"})}),"\n",(0,r.jsx)("img",{width:"514",alt:"Screenshot 2025-02-06 at 1 40 43\u202fPM",src:"https://github.com/user-attachments/assets/150b214e-468e-45bf-b28e-6fb1e1a7a5c2"}),"\n",(0,r.jsx)(n.h2,{id:"launch-any-fastapi-app",children:"Launch Any FastAPI App"}),"\n",(0,r.jsx)(n.p,{children:"For this, the only requirements are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python version between 3.9 and 3.12, inclusively."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openbb-platform-api"})," package, installable from PyPI."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Add the path to the Python file with the FastAPI instance to launch."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"openbb-api --app /Users/path/to/some/folder/some_file.py\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsx)(n.p,{children:'At this time, only "GET" methods are supported by custom backends.'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get("/hello")\nasync def hello() -> str:\n    """Widget Description Generated By Docstring"""\n    return "Hello, from OpenBB!"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Function arguments will populate as widget parameters."}),"\n",(0,r.jsx)(n.h3,{id:"parameters-with-dropdown",children:"Parameters With Dropdown"}),"\n",(0,r.jsx)(n.p,{children:"Literal types of function parameters will automatically be recognized as choices in a dropdown menu."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Literal, Optional\n\napp = FastAPI()\n\n@app.get("/hello")\nasync def hello(param1: Optional[str] = None, param2: Literal["Choice 1", "Choice 2"] = None, param3: bool = False) -> str:\n    """Widget Description Generated By Docstring"""\n    if not param1 and not param2 and not param3:\n        return "Enter a parameter or make a choice!"\n    if param3:\n        return f"Param3 enabled!"\n    if param2:\n        return f"You selected: {param2}"\n    if param1:\n        return f"You entered: {param1}"\n\n    return "Nothing to return!"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"table-widget",children:"Table Widget"}),"\n",(0,r.jsx)(n.p,{children:"Create a table widget by returning data shaped as a list of dictionaries (records)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get("/hello")\nasync def hello() -> list:\n    """Widget Description Generated By Docstring"""\n    return [{"Column 1": "Hello", "Column 2": "from OpenBB!"}]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"annotated-functions",children:"Annotated Functions"}),"\n",(0,r.jsx)(n.p,{children:"Annotated parameters and responses will create column definitions and hover descriptions."}),"\n",(0,r.jsx)(n.p,{children:"For data responses, return a list of Pydantic models to get the most bang-for-the-buck."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Annotated\nfrom fastapi import FastAPI, Query\nfrom openbb_core.provider.abstract.data import Data  # Inherit this instead of pydantic.BaseModel to represent 1 row of data.\nfrom pydantic import Field\n\napp = FastAPI()\n\nclass MyData(Data):\n    """MyData Response Model."""\n    column_1: str = Field(title="Some Text", description="Hover text for Column 1")\n    column_2: int = Field(title="Some Number", description="Hover text for Column 2")\n    column_3: float = Field(\n        title="Some Percent",\n        description="Hover text for Column 3",\n        json_schema_extra={"x-unit_measurement": "percent"},\n    )\n    column_4: float = Field(\n        title="Some Normalized Percent",\n        description="Hover text for Column 4",\n        json_schema_extra={"x-unit_measurement": "percent", "x-frontend_multiply": 100},\n    )\n\n\n@app.get("/table")\nasync def table(\n    param1: Annotated[str, Query(description="Hover text for param1")] = None,\n    param2: Annotated[int, Query(description="Some Number")] = None,\n    date: Annotated[str, Query(description="Date selector")] = None,\n) -> list[MyData]:\n    """Widget Description Generated By Docstring"""\n    return [\n        MyData.model_validate(\n            {\n                "column_1": "Hello",\n                "column_2": 10,\n                "column_3": 33.345,\n                "column_4": -0.33345,\n            }\n        ),\n    ]\n'})}),"\n",(0,r.jsx)("img",{width:"836",alt:"Screenshot 2025-02-06 at 8 00 30\u202fPM",src:"https://github.com/user-attachments/assets/78ab6191-50c6-4b76-a6ca-ea23575c6619"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}},39068:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var a=t(27143),r=t(74848);function s(e){let{title:n}=e;return(0,r.jsx)(a.A,{children:(0,r.jsx)("title",{children:n})})}}}]);