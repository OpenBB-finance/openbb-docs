"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[37387],{22520:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"workspace/analysts/ai-features/generative-ui","title":"Generative UI (Beta)","description":"Understanding the Generative UI capabilities in OpenBB Copilot","source":"@site/content/workspace/analysts/ai-features/generative-ui.md","sourceDirName":"workspace/analysts/ai-features","slug":"/workspace/analysts/ai-features/generative-ui","permalink":"/workspace/analysts/ai-features/generative-ui","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/analysts/ai-features/generative-ui.md","tags":[],"version":"current","lastUpdatedBy":"DidierRLopes","lastUpdatedAt":1758203068000,"sidebarPosition":10,"frontMatter":{"title":"Generative UI (Beta)","sidebar_position":10,"description":"Understanding the Generative UI capabilities in OpenBB Copilot","keywords":["generative ui","widgets","dynamic creation","widget parameters","beta features"]},"sidebar":"tutorialSidebar","previous":{"title":"Data Handling","permalink":"/workspace/analysts/ai-features/copilot-data-handling"},"next":{"title":"Step-by-Step Reasoning","permalink":"/workspace/analysts/ai-features/copilot-reasoning"}}');var i=a(74848),s=a(28453),r=a(39068);const d={title:"Generative UI (Beta)",sidebar_position:10,description:"Understanding the Generative UI capabilities in OpenBB Copilot",keywords:["generative ui","widgets","dynamic creation","widget parameters","beta features"]},o=void 0,l={},c=[{value:"Update widget parameters",id:"update-widget-parameters",level:2},{value:"Add widgets from Global Data",id:"add-widgets-from-global-data",level:2},{value:"Add markdown note widget",id:"add-markdown-note-widget",level:2}];function p(e){const t={h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{title:"Generative UI (Beta) | OpenBB Workspace Docs"}),"\n",(0,i.jsx)(t.p,{children:"When this feature is turned ON, copilot can manipulate widgets on the dashboard."}),"\n",(0,i.jsx)(t.h2,{id:"update-widget-parameters",children:"Update widget parameters"}),"\n",(0,i.jsx)(t.p,{children:"The system understands the parameter schemas of each widget and based on a user prompt it can automatically update the parameters used in widgets on the dashboard."}),"\n",(0,i.jsx)(t.h2,{id:"add-widgets-from-global-data",children:"Add widgets from Global Data"}),"\n",(0,i.jsx)(t.p,{children:"If global data is turned on, and the user asks information that the copilot believes exists in one of the widgets in the widget library - then that widget gets automatically added to the dashboard."}),"\n",(0,i.jsx)(t.h2,{id:"add-markdown-note-widget",children:"Add markdown note widget"}),"\n",(0,i.jsx)(t.p,{children:"The copilot can also add any type of text into a markdown widget automatically."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>d});var n=a(96540);const i={},s=n.createContext(i);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:t},e.children)}},39068:(e,t,a)=>{a.d(t,{A:()=>s});a(96540);var n=a(27143),i=a(74848);function s(e){let{title:t}=e;return(0,i.jsx)(n.A,{children:(0,i.jsx)("title",{children:t})})}}}]);