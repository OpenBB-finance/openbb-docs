"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[18251],{20002:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"workspace/custom-backend/Widgets/chart/chart","title":"Chart","description":"Learn how to integrate your own backend with OpenBB Workspace using the cookie-cutter or language-agnostic API approaches, with illustrative guides and principles for handling widget.json files, APIs, interfaces, Python, FastAPI, and more.","source":"@site/content/workspace/custom-backend/Widgets/chart/chart.md","sourceDirName":"workspace/custom-backend/Widgets/chart","slug":"/workspace/custom-backend/Widgets/chart/","permalink":"/workspace/custom-backend/Widgets/chart/","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/custom-backend/Widgets/chart/chart.md","tags":[],"version":"current","lastUpdatedBy":"Theodore Aptekarev","lastUpdatedAt":1745833196000,"sidebarPosition":2,"frontMatter":{"title":"Chart","sidebar_position":2,"description":"Learn how to integrate your own backend with OpenBB Workspace using the cookie-cutter or language-agnostic API approaches, with illustrative guides and principles for handling widget.json files, APIs, interfaces, Python, FastAPI, and more.","keywords":["widgets.json","OpenBB API","Endpoint integration","widget configuration","Language-Agnostic API","API implementation","Python","FastAPI","Workspace widgets","Widget definitions"]},"sidebar":"tutorialSidebar","previous":{"title":"Column and Cell Rendering","permalink":"/workspace/custom-backend/Widgets/table/Column and Cell Rendering"},"next":{"title":"Native Chart","permalink":"/workspace/custom-backend/Widgets/chart/native"}}');var s=n(74848),o=n(28453);const r={title:"Chart",sidebar_position:2,description:"Learn how to integrate your own backend with OpenBB Workspace using the cookie-cutter or language-agnostic API approaches, with illustrative guides and principles for handling widget.json files, APIs, interfaces, Python, FastAPI, and more.",keywords:["widgets.json","OpenBB API","Endpoint integration","widget configuration","Language-Agnostic API","API implementation","Python","FastAPI","Workspace widgets","Widget definitions"]},i="Chart Widget",c={},d=[];function h(e){const t={a:"a",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"chart-widget",children:"Chart Widget"})}),"\n",(0,s.jsx)(t.p,{children:"Currently, OpenBB Workspace supports two types of charts for the custom backends. Check out the examples below to see how to create them."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/workspace/custom-backend/Widgets/chart/native",children:"Native charts"})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The simplest way to create a chart widget is by using the native charting. This allows you to create a chart widget with ease from any table widget with minimal effort."}),"\n",(0,s.jsx)("img",{className:"pro-border-gradient",width:"600",alt:"chart",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/native+chart.png"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/workspace/custom-backend/Widgets/chart/plotly",children:"Plotly charts"})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Plotly charts are more customizable and allow you to create more advanced charts."}),"\n",(0,s.jsx)("img",{className:"pro-border-gradient",width:"600",alt:"chart",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/plotly-chart.png"}),"\n",(0,s.jsx)(t.p,{children:"We will be adding support for more chart types in the future."})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var a=n(96540);const s={},o=a.createContext(s);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);