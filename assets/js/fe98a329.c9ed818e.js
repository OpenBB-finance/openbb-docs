"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[75164],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(96540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},39068:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var a=t(27143),r=t(74848);function s(e){let{title:n}=e;return(0,r.jsx)(a.A,{children:(0,r.jsx)("title",{children:n})})}},81772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"python/extensions/infrastructure/openbb-charting/index","title":"openbb-charting","description":"Learn about the openbb-charting extension and adding Plotly charts to the response object.","source":"@site/content/python/extensions/infrastructure/openbb-charting/index.md","sourceDirName":"python/extensions/infrastructure/openbb-charting","slug":"/python/extensions/infrastructure/openbb-charting/","permalink":"/python/extensions/infrastructure/openbb-charting/","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/python/extensions/infrastructure/openbb-charting/index.md","tags":[],"version":"current","lastUpdatedBy":"Danglewood","lastUpdatedAt":1761197956000,"sidebarPosition":2,"frontMatter":{"title":"openbb-charting","sidebar_position":2,"description":"Learn about the openbb-charting extension and adding Plotly charts to the response object.","keywords":["charts","charting","Plotly","GraphObject","Figure","PyWry","OBBject","Indicators"]},"sidebar":"tutorialSidebar","previous":{"title":"openbb-core","permalink":"/python/extensions/openbb-core"},"next":{"title":"Technical Indicators","permalink":"/python/extensions/infrastructure/openbb-charting/indicators"}}');var r=t(74848),s=t(28453),i=t(39068);t(89781);const c={title:"openbb-charting",sidebar_position:2,description:"Learn about the openbb-charting extension and adding Plotly charts to the response object.",keywords:["charts","charting","Plotly","GraphObject","Figure","PyWry","OBBject","Indicators"]},o=void 0,l={},d=[{value:"Installation",id:"installation",level:2},{value:"Extras",id:"extras",level:3},{value:"PyWry on Linux",id:"pywry-on-linux",level:3},{value:"Set Theme",id:"set-theme",level:2},{value:"Available Charts",id:"available-charts",level:2},{value:"Usage",id:"usage",level:2},{value:"Chart Params",id:"chart-params",level:3},{value:"Endpoints Without Charts",id:"endpoints-without-charts",level:3},{value:"Tables",id:"tables",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.A,{title:"OpenBB Charting | OpenBB Docs"}),"\n",(0,r.jsx)(n.p,{children:"This extension provides a charting library for Open Data Platform by OpenBB."}),"\n",(0,r.jsx)(n.p,{children:"The library includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"API charting infrastructure"}),"\n",(0,r.jsxs)(n.li,{children:["Mutable ",(0,r.jsx)(n.code,{children:"chart"})," attribute in every response object"]}),"\n",(0,r.jsx)(n.li,{children:"Plotly charting components"}),"\n",(0,r.jsx)(n.li,{children:"Pre-built charts for a set of endpoints"}),"\n",(0,r.jsxs)(n.li,{children:["Optional extra for dedicated window creation","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Includes an interactive ",(0,r.jsx)(n.code,{children:"table()"})," method in the Python Interface"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["The charting library is an ",(0,r.jsx)(n.code,{children:"OBBject"})," extension, which means you'll have the functionality it exposes on every command result."]})})}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"To install the extension, run the following command in this folder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install openbb-charting\n"})}),"\n",(0,r.jsx)(n.h3,{id:"extras",children:"Extras"}),"\n",(0,r.jsx)(n.p,{children:"The PyWry dependency handles the display of interactive charts and tables in a separate window."}),"\n",(0,r.jsx)(n.p,{children:"Add the PyWry extra for standalone window creation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'pip install "openbb-charting[pywry]"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pywry-on-linux",children:"PyWry on Linux"}),"\n",(0,r.jsx)(n.p,{children:"For Linux systems, the PyWry dependency requires certain dependencies to be installed first."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Debian-based / Ubuntu / Mint:\n",(0,r.jsx)(n.code,{children:"sudo apt install libwebkit2gtk-4.0-dev"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Arch Linux / Manjaro:\n",(0,r.jsx)(n.code,{children:"sudo pacman -S webkit2gtk"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Fedora:\n",(0,r.jsx)(n.code,{children:"sudo dnf install gtk3-devel webkit2gtk3-devel"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"set-theme",children:"Set Theme"}),"\n",(0,r.jsxs)(n.p,{children:["The default theme setting is ",(0,r.jsx)(n.code,{children:"dark"}),', and this can be changed to "light" in the ',(0,r.jsx)(n.a,{href:"/python/settings/user_settings/preferences",children:"user preference"}),"\nfor both, ",(0,r.jsx)(n.code,{children:"chart_style"})," and ",(0,r.jsx)(n.code,{children:"table_style"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"For the current Python session, set them with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from openbb import obb\n\nobb.user.prefernces.chart_style="dark"\nobb.user.prefernces.table_style="light"\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"available-charts",children:"Available Charts"}),"\n",(0,r.jsx)(n.p,{children:"Not all the endpoints are supported by the charting extension. To discover which endpoints are supported, you can run the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from openbb_charting import Charting\nCharting.functions()\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This produces the same result as using the class method from the ",(0,r.jsx)(n.code,{children:"OBBject.charting"})," function response."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"Methods\n-------\nshow\n    Display chart and save it to the OBBject.\nto_chart\n    Redraw the chart and save it to the OBBject, with an optional entry point for Data.\nfunctions\n    Return a list of Platform commands with charting functions.\nget_params\n    Return the charting parameters for the function the OBBject was created from.\nindicators\n    Return the list of the available technical indicators to use with the `to_chart` method and OHLC+V data.\ntable\n    Display an interactive table.\ncreate_line_chart\n    Create a line chart from external data.\ncreate_bar_chart\n    Create a bar chart, on a single x-axis with one or more values for the y-axis, from external data.\ncreate_correlation_matrix\n    Create a correlation matrix from external data.\ntoggle_chart_style\n    Toggle the chart style, of an existing chart, between light and dark mode.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.admonition,{title:"user_settings.json",type:"important",children:(0,r.jsxs)(n.p,{children:["This extension requires that the ",(0,r.jsx)(n.a,{href:"/python/settings/user_settings/preferences",children:"user preference"})," for ",(0,r.jsx)(n.code,{children:"output_type"}),' is set to, "OBBject", the default state.']})}),"\n",(0,r.jsxs)(n.p,{children:["To use, run any of the ODP Python Package endpoints with the ",(0,r.jsx)(n.code,{children:"chart"})," argument set to ",(0,r.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>> from openbb import obb\n>>> equity_data = obb.equity.price.historical(symbol=\"TSLA\", chart=True)\n>>> equity_data\n\nOBBject[T]\n\nid: 068ec8c8-9ea2-78dc-8000-97703428789b\nresults: [{'date': datetime.date(2024, 10, 14), 'open': 220.1300048828125, 'high': ...\nprovider: yfinance\nwarnings: None\nchart: {'content': {'data': [{'close': {'dtype': 'f8', 'bdata': 'AAAAwB5la0AAAACAPX...\nextra: {'metadata': {'arguments': {'provider_choices': {'provider': 'yfinance'}, 's...\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The chart will be returned in the response object under the ",(0,r.jsx)(n.code,{children:"chart"})," attribute."]}),"\n",(0,r.jsx)(n.p,{children:"Display the current figure by calling:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"equity_data.show()\n"})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{mdxType:"summary",children:"Sample Chart"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"candles",src:t(94697).A+"",width:"1906",height:"979"})})]}),"\n",(0,r.jsx)(n.h3,{id:"chart-params",children:"Chart Params"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["When a supported endpoint is called with ",(0,r.jsx)(n.code,{children:"chart=True"}),", chart parameters can be passed as a nested dictionary under the name, ",(0,r.jsx)(n.code,{children:"chart_params"}),"."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'chart_params = dict(\n    title="AAPL 50/200 Day EMA",\n    indicators=dict(\n        ema=dict(length=[50,200]),\n    ),\n)\nparams = dict(\n    symbol="AAPL",\n    start_date="2022-01-01",\n    provider="yfinance",\n    chart=True,\n    chart_params=chart_params,\n)\ndata = obb.equity.price.historical(**params)\n'})}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"chart_params"})," are sent in the body of the request when using the API."]})]}),"\n",(0,r.jsxs)(n.p,{children:["Passing only ",(0,r.jsx)(n.code,{children:"chart=True"})," will return a default view which can be modified and drawn again post-request, via the ",(0,r.jsx)(n.code,{children:"OBBject"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"OBBject\n\nid: 06614d74-7443-7201-8000-a65f358136a3\nresults: [{'date': datetime.date(2022, 1, 3), 'open': 177.8300018310547, 'high': 18...\nprovider: yfinance\nwarnings: None\nchart: {'content': {'data': [{'close': [182.00999450683594, 179.6999969482422, 174....\nextra: {'metadata': {'arguments': {'provider_choices': {'provider': 'yfinance'}, 's...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data.show()\n"})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{mdxType:"summary",children:"Sample Chart With EMA"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://github.com/OpenBB-finance/OpenBB/assets/85772166/b427d68b-777e-4230-852a-df749c5dbc46",alt:"candles with ema"})})]}),"\n",(0,r.jsx)(n.h3,{id:"endpoints-without-charts",children:"Endpoints Without Charts"}),"\n",(0,r.jsx)(n.p,{children:"Most functions do not have dedicated charts. However, it's still possible to generate one automatically. Try passing it through a quantitative analysis command."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'data = obb.equity.price.historical(\n    symbol="XLK",\n    start_date="2023-01-01",\n    provider="yfinance",\n)\nqa = obb.quantitative.rolling.stdev(data.results, target="close")\n\nqa.charting.show(title="XLK Rolling 21 Day Standard Deviation")\n'})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{mdxType:"summary",children:"Sample Generic Line Chart"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://github.com/OpenBB-finance/OpenBB/assets/85772166/f87a6648-7365-4529-a254-35897af448ca",alt:"auto chart"})})]}),"\n",(0,r.jsx)(n.h3,{id:"tables",children:"Tables"}),"\n",(0,r.jsxs)(n.p,{children:["Interactive tables are displayed by the ",(0,r.jsx)(n.code,{children:"table"})," method."]}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsx)(n.p,{children:"This functionality is intended for response object exploration and is not suitable for production environments."})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'data = obb.equity.price.quote("AAPL,MSFT,GOOGL,META,TSLA,AMZN", provider="yfinance")\ndata.charting.table()\n'})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{mdxType:"summary",children:"Sample Interactive Table"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://github.com/OpenBB-finance/OpenBB/assets/85772166/77f5f812-b933-4ced-929c-c1e39b2a3eed",alt:"Interactive Tables"})})]}),"\n",(0,r.jsx)(n.p,{children:"External data can also be supplied, providing an opportunity to filter or apply Pandas operations before display."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'new_df = df.to_df().T\nnew_df.index.name="metric"\nnew_df.columns = new_df.loc["symbol"]\nnew_df.drop("symbol", inplace=True)\ndata.charting.table(data=new_df)\n'})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{mdxType:"summary",children:"Sample Custom Data Table"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://github.com/OpenBB-finance/OpenBB/assets/85772166/d02f8c34-e1d1-4001-a73e-d3b948a4c5c1",alt:"Tables From External Data"})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},89781:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(56289),r=t(34164),s=t(56347),i=t(41121),c=t(74848);function o(e){let{title:n,url:t,description:o,command:l}=e;const{pathname:d}=(0,s.zy)(),h=d.replace(/\/v\d+/,""),p=!h.includes("/reference")&&!h.includes("/widgets-library/")&&!h.includes("/data_models");return(0,c.jsx)(a.A,{className:(0,r.A)("self-stretch min-h-[90px] h-full p-5 rounded !no-underline cursor-pointer flex-col justify-start items-start gap-4 flex transition-all duration-300 ease-in-out","dark:bg-[#151518] dark:hover:bg-[#212126] dark:!text-white","bg-[#F5F5F6] hover:bg-[#DCDDE0] !text-black"),to:t,children:(0,c.jsxs)("div",{className:"self-stretch flex-col justify-center items-start gap-1.5 flex",children:[(0,c.jsxs)("div",{className:"self-stretch justify-between items-center inline-flex",children:[(0,c.jsx)("div",{className:"!text-red text-sm font-bold font-['Inter'] leading-snug",children:n}),p&&(0,c.jsx)("div",{className:"justify-start items-start gap-2.5 flex",children:(0,c.jsx)(i.A,{className:"w-4 h-4"})})]}),o&&(0,c.jsx)("div",{className:"dark:text-[#ebebed] text-[#2A2A2A] text-sm font-normal font-['Inter'] leading-snug",children:o})]})})}},94697:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/image-537ccebee8b60b31b1a0e5c9f3aac10c.png"}}]);