"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3503],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(96540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},39068:(e,t,i)=>{i.d(t,{A:()=>a});i(96540);var n=i(27143),s=i(74848);function a(e){let{title:t}=e;return(0,s.jsx)(n.A,{children:(0,s.jsx)("title",{children:t})})}},56395:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"workspace/developers/ai-features/highlight-widget-citations","title":"Highlight widget citations","description":"Cite widget data sources in your responses and display them in Workspace","source":"@site/content/workspace/developers/ai-features/highlight-widget-citations.md","sourceDirName":"workspace/developers/ai-features","slug":"/workspace/developers/ai-features/highlight-widget-citations","permalink":"/workspace/developers/ai-features/highlight-widget-citations","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/developers/ai-features/highlight-widget-citations.md","tags":[],"version":"current","lastUpdatedBy":"DidierRLopes","lastUpdatedAt":1761133924000,"sidebarPosition":4,"frontMatter":{"title":"Highlight widget citations","sidebar_position":4,"description":"Cite widget data sources in your responses and display them in Workspace","keywords":["citations","cite","widgets","provenance"]},"sidebar":"tutorialSidebar","previous":{"title":"Parse PDF context","permalink":"/workspace/developers/ai-features/parse-pdf-context"},"next":{"title":"Citations for documents","permalink":"/workspace/developers/ai-features/citations-for-documents"}}');var s=i(74848),a=i(28453),r=i(39068);const o={title:"Highlight widget citations",sidebar_position:4,description:"Cite widget data sources in your responses and display them in Workspace",keywords:["citations","cite","widgets","provenance"]},d=void 0,c={},l=[{value:"Architecture",id:"architecture",level:2},{value:"Query flow",id:"query-flow",level:3},{value:"OpenBB AI SDK",id:"openbb-ai-sdk",level:3},{value:"Core logic",id:"core-logic",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.A,{title:"AI Features \u2014 Highlight widget citations | OpenBB Workspace Docs"}),"\n",(0,s.jsxs)(t.p,{children:["After retrieving widget data, attribute outputs to their sources. Build ",(0,s.jsx)(t.code,{children:"cite(...)"})," entries and stream them with ",(0,s.jsx)(t.code,{children:"citations(...)"})," so Workspace shows a citations panel next to the answer."]}),"\n",(0,s.jsxs)(t.p,{children:["Reference implementation in ",(0,s.jsx)(t.a,{href:"https://github.com/OpenBB-finance/agents-for-openbb/tree/main/32-vanilla-agent-raw-widget-data-citations/vanilla_agent_raw_context_citations/main.py",children:"this GitHub repository"}),"."]}),"\n",(0,s.jsx)("img",{className:"pro-border-gradient",width:"800",alt:"Citations",src:"https://openbb-cms.directus.app/assets/0af85f66-b91f-476d-a231-973442a29957.png"}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:'This pattern extends "Parse widget data" by adding attribution. After data retrieval, emit citations to show provenance in Workspace.'}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"agents.json"})," configuration with ",(0,s.jsx)(t.code,{children:"widget-dashboard-select"})," feature enabled:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'return JSONResponse(content={\n  "vanilla_agent_raw_widget_data_citations": {\n    "endpoints": {"query": "http://localhost:7777/v1/query"},\n    "features": {\n      "streaming": True,\n      "widget-dashboard-select": True,\n      "widget-dashboard-search": False,\n    },\n  }\n})\n'})}),"\n",(0,s.jsx)(t.h3,{id:"query-flow",children:"Query flow"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Early exit: fetch widget data when human message contains ",(0,s.jsx)(t.code,{children:"widgets.primary"})]}),"\n",(0,s.jsxs)(t.li,{children:["On subsequent tool message:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Process widget data and include in LLM context"}),"\n",(0,s.jsxs)(t.li,{children:["Match widget UUIDs from tool ",(0,s.jsx)(t.code,{children:"input_arguments"})," to ",(0,s.jsx)(t.code,{children:"request.widgets.primary"})]}),"\n",(0,s.jsxs)(t.li,{children:["Build ",(0,s.jsx)(t.code,{children:"cite()"})," objects for each data source used"]}),"\n",(0,s.jsxs)(t.li,{children:["Stream citations with ",(0,s.jsx)(t.code,{children:"citations()"})," after LLM response"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.li,{children:"Citations appear in Workspace UI panel for source verification"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"openbb-ai-sdk",children:"OpenBB AI SDK"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cite(widget, input_arguments, extra_details)"}),": Creates ",(0,s.jsx)(t.code,{children:"Citation"})," objects"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"citations(citation_list)"}),": Emits ",(0,s.jsx)(t.code,{children:"CitationCollectionSSE"})," events"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Citation"}),": Links outputs to data sources with metadata"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"SourceInfo"}),": Provides detailed source attribution data"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"core-logic",children:"Core logic"}),"\n",(0,s.jsx)(t.p,{children:"Build citations by matching the tool input arguments to widgets in the request:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'from openbb_ai import cite, citations\nfrom openbb_ai.models import Citation, CitationHighlightBoundingBox\n\nasync def execution_loop():\n    # ... stream LLM response ...\n\n    # Build citations after response\n    citations_list = []\n\n    # Process tool message to find data sources\n    for message in request.messages:\n        if message.role == "tool":\n            for widget_data_request in message.input_arguments["data_sources"]:\n                # Match widget by UUID\n                matching_widgets = [\n                    w for w in request.widgets.primary\n                    if str(w.uuid) == widget_data_request["widget_uuid"]\n                ]\n\n                if matching_widgets:\n                    widget = matching_widgets[0]\n                    citation = cite(\n                        widget=widget,\n                        input_arguments=widget_data_request["input_args"],\n                        extra_details={\n                            "Widget Name": widget.name,\n                            "Data Source": widget.type,\n                            "Parameters Used": widget_data_request["input_args"]\n                        }\n                    )\n\n                    citations_list.append(citation)\n\n    # Emit citations for UI display\n    if citations_list:\n        yield citations(citations_list).model_dump()\n'})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);