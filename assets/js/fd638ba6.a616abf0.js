"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[77427],{13769:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"workspace/data-widgets/metric","title":"Metric","description":"Learn how to integrate your own backend with OpenBB Workspace using the cookie-cutter or language-agnostic API approaches, with illustrative guides and principles for handling widget.json files, APIs, interfaces, Python, FastAPI, and more.","source":"@site/content/workspace/data-widgets/metric.md","sourceDirName":"workspace/data-widgets","slug":"/workspace/data-widgets/metric","permalink":"/workspace/data-widgets/metric","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/data-widgets/metric.md","tags":[],"version":"current","lastUpdatedBy":"DidierRLopes","lastUpdatedAt":1747929300000,"sidebarPosition":5,"frontMatter":{"title":"Metric","sidebar_position":5,"description":"Learn how to integrate your own backend with OpenBB Workspace using the cookie-cutter or language-agnostic API approaches, with illustrative guides and principles for handling widget.json files, APIs, interfaces, Python, FastAPI, and more.","keywords":["widgets.json","OpenBB API","Endpoint integration","widget configuration","Language-Agnostic API","API implementation","Python","FastAPI","Workspace widgets","Widget definitions"]},"sidebar":"tutorialSidebar","previous":{"title":"Markdown","permalink":"/workspace/data-widgets/markdown"},"next":{"title":"File Viewer","permalink":"/workspace/data-widgets/file-viewer"}}');var a=n(74848),s=n(28453),r=n(39068);const o={title:"Metric",sidebar_position:5,description:"Learn how to integrate your own backend with OpenBB Workspace using the cookie-cutter or language-agnostic API approaches, with illustrative guides and principles for handling widget.json files, APIs, interfaces, Python, FastAPI, and more.",keywords:["widgets.json","OpenBB API","Endpoint integration","widget configuration","Language-Agnostic API","API implementation","Python","FastAPI","Workspace widgets","Widget definitions"]},c=void 0,d={},l=[{value:"Multiple metrics",id:"multiple-metrics",level:2}];function p(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.A,{title:"Metric | OpenBB Workspace Docs"}),"\n",(0,a.jsx)(t.p,{children:"A widget that displays key metrics with labels, values, and delta changes. Useful for showing important statistics and their trends."}),"\n",(0,a.jsx)("img",{className:"pro-border-gradient",width:"600",alt:"metric",src:"https://openbb-assets.s3.us-east-1.amazonaws.com/docs/pro/metric-widget.png"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'@register_widget({\n  "name": "Metric Widget",\n  "description": "A metric widget example",\n  "category": "Test",\n  "endpoint": "test_metric",\n  "type": "metric"\n})\n@app.get("/test_metric")\ndef test_metric():\n    """Example endpoint to provide metric data."""\n    # Example data structure\n    data = {\n        "label": "Example Label",\n        "value": "12345",\n        "delta": "5.67"\n    }\n\n    return JSONResponse(content=data)\n'})}),"\n",(0,a.jsx)(t.p,{children:"As you can see in the example the data structure is as follows:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"label"}),": The label of the metric."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"value"}),": The value of the metric."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"delta"}),": The delta of the metric."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"multiple-metrics",children:"Multiple metrics"}),"\n",(0,a.jsx)("img",{className:"pro-border-gradient",width:"800",alt:"Metric Widget Example",src:"https://openbb-cms.directus.app/assets/ba37bbbb-371a-40e8-a7e1-e48edcc6c0c8.png"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'@register_widget({\n    "name": "Metric Widget",\n    "description": "A metric widget",\n    "endpoint": "metric_widget",\n    "gridData": {\n      "w": 5,\n      "h": 5\n    },\n    "type": "metric"\n})\n@app.get("/metric_widget")\ndef metric_widget():\n    data = [\n        {\n            "label": "Total Users",\n            "value": "1,234,567",\n            "delta": "12.5"\n        },\n        {\n            "label": "Active Sessions",\n            "value": "45,678",\n            "delta": "-2.3"\n        },\n        {\n            "label": "Revenue (USD)",\n            "value": "$89,432",\n            "delta": "8.9"\n        },\n        {\n            "label": "Conversion Rate",\n            "value": "3.2%",\n            "delta": "0.0"\n        },\n        {\n            "label": "Avg. Session Duration",\n            "value": "4m 32s",\n            "delta": "0.5"\n        }\n    ]\n\n    return JSONResponse(content=data)\n'})})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},39068:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var i=n(27143),a=n(74848);function s(e){let{title:t}=e;return(0,a.jsx)(i.A,{children:(0,a.jsx)("title",{children:t})})}}}]);