"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[77886],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},39068:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var i=t(27143),a=t(74848);function s(e){let{title:n}=e;return(0,a.jsx)(i.A,{children:(0,a.jsx)("title",{children:n})})}},82978:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"workspace/developers/widget-types/html","title":"HTML","description":"Learn how to create and customize HTML widgets in OpenBB Workspace, enabling complete control over visualization and interaction design with custom HTML, CSS, and JavaScript.","source":"@site/content/workspace/developers/widget-types/html.md","sourceDirName":"workspace/developers/widget-types","slug":"/workspace/developers/widget-types/html","permalink":"/workspace/developers/widget-types/html","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/workspace/developers/widget-types/html.md","tags":[],"version":"current","lastUpdatedBy":"minhhoang1023","lastUpdatedAt":1761059224000,"sidebarPosition":5,"frontMatter":{"title":"HTML","sidebar_position":5,"description":"Learn how to create and customize HTML widgets in OpenBB Workspace, enabling complete control over visualization and interaction design with custom HTML, CSS, and JavaScript.","keywords":["html widget","widget configuration","custom visualization","interactive dashboard","widget development","HTML content","CSS styling","JavaScript interactivity","OpenBB Workspace","custom widgets"]},"sidebar":"tutorialSidebar","previous":{"title":"Markdown","permalink":"/workspace/developers/widget-types/markdown"},"next":{"title":"Metric","permalink":"/workspace/developers/widget-types/metric"}}');var a=t(74848),s=t(28453),r=t(39068);const o={title:"HTML",sidebar_position:5,description:"Learn how to create and customize HTML widgets in OpenBB Workspace, enabling complete control over visualization and interaction design with custom HTML, CSS, and JavaScript.",keywords:["html widget","widget configuration","custom visualization","interactive dashboard","widget development","HTML content","CSS styling","JavaScript interactivity","OpenBB Workspace","custom widgets"]},d=void 0,l={},c=[{value:"Key Features",id:"key-features",level:2},{value:"Best Practices",id:"best-practices",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.A,{title:"HTML | OpenBB Workspace Docs"}),"\n",(0,a.jsx)(n.p,{children:"HTML widgets provide control over visualization design through server-rendered HTML, enabling the creation of custom styled dashboards and data displays."}),"\n",(0,a.jsx)(n.admonition,{title:"Security Note",type:"warning",children:(0,a.jsx)(n.p,{children:"HTML widgets render static HTML content only. JavaScript code within the HTML will not be executed for security reasons. All interactivity must be achieved through server-side logic and HTML/CSS features only."})}),"\n",(0,a.jsx)("img",{className:"pro-border-gradient",width:"800",alt:"HTML Widget Example",src:"https://openbb-cms.directus.app/assets/8234f346-6b2e-49b2-b5de-7150c770a756.png"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'@register_widget({\n    "name": "HTML Widget",\n    "description": "A HTML widget with interactive dashboard",\n    "type": "html",\n    "endpoint": "html_widget",\n    "gridData": {"w": 40, "h": 20},\n})\n@app.get("/html_widget", response_class=HTMLResponse)\ndef html_widget():\n    """Returns an HTML widget with mockup data"""\n    return HTMLResponse(content="""\n<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, sans-serif;\n            padding: 20px;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            margin: 0;\n        }\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n        }\n        .header {\n            text-align: center;\n            color: white;\n            margin-bottom: 30px;\n        }\n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        .stat-card {\n            background: white;\n            border-radius: 10px;\n            padding: 20px;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n            transition: transform 0.2s;\n        }\n        .stat-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 12px rgba(0,0,0,0.15);\n        }\n        .stat-value {\n            font-size: 2em;\n            font-weight: bold;\n            color: #333;\n        }\n        .stat-label {\n            color: #666;\n            margin-top: 5px;\n        }\n        .stat-change {\n            display: inline-block;\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 0.85em;\n            margin-top: 10px;\n        }\n        .positive {\n            background: #d4edda;\n            color: #155724;\n        }\n        .negative {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        .chart-container {\n            background: white;\n            border-radius: 10px;\n            padding: 20px;\n            margin-bottom: 20px;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n        }\n        .progress-bar {\n            width: 100%;\n            height: 20px;\n            background: #e0e0e0;\n            border-radius: 10px;\n            overflow: hidden;\n            margin-top: 10px;\n        }\n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\n            transition: width 1s ease;\n            animation: fillAnimation 2s ease-out;\n        }\n        @keyframes fillAnimation {\n            from { width: 0%; }\n        }\n        .button {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 16px;\n            transition: opacity 0.2s;\n        }\n        .button:hover {\n            opacity: 0.9;\n        }\n    </style>\n</head>\n<body>\n    <div class="container">\n        <div class="header">\n            <h1>Portfolio Dashboard</h1>\n            <p>Real-time market overview and analytics</p>\n        </div>\n        \n        <div class="stats-grid">\n            <div class="stat-card">\n                <div class="stat-value">$124,563</div>\n                <div class="stat-label">Total Portfolio Value</div>\n                <span class="stat-change positive">+5.4% today</span>\n            </div>\n            \n            <div class="stat-card">\n                <div class="stat-value">42</div>\n                <div class="stat-label">Active Positions</div>\n                <span class="stat-change positive">+3 this week</span>\n            </div>\n            \n            <div class="stat-card">\n                <div class="stat-value">$8,421</div>\n                <div class="stat-label">Daily P&L</div>\n                <span class="stat-change positive">+12.3%</span>\n            </div>\n            \n            <div class="stat-card">\n                <div class="stat-value">0.87</div>\n                <div class="stat-label">Sharpe Ratio</div>\n                <span class="stat-change negative">-0.05</span>\n            </div>\n        </div>\n        \n        <div class="chart-container">\n            <h3>Performance Overview</h3>\n            <div style="display: flex; justify-content: space-between; margin-top: 20px;">\n                <div style="flex: 1; margin-right: 20px;">\n                    <div>Tech Stocks (68%)</div>\n                    <div class="progress-bar">\n                        <div class="progress-fill" style="width: 68%;"></div>\n                    </div>\n                </div>\n                <div style="flex: 1;">\n                    <div>Fixed Income (32%)</div>\n                    <div class="progress-bar">\n                        <div class="progress-fill" style="width: 32%;"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class="chart-container">\n            <h3>Recent Activity</h3>\n            <ul style="list-style: none; padding: 0;">\n                <li style="padding: 10px 0; border-bottom: 1px solid #eee;">\n                    <strong>AAPL</strong> - Bought 100 shares @ $182.50\n                    <span style="float: right; color: #666;">2 hours ago</span>\n                </li>\n                <li style="padding: 10px 0; border-bottom: 1px solid #eee;">\n                    <strong>GOOGL</strong> - Sold 50 shares @ $141.20\n                    <span style="float: right; color: #666;">5 hours ago</span>\n                </li>\n                <li style="padding: 10px 0;">\n                    <strong>MSFT</strong> - Bought 75 shares @ $378.80\n                    <span style="float: right; color: #666;">Yesterday</span>\n                </li>\n            </ul>\n        </div>\n        \n        <div style="text-align: center; margin-top: 30px;">\n            <button class="button" onclick="alert(\'Refreshing data...\')">Refresh Dashboard</button>\n        </div>\n    </div>\n    \n    \x3c!-- Note: JavaScript will not execute in HTML widgets for security reasons --\x3e\n    \x3c!-- This script tag is included only as an example - it will not run --\x3e\n    <script>\n        // This JavaScript code will NOT execute\n        // HTML widgets only render static HTML and CSS\n        // All dynamic behavior must be implemented server-side\n    <\/script>\n</body>\n</html>\n""")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The gridData parameter specifies the widget's size in the OpenBB Workspace grid system. More on that can be found ",(0,a.jsx)(n.a,{href:"../widget-configuration/grid-size",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Complete Design Control"}),": HTML widgets allow extensive customization through HTML markup and inline CSS styling, enabling the creation of professional-grade interfaces that match your organization's branding and design requirements."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Server-Side Rendering"}),": All content is generated server-side, ensuring security while allowing dynamic HTML generation based on real-time data, calculations, and API responses from your backend."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Rich Styling Options"}),": Leverage the full power of inline CSS for advanced styling including animations, gradients, responsive layouts, and professional visual design that creates engaging dashboard experiences."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Data Integration"}),": Generate HTML content dynamically on the server based on live data sources, enabling real-time portfolio monitoring, market data display, and dynamic performance tracking through server-side updates."]}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Use semantic HTML structure for accessibility and maintainability"}),"\n",(0,a.jsx)(n.li,{children:"Implement responsive design patterns using CSS flexbox and grid layouts"}),"\n",(0,a.jsx)(n.li,{children:"Generate all dynamic content server-side before returning the HTML response"}),"\n",(0,a.jsx)(n.li,{children:"Use CSS animations and transitions for visual effects instead of JavaScript"}),"\n",(0,a.jsx)(n.li,{children:"Handle all data fetching and processing in the Python backend before rendering"}),"\n",(0,a.jsx)(n.li,{children:"Consider using HTML forms with server endpoints for user interactions"}),"\n",(0,a.jsx)(n.li,{children:"Refresh widgets periodically to update data rather than relying on client-side updates"}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);