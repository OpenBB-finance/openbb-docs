---
title: Data connectors
sidebar_position: 3
description: Access your data connectors from OpenBB Workspace inside OpenBB Add-in for Excel.
keywords:
  - Microsoft Excel
  - Add-in
  - Advanced
  - Data connectors
  - BYOD
  - Bring your own data
---

<!-- markdownlint-disable MD033 -->

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Data connectors | OpenBB Add-in for Excel Docs" />

OpenBB Add-In for Excel allows you to access your [data connectors](https://docs.openbb.co/pro/data-connectors) from OpenBB Workspace inside Microsoft Excel. This can be done using the [OBB.BYOD](https://docs.openbb.co/excel/reference/byod) function.

## [Single widget](https://docs.openbb.co/pro/data-connectors/single-widget)

```excel
=OBB.BYOD("widget_name")
```

:::info

- Make sure your widget is setup in the OpenBB Workspace.

:::

## [Own backend](https://docs.openbb.co/pro/data-connectors/integrate-your-own-backend)

```excel
=OBB.BYOD("widget_name","backend_name")
```

If your backend supports it is possible to pass a symbol, a date or other optional parameters:

```excel
=OBB.BYOD("widget_name","backend_name","my_symbol","YYYY-MM-DD",{"param1":"value1","param2":"value2", ...})
```

:::tip
The easiest way to pass optional parameters is to write them into cells and reference them in the function. For example, `=OBB.BYOD(...,A1:B2)` where A1 contains "param1", B1 "value1", A2 "param2", B2 "value2" and so on.
:::

:::info

- Make sure your backend's CORS settings allow requests coming from [https://excel.openbb.co](https://excel.openbb.co).
- Requests via HTTP will be blocked by Excel. So if you are using the Add-in for Excel on Mac or Office on the web with Safari browser you need to run your backend via HTTPS.

:::

## [Native integrations](https://docs.openbb.co/pro/data-connectors#native-integrations)

Supported native integrations:

- database
- snowflake

```excel
=OBB.BYOD("widget_name","native_integration")
```

:::info

- Make sure your OpenBB Data Connector is properly configured and the widget is setup in the OpenBB Workspace.
- Native integrations are available only for Excel on the web or Windows.

:::


---

---
title: Data slicer
sidebar_position: 2
description: Slice Excel ranges by label or index
keywords:
- Microsoft Excel
- Add-in
- Advanced
- Slice data
- Data slicer
- Get specific fields
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Data slicer | OpenBB Add-in for Excel Docs" />

To help you slice parts of data, we provide the [OBB.GET](https://docs.openbb.co/excel/reference/get) function. This function allows to slice rows, columns or range subsets. It is useful to extract specific fields from the `OBB.` custom functions. Data can be sliced by label or index.

### Example

- Suppose you called an `OBB.` function and it returned the following data at cells A1:D3:

| period_ending | revenue            | cost_of_revenue    | gross_profit       |
|---------------|--------------------|--------------------|--------------------|
| 2023/09/30    | 383 285 000 000.00 | 214 137 000 000.00 | 169 148 000 000.00 |
| 2022/09/24    | 394 328 000 000.00 | 223 546 000 000.00 | 170 782 000 000.00 |
| 2021/09/25    | 365 817 000 000.00 | 212 981 000 000.00 | 152 836 000 000.00 |

- Slicing a single row:

```excel
=OBB.GET(A1:D3,DATE(2023,9,30))
```

:::note
When passing date labels make sure to use the format `YYYY/MM/DD` or refer to a cell range containing Excel date format - DATE(year,month,day).
:::

- Slicing a single column:

```excel
=OBB.GET(A1:D3,,"revenue")
```

- Slicing by index:

```excel
=OBB.GET(A1:D3,2,3)
```

:::tip
To slice the from the last row use negative numbers. For example, `=OBB.GET(A1:D3,-1,-2)` will return the last row and the second to last column.
:::

- Slicing multiple rows and columns:

```excel
=OBB.GET(A1:D3,{"2023/09/30","2021/09/25"},{"cost_of_revenue","gross_profit"})
```

:::tip
The easiest way to pass ranges is to write them into cells and reference them in the function. For example, `=OBB.GET(...,A1:A2)` where A1 contains "item1", A2 "item2".
:::


---

---
title: Basics
sidebar_position: 2
description: This page provides an overview of the basics of the OpenBB add-in for Microsoft Excel. It covers the basic usage of the add-in and the available functions.
keywords:
  - Microsoft Excel
  - Add-in
  - Basics
  - Examples
  - Functions
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Basics | OpenBB Add-in for Excel Docs" />

The OpenBB Add-in for Excel provides direct access to the OpenBB platform, where each function implements the following pattern:

- `OBB.[MENU].[SUB_MENU].[COMMAND]`

:::tip
Use the &lt;TAB&gt; key to autocomplete the function name after typing `=OBB.`
:::

Examples:

1. Getting balance sheet data for a stock:

   ```excel
   =OBB.EQUITY.FUNDAMENTAL.BALANCE("AAPL")
   ```

2. Getting the latest news for a stock:

   ```excel
   =OBB.NEWS.COMPANY("AAPL")
   ```

3. Getting the earnings calendar:

   ```excel
   =OBB.EQUITY.CALENDAR.IPO(,"2023-11-20")
   ```

:::tip
If you want to skip a parameter use comma (or semi-colon depending on your number separator) without any value. In example iii. we are skipping the first parameter (symbol).
:::

## Advanced

<div style={{display: 'flex', justifyContent: 'center'}}>
    <iframe
        style={{width: '800px', height: '450px', display: 'block', margin: '0 auto'}}
        src="https://www.youtube.com/embed/mk-NDjH8CDE?si=oL1Iqh1yJc24dh-K"
        title="YouTube video player"
        frameBorder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    />
</div>


---

---
title: Formula Builder
sidebar_position: 3
description: The formula builder helps you to create formulas for the OpenBB add-in. It is available in the taskpane. Click on the 'fx' button in the toolbar to open the formula builder.
keywords:
- Microsoft Excel
- Add-in
- Formula Builder
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Formula Builder | OpenBB Add-in for Excel Docs" />

You can use the formula builder to get more details about the available functions.

<!-- markdownlint-disable MD033 -->

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

<Tabs>
<TabItem value="windows" label="Windows">

1. Click on the 'fx' button in the formula bar to open the formula builder.
<img width="888" alt="formula" src="https://github.com/OpenBB-finance/OpenBBTerminal/assets/79287829/5a784851-0263-4b4d-94f2-9ef2cc831871"/>

2. The formula builder will be displayed in a new window.
<img width="600" alt="taskpane" src="https://github.com/OpenBB-finance/OpenBBTerminal/assets/79287829/3e6b1733-6def-491f-b974-47c7094103f7"/>

</TabItem>
<TabItem value="mac" label="Mac">

1. Click on the 'fx' button in the formula bar to open the formula builder.
<img width="888" alt="formula" src="https://github.com/OpenBB-finance/OpenBBTerminal/assets/79287829/684e12c8-7927-4b7d-9755-eb9d1a89221a"/>

2. The formula builder will be displayed in the taskpane.
<img width="309" alt="taskpane" src="https://github.com/OpenBB-finance/OpenBBTerminal/assets/79287829/f7466125-236c-4661-a480-a31bbb8c9fe9"/>

</TabItem>
</Tabs>


---

---
title: Installation
sidebar_position: 1
description: This page presents the general requirements and the steps to install the OpenBB Add-in for Excel. The OpenBB Add-in for Excel is available on Windows, Mac, and Excel on the web. It can be installed by an administrator or by individual users.
keywords:
- Microsoft Excel
- Add-in
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Installation | OpenBB Add-in for Excel Docs" />

## Requirements
- The OpenBB Add-in for Excel is available on the following platforms: Windows (Microsoft 365), Mac (Microsoft 365), Excel on the web.
- Access to OpenBB Workspace. If you don't have access you can sign up [here](https://my.openbb.co/app/pro).

## Installation

<div style={{display: 'flex', justifyContent: 'center'}}>
    <iframe
        style={{width: '800px', height: '450px', display: 'block', margin: '0 auto'}}
        src="https://www.youtube.com/embed/Rn3M36H_6Cw?si=6PdxyssA21461hUr)"
        title="YouTube video player"
        frameBorder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    />
</div>

The OpenBB Add-in for Excel is available on the [Microsoft AppSource](https://appsource.microsoft.com/product/office/wa200006381?tab=overview). It can be installed by an administrator or by individual users.

### Individual user

1. Open Microsoft Excel.
2. Go to **Home** tab.
3. Click in the **Add-ins** button and then **More add-ins**.
4. In the **Office Add-ins** dialog box **STORE** tab, search for **OpenBB** and select the add-in.
5. Click **Add**.

### Administrator

1. Go to Microsoft 365 admin center.
2. Click **Settings** > **Integrated apps**.
3. Click **Get apps**.
4. Search for **OpenBB** and select the add-in.
5. Click **Get in now**.
6. Go through the deployment wizard to complete the installation.


---

---
title: Help
sidebar_position: 5
description: Help for OpenBB Add-in for Excel.
keywords:
  - Microsoft Excel
  - Add-in
  - Help
---

import HeadTitle from "@site/src/components/General/HeadTitle.tsx";

<HeadTitle title="Help | Get help" />

If you face specific issues while using the add-in and the solutions provided here don't resolve them, don't hesitate to reach out to us for further assistance. You can contact us through [support@openbb.finance](mailto:support@openbb.finance).

<details>
<summary mdxType="summary">Running an OBB. function returns '#VALUE!'</summary>

- Make sure you are using the correct syntax for the function. You can find the correct syntax for each function [here](https://docs.openbb.co/excel/reference)
- If you have just opened your workbook and the OBB. function returns '#VALUE!', try recalculating the cell again - this is an ongoing issue with Excel add-ins

</details>

<details>
<summary mdxType="summary">OBB. functions are not available after installing the add-in</summary>

- Make sure OpenBB Add-in for Excel shows in the ribbon
- Go to **Insert** > **Get Add-ins** > **My Add-ins** > Click '...' when hovering OpenBB add-in > remove the add-in and install it again
- Restart your computer or manually [clear the Office cache](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/clear-cache)

</details>

<details>
<summary mdxType="summary">Task pane displays "You don’t have permission to use this add-in. Contact your system administrator to request access."</summary>

- Make sure your account has the necessary permissions to use add-in
- Restart your computer or manually [clear the Office cache](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/clear-cache)

</details>

<details>
<summary mdxType="summary">Editing a workbook in the browser and then on desktop app duplicates the 'OpenBB' tab in the ribbon</summary>

This is a known Excel issue. Currently, there is no definitive fix for the problem, but there are workarounds you can apply to fix the file depending on your operating system:

- **Windows**: File > Info > Inspect Workbook > Check ‘Task Pane Add-ins’ > Click ‘OK’. This will scan your workbook and remove the stale add-in reference created by Excel in the browser
- **Mac**: rename your file from .xlsx to .zip > unzip it using WinZip for Mac (don’t use the default unzip tool, otherwise it won’t work) > look for webextensions folder and delete webextension1.xml > rename the file back to .xlsx

</details>

<details>
<summary mdxType="summary">Cannot retrieve the data added to OpenBB Workspace through custom backend using OBB.BYOD</summary>

- Make sure your backend is running and accessible
- If you are using Mac or Safari make sure your backend is using HTTPS and has a valid SSL certificate

</details>


---

---
title: Overview
sidebar_position: 0
description: OpenBB Add-in for Excel is a powerful tool that allows you to access financial data directly from Excel. With the OpenBB Add-in for Excel, you can easily create financial models and perform financial analysis without leaving your spreadsheet.
keywords:
- investment research platform
- microsoft excel
- high-quality financial data
- investment decisions
- financial data analysis
- investment research reports
- user efficiency
- investment analysis
- financial dashboard
- visual insights
- data visualization
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="OpenBB Add-in for Excel Docs" />

OpenBB Add-in for Excel opens the gateway to a wealth of standardized financial data sourced from providers such as Polygon.io, Financial Modeling Prep, Benzinga, Intrinio, the Federal Reserve Bank of St. Louis, Trading Economics, and others.

Data standardization is at the core of OpenBB Add-in for Excel, offering you a consistent and reliable dataset from a diverse range of asset classes, from equity, fixed income, and cryptocurrency to macroeconomics. This seamless fetch of data means you can readily compare across providers and update it instantly, ensuring accuracy and saving you valuable time.

<div className="flex-grow flex items-center justify-center mt-5">
    <a href="https://pro.openbb.co" target="_blank" rel="noopener noreferrer">
        <button
            className="bg-grey-200 hover:bg-grey-400 dark:bg-[#303038] dark:hover:bg-grey-600 text-grey-900 dark:text-grey-200 text-sm font-medium py-2 px-4 rounded"
        >
            Access OpenBB Workspace for free
        </button>
    </a>
</div>

If interested in the Excel Add-in, reach out for an enterprise license to [hello@openbb.finance](mailto:hello@openbb.finance).

---

- **Features**

  - Access to the same datasets available in OpenBB Workspace
  - Standardization across financial data providers
  - Auto-refresh data within your spreadsheets
  - Ready-made Excel Templates


---

# CURRENCY

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Menus
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="PRICE"
    description="historical"
    url="currency/price"
/>
</ul>

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="SNAPSHOTS"
    description="Snapshots of currency exchange rates from an indirect or direct perspective of a base currency."
    url="currency/snapshots"
    command
/>
</ul>



---

---
title: HISTORICAL
description: Learn how to use the `obb.equity.price.historical` function to load historical
  price data for a specific stock ticker. Find out about the available parameters
  and providers, as well as the structure of the returned data and the columns it
  contains.
keywords: 
- equity historical price
- load stock data
- specific ticker
- python function
- equity data parameters
- alpha vantage provider
- fmp provider
- intrinio provider
- polygon provider
- yfinance provider
- equity historical data returns
- equity data columns
- alpha vantage data columns
- cboe data columns
- fmp data columns
- intrinio data columns
- polygon data columns
- yfinance data columns
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="CURRENCY.PRICE.HISTORICAL | OpenBB Add-in for Excel Docs" />

Currency Historical Price. Currency historical data.  Currency historical prices refer to the past exchange rates of one currency against another over a specific period. This data provides insight into the fluctuations and trends in the foreign exchange market, helping analysts, traders, and economists understand currency performance, evaluate economic health, and make predictions about future movements.

## Syntax

```excel
=OBB.CURRENCY.PRICE.HISTORICAL(symbol,[start_date],[end_date],[interval])
```

## Examples

```excel
=OBB.CURRENCY.PRICE.HISTORICAL("EURUSD")
```

```excel
=OBB.CURRENCY.PRICE.HISTORICAL("EURUSD","2023-01-01","2023-12-31")
```

```excel
=OBB.CURRENCY.PRICE.HISTORICAL("EURUSD",,,"15m")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Can use CURR1-CURR2 or CURR1CURR2 format. Multiple comma separated items allowed.** | **True** |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |
| interval | Text | Time interval of the data to return. Options: 1m, 5m, 15m, 30m, 1h, 4h, 1d. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| date | The date of the data. |
| open | The open price. |
| high | The high price. |
| low | The low price. |
| close | The close price. |
| volume | The trading volume. |
| vwap | Volume Weighted Average Price over the period. |
| transactions | Number of transactions for the symbol in the time period. |
</TabItem>
</Tabs>


---

# CURRENCY.PRICE

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="HISTORICAL"
    description="Currency Historical Price. Currency historical data. Currency historical prices refer to the past..."
    url="price/historical"
    command
/>
</ul>



---

---
title: SNAPSHOTS
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="CURRENCY.SNAPSHOTS | OpenBB Add-in for Excel Docs" />

Snapshots of currency exchange rates from an indirect or direct perspective of a base currency.

## Syntax

```excel
=OBB.CURRENCY.SNAPSHOTS([base],[quote_type],[counter_currencies])
```

## Examples

```excel
=OBB.CURRENCY.SNAPSHOTS()
```

```excel
=OBB.CURRENCY.SNAPSHOTS("USD,XAU","indirect",EUR,JPY,GBP)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| base | Text | The base currency symbol. Multiple comma separated items allowed. | False |
| quote_type | Text | Whether the quote is direct or indirect. Selecting 'direct' will return the exchange rate as the amount of domestic currency required to buy one unit of the foreign currency. Selecting 'indirect' (default) will return the exchange rate as the amount of foreign currency required to buy one unit of the domestic currency. | False |
| counter_currencies | Any | An optional list of counter currency symbols to filter for. None returns all. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| base_currency | The base, or domestic, currency. |
| counter_currency | The counter, or foreign, currency. |
| last_rate | The exchange rate, relative to the base currency. Rates are expressed as the amount of foreign currency received from selling one unit of the base currency, or the quantity of foreign currency required to purchase one unit of the domestic currency. To inverse the perspective, set the 'quote_type' parameter as 'direct'. |
| open | The open price. |
| high | The high price. |
| low | The low price. |
| close | The close price. |
| volume | The trading volume. |
| prev_close | The previous close price. |
| vwap | The volume-weighted average price. |
| change | The change in price from the previous day. |
| change_percent | The percentage change in price from the previous day. |
| prev_open | The previous day's opening price. |
| prev_high | The previous day's high price. |
| prev_low | The previous day's low price. |
| prev_volume | The previous day's volume. |
| prev_vwap | The previous day's VWAP. |
| bid | The current bid price. |
| ask | The current ask price. |
| minute_open | The open price from the most recent minute bar. |
| minute_high | The high price from the most recent minute bar. |
| minute_low | The low price from the most recent minute bar. |
| minute_close | The close price from the most recent minute bar. |
| minute_volume | The volume from the most recent minute bar. |
| minute_vwap | The VWAP from the most recent minute bar. |
| minute_transactions | The number of transactions in the most recent minute bar. |
| quote_timestamp | The timestamp of the last quote. |
| minute_timestamp | The timestamp for the start of the most recent minute bar. |
| last_updated | The last time the data was updated. |
</TabItem>
</Tabs>


---

# DERIVATIVES

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Menus
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="OPTIONS"
    description="chains"
    url="derivatives/options"
/>
</ul>



---

---
title: CHAINS
description: Learn how to get the complete options chain for a ticker using the OBB.equity.options.chains
  function. Explore the available parameters like symbol and provider, and understand
  the data returned, including contract symbol, expiration, strike price, and more.
keywords: 
- options chain
- ticker
- complete options chain
- symbol
- provider
- data
- contract symbol
- expiration
- strike price
- option type
- eod date
- trading volume
- open price
- open interest
- high price
- low price
- implied volatility
- delta
- gamma
- theta
- vega
- bid size
- ask size
- theoretical value
- last trade price
- prev close
- change percent
- rho
- last trade timestamp
- dte
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="DERIVATIVES.OPTIONS.CHAINS | OpenBB Add-in for Excel Docs" />

Get the complete options chain for a ticker.

## Syntax

```excel
=OBB.DERIVATIVES.OPTIONS.CHAINS(symbol,[date],[option_type],[moneyness])
```

## Examples

```excel
=OBB.DERIVATIVES.OPTIONS.CHAINS("AAPL")
```

```excel
=OBB.DERIVATIVES.OPTIONS.CHAINS("AAPL","2023-01-25")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| date | Text | The end-of-day date for options chains data. | False |
| option_type | Text | The option type, call or put, 'None' is both (default). Options: call, put. | False |
| moneyness | Text | Return only contracts that are in or out of the money, default is 'all'. Parameter is ignored when a date is supplied. Options: otm, itm, all. | False |

---



---

# DERIVATIVES.OPTIONS

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="CHAINS"
    description="Get the complete options chain for a ticker."
    url="options/chains"
    command
/>
</ul>



---

---
title: COUNTRY_PROFILE
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="ECONOMY.COUNTRY_PROFILE | OpenBB Add-in for Excel Docs" />

Get a profile of country statistics and economic indicators.

## Syntax

```excel
=OBB.ECONOMY.COUNTRY_PROFILE(country,[latest],[use_cache])
```

## Examples

```excel
=OBB.ECONOMY.COUNTRY_PROFILE("united_kingdom")
```

```excel
=OBB.ECONOMY.COUNTRY_PROFILE("united_states,jp")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **country** | **Text** | **The country to get data. Multiple comma separated items allowed.** | **True** |
| latest | Boolean | If True, return only the latest data. If False, return all available data for each indicator. | False |
| use_cache | Boolean | If True, the request will be cached for one day.Using cache is recommended to avoid needlessly requesting the same data. | False |

---



---

# ECONOMY

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="COUNTRY_PROFILE"
    description="Get a profile of country statistics and economic indicators."
    url="economy/country_profile"
    command
/><ReferenceCard
    title="INDICATORS"
    description="Get economic indicators by country and indicator."
    url="economy/indicators"
    command
/>
</ul>



---

---
title: INDICATORS
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="ECONOMY.INDICATORS | OpenBB Add-in for Excel Docs" />

Get economic indicators by country and indicator.

## Syntax

```excel
=OBB.ECONOMY.INDICATORS(symbol,[country],[start_date],[end_date],[transform],[frequency],[use_cache])
```

## Examples

```excel
=OBB.ECONOMY.INDICATORS("PCOCO")
```

```excel
=OBB.ECONOMY.INDICATORS("CPI","united_states,jp")
```

```excel
=OBB.ECONOMY.INDICATORS("main","eu")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. The base symbol for the indicator (e.g. GDP, CPI, etc.). Multiple comma separated items allowed.** | **True** |
| country | Text | The country to get data. The country represented by the indicator, if available. Multiple comma separated items allowed. | False |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |
| transform | Text | tusd` should only be used where values are currencies. Options: toya, tpop, tusd, tpgp. | False |
| frequency | Text | The frequency of the data, default is 'quarter'. Only valid when 'symbol' is 'main'. Options: annual, quarter, month. | False |
| use_cache | Boolean | If True, the request will be cached for one day. Using cache is recommended to avoid needlessly requesting the same data. | False |

---



---

# EQUITY.COMPARE

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="PEERS"
    description="Get the closest peers for a given company. Peers consist of companies trading on the same..."
    url="compare/peers"
    command
/>
</ul>



---

---
title: PEERS
description: Learn how to compare and analyze equity peers with the `obb.equity.compare.peers`
  function. This function allows you to retrieve a list of company peers based on
  symbol, sector, exchange, and market cap. Understand the parameters, returns, and
  data structure provided by this function.
keywords: 
- equity peers
- company peers
- compare peers
- symbol
- provider
- parameter
- returns
- data
- list of peers
- sector
- exchange
- market cap
- serializable results
- chart object
- metadata
- command execution
- warnings
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.COMPARE.PEERS | OpenBB Add-in for Excel Docs" />

Get the closest peers for a given company.  Peers consist of companies trading on the same exchange, operating within the same sector and with comparable market capitalizations.

## Syntax

```excel
=OBB.EQUITY.COMPARE.PEERS(symbol)
```

## Examples

```excel
=OBB.EQUITY.COMPARE.PEERS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |

---



---

---
title: CONSENSUS
description: Learn how to access and use the Price Target Consensus functionality
  in your application. Explore the available parameters and understand the returned
  data structure.
keywords: 
- Price target consensus data
- equity estimates consensus
- symbol parameter
- provider parameter
- results attribute
- provider attribute
- warnings attribute
- chart attribute
- metadata attribute
- data table
- target_high column
- target_low column
- target_consensus column
- target_median column
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.ESTIMATES.CONSENSUS | OpenBB Add-in for Excel Docs" />

Get consensus price target and recommendation.

## Syntax

```excel
=OBB.EQUITY.ESTIMATES.CONSENSUS([symbol])
```

## Examples

```excel
=OBB.EQUITY.ESTIMATES.CONSENSUS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| symbol | Text | Symbol to get data for. Multiple comma separated items allowed. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| name | The company name |
| target_high | High target of the price target consensus. |
| target_low | Low target of the price target consensus. |
| target_consensus | Consensus target of the price target consensus. |
| target_median | Median target of the price target consensus. |
</TabItem>
</Tabs>


---

---
title: FORWARD_EBITDA
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.ESTIMATES.FORWARD_EBITDA | OpenBB Add-in for Excel Docs" />

Get forward EBITDA estimates.

## Syntax

```excel
=OBB.EQUITY.ESTIMATES.FORWARD_EBITDA([symbol],[fiscal_period],[limit],[include_historical])
```

## Examples

```excel
=OBB.EQUITY.ESTIMATES.FORWARD_EBITDA()
```

```excel
=OBB.EQUITY.ESTIMATES.FORWARD_EBITDA("AAPL","annual")
```

```excel
=OBB.EQUITY.ESTIMATES.FORWARD_EBITDA("AAPL,MSFT","quarter")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| symbol | Text | Symbol to get data for. Multiple comma separated items allowed. | False |
| fiscal_period | Text | The future fiscal period to retrieve estimates for. Options: annual, quarter. | False |
| limit | Number | The number of data entries to return. | False |
| include_historical | Boolean | If True, the data will include all past data and the limit will be ignored. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| name | Name of the entity. |
| last_updated | The date of the last update. |
| period_ending | The end date of the reporting period. |
| fiscal_year | Fiscal year for the estimate. |
| fiscal_period | Fiscal quarter for the estimate. |
| calendar_year | Calendar year for the estimate. |
| calendar_period | Calendar quarter for the estimate. |
| low_estimate | The EBITDA estimate low for the period. |
| high_estimate | The EBITDA estimate high for the period. |
| mean | The EBITDA estimate mean for the period. |
| median | The EBITDA estimate median for the period. |
| standard_deviation | The EBITDA estimate standard deviation for the period. |
| number_of_analysts | Number of analysts providing estimates for the period. |
</TabItem>
</Tabs>


---

# EQUITY.ESTIMATES

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="CONSENSUS"
    description="Get consensus price target and recommendation."
    url="estimates/consensus"
    command
/><ReferenceCard
    title="PRICE_TARGET"
    description="Get analyst price targets by company."
    url="estimates/price_target"
    command
/><ReferenceCard
    title="FORWARD_EBITDA"
    description="Get forward EBITDA estimates."
    url="estimates/forward_ebitda"
    command
/>
</ul>



---

---
title: PRICE_TARGET
description: Get price target data for an equity symbol. Retrieve information such
  as publication date, analyst details, price target, and more. Supports multiple
  symbols and customizable providers.
keywords: 
- price target data
- equity estimates
- symbol
- provider
- grade
- published date
- news URL
- news title
- analyst name
- analyst company
- price target
- adjusted price target
- price when posted
- news publisher
- news base URL
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.ESTIMATES.PRICE_TARGET | OpenBB Add-in for Excel Docs" />

Get analyst price targets by company.

## Syntax

```excel
=OBB.EQUITY.ESTIMATES.PRICE_TARGET([symbol],[limit],[provider],[page],[date],[start_date],[end_date],[updated],[importance],[action],[analyst_ids],[firm_ids],[fields],[with_grade])
```

## Examples

```excel
=OBB.EQUITY.ESTIMATES.PRICE_TARGET(,,"benzinga")
```

```excel
=OBB.EQUITY.ESTIMATES.PRICE_TARGET("msft",10,"benzinga",,,"2020-01-01","2024-02-16",,,"downgrades")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| symbol | Text | Symbol to get data for. Multiple comma separated items allowed. | False |
| limit | Number | The number of data entries to return. | False |
| provider | Text | Options: benzinga, fmp, defaults to benzinga. | False |
| page | Number | Page offset. For optimization, performance and technical reasons, page offsets are limited from 0 - 100000. Limit the query results by other parameters such as date. Used in conjunction with the limit and date parameters. | False |
| date | Text | Date for calendar data, shorthand for date_from and date_to. | False |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |
| updated | Any | Records last Updated Unix timestamp (UTC). This will force the sort order to be Greater Than or Equal to the timestamp indicated. The date can be a date string or a Unix timestamp. The date string must be in the format of YYYY-MM-DD. | False |
| importance | Number | Importance level to filter by. Uses Greater Than or Equal To the importance indicated | False |
| action | Text | Filter by a specific action_company. Options: downgrades, maintains, reinstates, reiterates, upgrades, assumes, initiates, terminates, removes, suspends, firm_dissolved. | False |
| analyst_ids | Any | Comma-separated list of analyst (person) IDs. Omitting will bring back all available analysts. Multiple comma separated items allowed. | False |
| firm_ids | Any | Comma-separated list of firm IDs. Multiple comma separated items allowed. | False |
| fields | Any | Comma-separated list of fields to include in the response. See https://docs.benzinga.io/benzinga-apis/calendar/get-ratings to learn about the available fields. Multiple comma separated items allowed. | False |
| with_grade | Boolean | Include upgrades and downgrades in the response. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='benzinga'>

| Name | Description |
| ---- | ----------- |
| published_date | Published date of the price target. |
| published_time | Time of the original rating, UTC. |
| symbol | Symbol representing the entity requested in the data. |
| exchange | Exchange where the company is traded. |
| company_name | Name of company that is the subject of rating. |
| analyst_name | Analyst name. |
| analyst_firm | Name of the analyst firm that published the price target. |
| currency | Currency the data is denominated in. |
| price_target | The current price target. |
| adj_price_target | Adjusted price target for splits and stock dividends. |
| price_target_previous | Previous price target. |
| previous_adj_price_target | Previous adjusted price target. |
| price_when_posted | Price when posted. |
| rating_current | The analyst's rating for the company. |
| rating_previous | Previous analyst rating for the company. |
| action_company | Description of the change in rating from firm's last rating.Note that all of these terms are precisely defined. |
| action_pt | Description of the change in price target from firm's last price target. |
| importance | Subjective Basis of How Important Event is to Market. 5 = High |
| notes | Notes of the price target. |
| analyst_id | Id of the analyst. |
| url_news | URL for analyst ratings news articles for this ticker on Benzinga.com. |
| url_analyst | URL for analyst ratings page for this ticker on Benzinga.com. |
| id | Unique ID of this entry. |
| updated | Last updated timestamp, UTC. |
</TabItem>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| published_date | Published date of the price target. |
| published_time | Time of the original rating, UTC. |
| symbol | Symbol representing the entity requested in the data. |
| exchange | Exchange where the company is traded. |
| company_name | Name of company that is the subject of rating. |
| analyst_name | Analyst name. |
| analyst_firm | Name of the analyst firm that published the price target. |
| currency | Currency the data is denominated in. |
| price_target | The current price target. |
| adj_price_target | Adjusted price target for splits and stock dividends. |
| price_target_previous | Previous price target. |
| previous_adj_price_target | Previous adjusted price target. |
| price_when_posted | Price when posted. |
| rating_current | The analyst's rating for the company. |
| rating_previous | Previous analyst rating for the company. |
| action | Description of the change in rating from firm's last rating. |
| news_url | News URL of the price target. |
| news_title | News title of the price target. |
| news_publisher | News publisher of the price target. |
| news_base_url | News base URL of the price target. |
</TabItem>
</Tabs>


---

---
title: BALANCE
description: Learn how to use the balance sheet function in Python to retrieve financial
  statement data. This documentation provides details about the function parameters,
  return values, and available data types.
keywords: 
- balance sheet statement
- balance sheet function
- python function
- financial statement function
- balance sheet data parameters
- balance sheet data returns
- balance sheet data types
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.BALANCE | OpenBB Add-in for Excel Docs" />

Get the balance sheet for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.BALANCE(symbol,[period],[limit])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.BALANCE("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.BALANCE("AAPL","annual",5)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| period | Text | Time period of the data to return. | False |
| limit | Number | The number of data entries to return. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| period_ending | The end date of the reporting period. |
| fiscal_period | The fiscal period of the report. |
| fiscal_year | The fiscal year of the fiscal period. |
| reported_currency | The currency in which the balance sheet is reported. |
| cash_and_cash_equivalents | Cash and cash equivalents. |
| cash_and_due_from_banks | Cash and due from banks. |
| restricted_cash | Restricted cash. |
| short_term_investments | Short term investments. |
| federal_funds_sold | Federal funds sold. |
| accounts_receivable | Accounts receivable. |
| note_and_lease_receivable | Note and lease receivable. (Vendor non-trade receivables) |
| inventories | Net Inventories. |
| customer_and_other_receivables | Customer and other receivables. |
| interest_bearing_deposits_at_other_banks | Interest bearing deposits at other banks. |
| time_deposits_placed_and_other_short_term_investments | Time deposits placed and other short term investments. |
| trading_account_securities | Trading account securities. |
| loans_and_leases | Loans and leases. |
| allowance_for_loan_and_lease_losses | Allowance for loan and lease losses. |
| current_deferred_refundable_income_taxes | Current deferred refundable income taxes. |
| other_current_assets | Other current assets. |
| loans_and_leases_net_of_allowance | Loans and leases net of allowance. |
| accrued_investment_income | Accrued investment income. |
| other_current_non_operating_assets | Other current non-operating assets. |
| loans_held_for_sale | Loans held for sale. |
| prepaid_expenses | Prepaid expenses. |
| total_current_assets | Total current assets. |
| plant_property_equipment_gross | Plant property equipment gross. |
| accumulated_depreciation | Accumulated depreciation. |
| premises_and_equipment_net | Net premises and equipment. |
| plant_property_equipment_net | Net plant property equipment. |
| long_term_investments | Long term investments. |
| mortgage_servicing_rights | Mortgage servicing rights. |
| unearned_premiums_asset | Unearned premiums asset. |
| non_current_note_lease_receivables | Non-current note lease receivables. |
| deferred_acquisition_cost | Deferred acquisition cost. |
| goodwill | Goodwill. |
| separate_account_business_assets | Separate account business assets. |
| non_current_deferred_refundable_income_taxes | Noncurrent deferred refundable income taxes. |
| intangible_assets | Intangible assets. |
| employee_benefit_assets | Employee benefit assets. |
| other_assets | Other assets. |
| other_non_current_operating_assets | Other noncurrent operating assets. |
| other_non_current_non_operating_assets | Other noncurrent non-operating assets. |
| interest_bearing_deposits | Interest bearing deposits. |
| total_non_current_assets | Total noncurrent assets. |
| total_assets | Total assets. |
| non_interest_bearing_deposits | Non interest bearing deposits. |
| federal_funds_purchased_and_securities_sold | Federal funds purchased and securities sold. |
| bankers_acceptance_outstanding | Bankers acceptance outstanding. |
| short_term_debt | Short term debt. |
| accounts_payable | Accounts payable. |
| current_deferred_revenue | Current deferred revenue. |
| current_deferred_payable_income_tax_liabilities | Current deferred payable income tax liabilities. |
| accrued_interest_payable | Accrued interest payable. |
| accrued_expenses | Accrued expenses. |
| other_short_term_payables | Other short term payables. |
| customer_deposits | Customer deposits. |
| dividends_payable | Dividends payable. |
| claims_and_claim_expense | Claims and claim expense. |
| future_policy_benefits | Future policy benefits. |
| current_employee_benefit_liabilities | Current employee benefit liabilities. |
| unearned_premiums_liability | Unearned premiums liability. |
| other_taxes_payable | Other taxes payable. |
| policy_holder_funds | Policy holder funds. |
| other_current_liabilities | Other current liabilities. |
| other_current_non_operating_liabilities | Other current non-operating liabilities. |
| separate_account_business_liabilities | Separate account business liabilities. |
| total_current_liabilities | Total current liabilities. |
| long_term_debt | Long term debt. |
| other_long_term_liabilities | Other long term liabilities. |
| non_current_deferred_revenue | Non-current deferred revenue. |
| non_current_deferred_payable_income_tax_liabilities | Non-current deferred payable income tax liabilities. |
| non_current_employee_benefit_liabilities | Non-current employee benefit liabilities. |
| other_non_current_operating_liabilities | Other non-current operating liabilities. |
| other_non_current_non_operating_liabilities | Other non-current, non-operating liabilities. |
| total_non_current_liabilities | Total non-current liabilities. |
| capital_lease_obligations | Capital lease obligations. |
| asset_retirement_reserve_litigation_obligation | Asset retirement reserve litigation obligation. |
| total_liabilities | Total liabilities. |
| commitments_contingencies | Commitments contingencies. |
| redeemable_non_controlling_interest | Redeemable non-controlling interest. |
| preferred_stock | Preferred stock. |
| common_stock | Common stock. |
| retained_earnings | Retained earnings. |
| treasury_stock | Treasury stock. |
| accumulated_other_comprehensive_income | Accumulated other comprehensive income. |
| participating_policy_holder_equity | Participating policy holder equity. |
| other_equity_adjustments | Other equity adjustments. |
| total_common_equity | Total common equity. |
| total_preferred_common_equity | Total preferred common equity. |
| non_controlling_interest | Non-controlling interest. |
| total_equity_non_controlling_interests | Total equity non-controlling interests. |
| total_liabilities_shareholders_equity | Total liabilities and shareholders equity. |
</TabItem>
</Tabs>


---

---
title: CASH
description: Learn how to use the Cash Flow Statement API endpoint to retrieve information
  about cash flow statements. Understand the parameters and return values of the API,
  and explore the available data fields for cash flow statements.
keywords: 
- Cash Flow Statement
- cash flow statement parameters
- cash flow statement returns
- cash flow statement data
- python obb.equity.fundamental.cash
- symbol
- period
- limit
- provider
- cik
- filing date
- period of report date
- include sources
- order
- sort
- net income
- depreciation and amortization
- stock based compensation
- deferred income tax
- other non-cash items
- changes in operating assets and liabilities
- accounts receivables
- inventory
- vendor non-trade receivables
- other current and non-current assets
- accounts payables
- deferred revenue
- other current and non-current liabilities
- net cash flow from operating activities
- purchases of marketable securities
- sales from maturities of investments
- investments in property plant and equipment
- payments from acquisitions
- other investing activities
- net cash flow from investing activities
- taxes paid on net share settlement
- dividends paid
- common stock repurchased
- debt proceeds
- debt repayment
- other financing activities
- net cash flow from financing activities
- net change in cash
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.CASH | OpenBB Add-in for Excel Docs" />

Get the cash flow statement for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.CASH(symbol,[period],[limit])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.CASH("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.CASH("AAPL","annual",5)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| period | Text | Time period of the data to return. | False |
| limit | Number | The number of data entries to return. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| period_ending | The end date of the reporting period. |
| fiscal_period | The fiscal period of the report. |
| fiscal_year | The fiscal year of the fiscal period. |
| filing_date | The date of the filing. |
| accepted_date | The date the filing was accepted. |
| reported_currency | The currency in which the cash flow statement was reported. |
| net_income | Net income. |
| depreciation_and_amortization | Depreciation and amortization. |
| deferred_income_tax | Deferred income tax. |
| stock_based_compensation | Stock-based compensation. |
| change_in_working_capital | Change in working capital. |
| change_in_account_receivables | Change in account receivables. |
| change_in_inventory | Change in inventory. |
| change_in_account_payable | Change in account payable. |
| change_in_other_working_capital | Change in other working capital. |
| change_in_other_non_cash_items | Change in other non-cash items. |
| net_cash_from_operating_activities | Net cash from operating activities. |
| purchase_of_property_plant_and_equipment | Purchase of property, plant and equipment. |
| acquisitions | Acquisitions. |
| purchase_of_investment_securities | Purchase of investment securities. |
| sale_and_maturity_of_investments | Sale and maturity of investments. |
| other_investing_activities | Other investing activities. |
| net_cash_from_investing_activities | Net cash from investing activities. |
| repayment_of_debt | Repayment of debt. |
| issuance_of_common_equity | Issuance of common equity. |
| repurchase_of_common_equity | Repurchase of common equity. |
| payment_of_dividends | Payment of dividends. |
| other_financing_activities | Other financing activities. |
| net_cash_from_financing_activities | Net cash from financing activities. |
| effect_of_exchange_rate_changes_on_cash | Effect of exchange rate changes on cash. |
| net_change_in_cash_and_equivalents | Net change in cash and equivalents. |
| cash_at_beginning_of_period | Cash at beginning of period. |
| cash_at_end_of_period | Cash at end of period. |
| operating_cash_flow | Operating cash flow. |
| capital_expenditure | Capital expenditure. |
| free_cash_flow |  |
| link | Link to the filing. |
| final_link | Link to the filing document. |
</TabItem>
</Tabs>


---

---
title: DIVIDENDS
description: Get historical dividends data for a given company with the OBB.equity.fundamental.dividends
  function. Explore parameters like symbol and provider, and understand the returned
  results, warnings, and metadata. View the data fields, including date, label, adj_dividend,
  dividend, record_date, payment_date, and declaration_date.
keywords: 
- historical dividends
- dividends data
- company dividends
- symbol
- data provider
- default provider
- results
- warnings
- chart
- metadata
- date
- label
- adj_dividend
- dividend
- record_date
- payment_date
- declaration_date
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.DIVIDENDS | OpenBB Add-in for Excel Docs" />

Get historical dividend data for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.DIVIDENDS(symbol,[start_date],[end_date])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.DIVIDENDS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| ex_dividend_date | The ex-dividend date - the date on which the stock begins trading without rights to the dividend. |
| amount | The dividend amount per share. |
| factor | factor by which to multiply stock prices before this date, in order to calculate historically-adjusted stock prices. |
| currency | The currency in which the dividend is paid. |
| split_ratio | The ratio of the stock split, if a stock split occurred. |
</TabItem>
</Tabs>


---

---
title: FILINGS
description: Learn how to retrieve company filings data such as date, type of document,
  and link. Understand the available parameters to filter the data, including symbol,
  limit, provider, type, and page. Explore the different fields in the data, such
  as ticker symbol, accepted date, and final link.
keywords: 
- company filings
- data entries
- symbol
- limit
- provider
- type
- page
- cik
- date
- link
- ticker symbol
- accepted date
- final link
- report date
- act
- items
- primary doc description
- primary doc
- accession number
- file number
- film number
- is inline xbrl
- is xbrl
- size
- complete submission url
- filing detail url
- xml
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.FILINGS | OpenBB Add-in for Excel Docs" />

Get the URLs to SEC filings reported to EDGAR database, such as 10-K, 10-Q, 8-K, and more. SEC filings include Form 10-K, Form 10-Q, Form 8-K, the proxy statement, Forms 3, 4, and 5, Schedule 13, Form 114, Foreign Investment Disclosures and others. The annual 10-K report is required to be filed annually and includes the company's financial statements, management discussion and analysis, and audited financial statements.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.FILINGS([symbol],[form_type],[limit])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.FILINGS()
```

```excel
=OBB.EQUITY.FUNDAMENTAL.FILINGS(,,100)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| symbol | Text | Symbol to get data for. | False |
| form_type | Text | Filter by form type. Check the data provider for available types. | False |
| limit | Number | The number of data entries to return. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| filing_date | The date of the filing. |
| accepted_date | Accepted date of the filing. |
| symbol | Symbol representing the entity requested in the data. |
| cik | Central Index Key (CIK) for the requested entity. |
| report_type | Type of filing. |
| filing_url | URL to the filing page. |
| report_url | URL to the actual report. |
| reportDate | The date of the filing. |
| act | The SEC Act number. |
| items | The SEC Item numbers. |
| primaryDocDescription | The description of the primary document. |
| primaryDocument | The filename of the primary document. |
| accessionNumber | The accession number. |
| fileNumber | The file number. |
| filmNumber | The film number. |
| isInlineXBRL | Whether the filing is an inline XBRL filing. |
| isXBRL | Whether the filing is an XBRL filing. |
| size | The size of the filing. |
| completeSubmissionUrl | The URL to the complete filing submission. |
| filingDetailUrl | The URL to the filing details. |
</TabItem>
</Tabs>


---

---
title: HISTORICAL_EPS
description: Historical earnings-per-share for a given company
keywords: 
- equity
- fundamental
- historical_eps
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.HISTORICAL_EPS | OpenBB Add-in for Excel Docs" />

Get historical earnings per share data for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.HISTORICAL_EPS(symbol,[limit])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.HISTORICAL_EPS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| limit | Number | The number of data entries to return. | False |

---



---

---
title: HISTORICAL_SPLITS
description: Learn how to retrieve historical stock splits data using the Python obb.equity.fundamental.historical_splits
  function. Understand the parameters, returns, and data structure for this API call.
keywords: 
- historical stock splits
- stock splits data
- python obb.equity.fundamental.historical_splits
- parameters
- symbol
- provider
- returns
- results
- provider name
- warnings
- chart object
- metadata
- data
- date
- label
- numerator
- denominator
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.HISTORICAL_SPLITS | OpenBB Add-in for Excel Docs" />

Get historical stock splits for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.HISTORICAL_SPLITS(symbol)
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.HISTORICAL_SPLITS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |

---



---

---
title: INCOME
description: Get income statement and financial performance data for a company. Parameters
  include symbol, period, limit, provider, and more. Data includes revenue, gross
  profit, operating expenses, net income, and more.
keywords: 
- income statement
- financial performance
- get income data
- period
- limit
- provider
- symbol
- cik
- filing date
- period of report date
- include sources
- order
- sort
- revenue
- cost of revenue
- gross profit
- cost and expenses
- research and development expenses
- general and administrative expenses
- selling and marketing expenses
- other expenses
- operating expenses
- depreciation and amortization
- ebitda
- operating income
- interest income
- interest expense
- income before tax
- income tax expense
- net income
- eps
- weighted average shares outstanding
- link
- reported currency
- filling date
- accepted date
- calendar year
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.INCOME | OpenBB Add-in for Excel Docs" />

Get the income statement for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.INCOME(symbol,[period],[limit])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.INCOME("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.INCOME("AAPL","annual",5)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| period | Text | Time period of the data to return. | False |
| limit | Number | The number of data entries to return. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| period_ending | The end date of the reporting period. |
| fiscal_period | The fiscal period of the report. |
| fiscal_year | The fiscal year of the fiscal period. |
| revenue | Total Revenue |
| cost_of_revenue_goods | Cost of Revenue - Goods |
| cost_of_revenue_services | Cost of Revenue - Services |
| cost_of_revenue | Cost of Revenue |
| gross_profit | Gross Profit |
| provisions_for_loan_lease_and_other_losses | Provisions for loan lease and other losses |
| depreciation_and_amortization | Depreciation and Amortization |
| income_tax_expense_benefit_current | Income tax expense benefit current |
| deferred_tax_benefit | Deferred tax benefit |
| benefits_costs_expenses | Benefits, costs and expenses |
| selling_general_and_administrative_expense | Selling, general and administrative expense |
| research_and_development | Research and development |
| costs_and_expenses | Costs and expenses |
| other_operating_expenses | Other Operating Expenses |
| operating_expenses | Operating expenses |
| operating_income | Operating Income/Loss |
| non_operating_income | Non Operating Income/Loss |
| interest_and_dividend_income | Interest and Dividend Income |
| total_interest_expense | Interest Expense |
| interest_and_debt_expense | Interest and Debt Expense |
| net_interest_income | Interest Income Net |
| interest_income_after_provision_for_losses | Interest Income After Provision for Losses |
| non_interest_expense | Non-Interest Expense |
| non_interest_income | Non-Interest Income |
| income_from_discontinued_operations_net_of_tax_on_disposal | Income From Discontinued Operations Net of Tax on Disposal |
| income_from_discontinued_operations_net_of_tax | Income From Discontinued Operations Net of Tax |
| income_before_equity_method_investments | Income Before Equity Method Investments |
| income_from_equity_method_investments | Income From Equity Method Investments |
| total_pre_tax_income | Income Before Tax |
| income_tax_expense | Income Tax Expense |
| income_after_tax | Income After Tax |
| consolidated_net_income | Net Income/Loss |
| net_income_attributable_noncontrolling_interest | Net income (loss) attributable to noncontrolling interest |
| net_income_attributable_to_parent | Net income (loss) attributable to parent |
| net_income_attributable_to_common_shareholders | Net Income/Loss Available To Common Stockholders Basic |
| participating_securities_earnings | Participating Securities Distributed And Undistributed Earnings Loss Basic |
| undistributed_earnings_allocated_to_participating_securities | Undistributed Earnings Allocated To Participating Securities |
| common_stock_dividends | Common Stock Dividends |
| preferred_stock_dividends_and_other_adjustments | Preferred stock dividends and other adjustments |
| basic_earnings_per_share | Earnings Per Share |
| diluted_earnings_per_share | Diluted Earnings Per Share |
| weighted_average_basic_shares_outstanding | Basic Average Shares |
| weighted_average_diluted_shares_outstanding | Diluted Average Shares |
</TabItem>
</Tabs>


---

# EQUITY.FUNDAMENTAL

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="HISTORICAL_EPS"
    description="Get historical earnings per share data for a given company."
    url="fundamental/historical_eps"
    command
/><ReferenceCard
    title="FILINGS"
    description="Get the URLs to SEC filings reported to EDGAR database, such as 10-K, 10-Q, 8-K, and more. SEC..."
    url="fundamental/filings"
    command
/><ReferenceCard
    title="MANAGEMENT"
    description="Get executive management team data for a given company."
    url="fundamental/management"
    command
/><ReferenceCard
    title="OVERVIEW"
    description="Get company general business and stock data for a given company."
    url="fundamental/overview"
    command
/><ReferenceCard
    title="DIVIDENDS"
    description="Get historical dividend data for a given company."
    url="fundamental/dividends"
    command
/><ReferenceCard
    title="BALANCE"
    description="Get the balance sheet for a given company."
    url="fundamental/balance"
    command
/><ReferenceCard
    title="RATIOS"
    description="Get an extensive set of financial and accounting ratios for a given company over time."
    url="fundamental/ratios"
    command
/><ReferenceCard
    title="REVENUE_PER_SEGMENT"
    description="Get the revenue breakdown by business segment for a given company over time."
    url="fundamental/revenue_per_segment"
    command
/><ReferenceCard
    title="REVENUE_PER_GEOGRAPHY"
    description="Get the revenue geographic breakdown for a given company over time."
    url="fundamental/revenue_per_geography"
    command
/><ReferenceCard
    title="HISTORICAL_SPLITS"
    description="Get historical stock splits for a given company."
    url="fundamental/historical_splits"
    command
/><ReferenceCard
    title="TRANSCRIPT"
    description="Get earnings call transcripts for a given company."
    url="fundamental/transcript"
    command
/><ReferenceCard
    title="CASH"
    description="Get the cash flow statement for a given company."
    url="fundamental/cash"
    command
/><ReferenceCard
    title="INCOME"
    description="Get the income statement for a given company."
    url="fundamental/income"
    command
/><ReferenceCard
    title="METRICS"
    description="Get fundamental metrics for a given company."
    url="fundamental/metrics"
    command
/>
</ul>



---

---
title: MANAGEMENT
description: Learn about key executives for a company and how to retrieve their data
  using the `obb.equity.fundamental.management` function. Get details such as designation,
  name, pay, currency, gender, birth year, and title since.
keywords: 
- key executives
- company executives
- symbol
- data
- designation
- name
- pay
- currency
- gender
- birth year
- title since
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.MANAGEMENT | OpenBB Add-in for Excel Docs" />

Get executive management team data for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.MANAGEMENT(symbol)
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.MANAGEMENT("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |

---



---

---
title: METRICS
description: Learn about key metrics for a given company using the `obb.equity.fundamental.metrics`
  Python function. This API endpoint provides data such as revenue per share, net
  income per share, market capitalization, price-to-earnings ratio, and more. Explore
  the available parameters and returned data to analyze financial performance. Full
  documentation and usage examples available.
keywords: 
- key metrics
- python function
- documentation
- API
- parameters
- returns
- data
- symbol
- period
- limit
- provider
- with_ttm
- revenue per share
- net income per share
- operating cash flow per share
- free cash flow per share
- cash per share
- book value per share
- tangible book value per share
- shareholders equity per share
- interest debt per share
- market capitalization
- enterprise value
- price-to-earnings ratio
- price-to-sales ratio
- price-to-operating cash flow ratio
- price-to-free cash flow ratio
- price-to-book ratio
- price-to-tangible book ratio
- earnings yield
- free cash flow yield
- debt-to-equity ratio
- debt-to-assets ratio
- net debt-to-EBITDA ratio
- current ratio
- interest coverage
- income quality
- dividend yield
- payout ratio
- sales general and administrative expenses-to-revenue ratio
- research and development expenses-to-revenue ratio
- intangibles-to-total assets ratio
- capital expenditures-to-operating cash flow ratio
- capital expenditures-to-revenue ratio
- capital expenditures-to-depreciation ratio
- stock-based compensation-to-revenue ratio
- Graham number
- return on invested capital
- return on tangible assets
- Graham net-net working capital
- working capital
- tangible asset value
- net current asset value
- invested capital
- average receivables
- average payables
- average inventory
- days sales outstanding
- days payables outstanding
- days of inventory on hand
- receivables turnover
- payables turnover
- inventory turnover
- return on equity
- capital expenditures per share
- calendar year
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.METRICS | OpenBB Add-in for Excel Docs" />

Get fundamental metrics for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.METRICS(symbol,[period],[limit],[with_ttm])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.METRICS("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.METRICS("AAPL","annual",100)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |
| period | Text | Time period of the data to return. | False |
| limit | Number | The number of data entries to return. | False |
| with_ttm | Boolean | Include trailing twelve months (TTM) data. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| market_cap | Market capitalization |
| pe_ratio | Price-to-earnings ratio (P/E ratio) |
| price_to_book | Price to book ratio. |
| price_to_tangible_book | Price to tangible book ratio. |
| price_to_revenue | Price to revenue ratio. |
| quick_ratio | Quick ratio. |
| gross_margin | Gross margin, as a normalized percent. |
| ebit_margin | EBIT margin, as a normalized percent. |
| profit_margin | Profit margin, as a normalized percent. |
| eps | Basic earnings per share. |
| eps_growth | EPS growth, as a normalized percent. |
| revenue_growth | Revenue growth, as a normalized percent. |
| ebitda_growth | EBITDA growth, as a normalized percent. |
| ebit_growth | EBIT growth, as a normalized percent. |
| net_income_growth | Net income growth, as a normalized percent. |
| free_cash_flow_to_firm_growth | Free cash flow to firm growth, as a normalized percent. |
| invested_capital_growth | Invested capital growth, as a normalized percent. |
| return_on_assets | Return on assets, as a normalized percent. |
| return_on_equity | Return on equity, as a normalized percent. |
| return_on_invested_capital | Return on invested capital, as a normalized percent. |
| ebitda | Earnings before interest, taxes, depreciation, and amortization. |
| ebit | Earnings before interest and taxes. |
| long_term_debt | Long-term debt. |
| total_debt | Total debt. |
| total_capital | The sum of long-term debt and total shareholder equity. |
| enterprise_value | Enterprise value. |
| free_cash_flow_to_firm | Free cash flow to firm. |
| altman_z_score | Altman Z-score. |
| beta | Beta relative to the broad market (rolling three-year). |
| dividend_yield | Dividend yield, as a normalized percent. |
| earnings_yield | Earnings yield, as a normalized percent. |
| last_price | Last price of the stock. |
| year_high | 52 week high |
| year_low | 52 week low |
| volume_avg | Average daily volume. |
| short_interest | Number of shares reported as sold short. |
| shares_outstanding | Weighted average shares outstanding (TTM). |
| days_to_cover | Days to cover short interest, based on average daily volume. |
</TabItem>
</Tabs>


---

---
title: OVERVIEW
description: Learn about the company overview and get essential information, including
  symbol, price, beta, volume average, market capitalization, last dividend, industry,
  website, CEO, sector, country, and more.
keywords: 
- company overview
- overview symbol
- equity fundamental overview
- parameters
- returns
- data
- symbol
- price
- beta
- vol_avg
- mkt_cap
- last_div
- range
- changes
- company_name
- currency
- cik
- isin
- cusip
- exchange
- exchange_short_name
- industry
- website
- description
- ceo
- sector
- country
- full_time_employees
- phone
- address
- city
- state
- zip
- dcf_diff
- dcf
- image
- ipo_date
- default_image
- is_etf
- is_actively_trading
- is_adr
- is_fund
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.OVERVIEW | OpenBB Add-in for Excel Docs" />

Get company general business and stock data for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.OVERVIEW(symbol)
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.OVERVIEW("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |

---



---

---
title: RATIOS
description: Learn about financial ratios for a given company over time. Explore various
  equity ratios, such as current ratio, quick ratio, and cash conversion cycle. Understand
  key profitability metrics like return on equity and profit margin. Analyze debt
  ratios, inventory turnover, and operating and free cash flows. Evaluate the price
  to earnings ratio and dividend yield.
keywords: 
- financial ratios
- company ratios
- ratios over time
- equity ratios
- current ratio
- quick ratio
- cash conversion cycle
- return on equity
- profit margin
- debt ratio
- inventory turnover
- operating cash flow
- free cash flow
- price to earnings ratio
- dividend yield
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.RATIOS | OpenBB Add-in for Excel Docs" />

Get an extensive set of financial and accounting ratios for a given company over time.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.RATIOS(symbol,[period],[limit],[with_ttm])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.RATIOS("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.RATIOS("AAPL","annual",12)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |
| period | Text | Time period of the data to return. | False |
| limit | Number | The number of data entries to return. | False |
| with_ttm | Boolean | Include trailing twelve months (TTM) data. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| period_ending | The date of the data. |
| fiscal_period | Period of the financial ratios. |
| fiscal_year | Fiscal year. |
| symbol | Symbol representing the entity requested in the data. |
| current_ratio | Current ratio. |
| quick_ratio | Quick ratio. |
| cash_ratio | Cash ratio. |
| days_of_sales_outstanding | Days of sales outstanding. |
| days_of_inventory_outstanding | Days of inventory outstanding. |
| operating_cycle | Operating cycle. |
| days_of_payables_outstanding | Days of payables outstanding. |
| cash_conversion_cycle | Cash conversion cycle. |
| gross_profit_margin | Gross profit margin. |
| operating_profit_margin | Operating profit margin. |
| pretax_profit_margin | Pretax profit margin. |
| net_profit_margin | Net profit margin. |
| effective_tax_rate | Effective tax rate. |
| return_on_assets | Return on assets. |
| return_on_equity | Return on equity. |
| return_on_capital_employed | Return on capital employed. |
| net_income_per_ebt | Net income per EBT. |
| ebt_per_ebit | EBT per EBIT. |
| ebit_per_revenue | EBIT per revenue. |
| debt_ratio | Debt ratio. |
| debt_equity_ratio | Debt equity ratio. |
| long_term_debt_to_capitalization | Long term debt to capitalization. |
| total_debt_to_capitalization | Total debt to capitalization. |
| interest_coverage_ratio | Interest coverage. |
| cash_flow_to_debt | Cash flow to debt ratio. |
| company_equity_multiplier | Company equity multiplier. |
| receivables_turnover | Receivables turnover. |
| payables_turnover | Payables turnover. |
| inventory_turnover | Inventory turnover. |
| fixed_asset_turnover | Fixed asset turnover. |
| asset_turnover | Asset turnover. |
| operating_cash_flow_per_share | Operating cash flow per share. |
| free_cash_flow_per_share | Free cash flow per share. |
| cash_per_share | Cash per share. |
| payout_ratio | Payout ratio. |
| operating_cash_flow_sales_ratio | Operating cash flow sales ratio. |
| free_cash_flow_operating_cash_flow_ratio | Free cash flow operating cash flow ratio. |
| cash_flow_coverage_ratio | Cash flow coverage ratio. |
| short_term_coverage_ratio | Short term coverage ratio. |
| capital_expenditure_coverage_ratio | Capital expenditure coverage ratio. |
| price_book_value_ratio | Price book value ratio. |
| price_to_book_ratio | Price to book ratio. |
| price_to_sales_ratio | Price to sales ratio. |
| price_earnings_ratio | Price earnings ratio. |
| price_to_free_cash_flows_ratio | Price to free cash flows ratio. |
| price_to_operating_cash_flows_ratio | Price to operating cash flows ratio. |
| price_cash_flow_ratio | Price cash flow ratio. |
| price_earnings_to_growth_ratio | Price earnings to growth ratio. |
| price_sales_ratio | Price sales ratio. |
| dividend_paid_and_capex_coverage_ratio | Dividend paid and capex coverage ratio. |
| dividend_payout_ratio | Dividend payout ratio. |
| dividend_yield | Dividend yield. |
| dividend_per_share | Dividend per share. |
| enterprise_value_multiple | Enterprise value multiple. |
| price_fair_value | Price fair value. |
</TabItem>
</Tabs>


---

---
title: REVENUE_PER_GEOGRAPHY
description: Learn about the revenue per geography data with the geographic revenue
  data Python function in this documentation page. Understand the symbol, period,
  structure, and provider parameters. Explore the returns, results, metadata, and
  the data structure including the date, geographic segment, and revenue by region
  (Americas, Europe, Greater China, Japan, Rest of Asia Pacific).
keywords: 
- geographic revenue data
- revenue per geography
- Python function
- documentation page
- symbol parameter
- period parameter
- structure parameter
- provider parameter
- returns
- results
- metadata
- data
- date
- geographic segment
- Americas
- Europe
- Greater China
- Japan
- Rest of Asia Pacific
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.REVENUE_PER_GEOGRAPHY | OpenBB Add-in for Excel Docs" />

Get the revenue geographic breakdown for a given company over time.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.REVENUE_PER_GEOGRAPHY(symbol,[period],[structure])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.REVENUE_PER_GEOGRAPHY("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.REVENUE_PER_GEOGRAPHY("AAPL","annual","flat")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| period | Text | Time period of the data to return. | False |
| structure | Text | Structure of the returned data. | False |

---



---

---
title: REVENUE_PER_SEGMENT
description: Learn how to get revenue data for a specific business line using the
  equity fundamental revenue per segment function.
keywords: 
- Revenue Business Line
- business line revenue data
- equity fundamental revenue per segment
- symbol
- period
- structure
- provider
- results
- RevenueBusinessLine
- chart
- metadata
- data
- date
- business line
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.REVENUE_PER_SEGMENT | OpenBB Add-in for Excel Docs" />

Get the revenue breakdown by business segment for a given company over time.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.REVENUE_PER_SEGMENT(symbol,[period],[structure])
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.REVENUE_PER_SEGMENT("AAPL")
```

```excel
=OBB.EQUITY.FUNDAMENTAL.REVENUE_PER_SEGMENT("AAPL","annual","flat")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| period | Text | Time period of the data to return. | False |
| structure | Text | Structure of the returned data. | False |

---



---

---
title: TRANSCRIPT
description: Learn how to retrieve earnings call transcripts for a given company using
  Python obb.equity.fundamental.transcript. Understand the data parameters, returns,
  symbol, year, quarter, and metadata associated with the transcripts.
keywords: 
- earnings call transcript
- python obb.equity.fundamental.transcript
- data parameters
- returns
- symbols
- year
- quar
- content
- metadata
- provider
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.FUNDAMENTAL.TRANSCRIPT | OpenBB Add-in for Excel Docs" />

Get earnings call transcripts for a given company.

## Syntax

```excel
=OBB.EQUITY.FUNDAMENTAL.TRANSCRIPT(symbol,year)
```

## Examples

```excel
=OBB.EQUITY.FUNDAMENTAL.TRANSCRIPT("AAPL",2020)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| **year** | **Number** | **Year of the earnings call transcript.** | **True** |

---



---

# EQUITY

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Menus
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="ESTIMATES"
    description="consensus, price_target, forward_ebitda"
    url="equity/estimates"
/><ReferenceCard
    title="FUNDAMENTAL"
    description="historical_eps, filings, management, overview, dividends, balance, ratios, revenue_per_segment,..."
    url="equity/fundamental"
/><ReferenceCard
    title="OWNERSHIP"
    description="insider_trading, major_holders, share_statistics, institutional"
    url="equity/ownership"
/><ReferenceCard
    title="PRICE"
    description="performance, historical, quote"
    url="equity/price"
/><ReferenceCard
    title="COMPARE"
    description="peers"
    url="equity/compare"
/>
</ul>

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="PROFILE"
    description="Get general information about a company. This includes company name, industry, sector and price..."
    url="equity/profile"
    command
/>
</ul>



---

# EQUITY.OWNERSHIP

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="INSIDER_TRADING"
    description="Get data about trading by a company's management team and board of directors."
    url="ownership/insider_trading"
    command
/><ReferenceCard
    title="MAJOR_HOLDERS"
    description="Get data about major holders for a given company over time."
    url="ownership/major_holders"
    command
/><ReferenceCard
    title="SHARE_STATISTICS"
    description="Get data about share float for a given company."
    url="ownership/share_statistics"
    command
/><ReferenceCard
    title="INSTITUTIONAL"
    description="Get data about institutional ownership for a given company over time."
    url="ownership/institutional"
    command
/>
</ul>



---

---
title: INSIDER_TRADING
description: Learn how to use the stock insider trading Python function to get information
  about insider trading, including parameter details, return types, and data descriptions.
keywords: 
- stock insider trading
- equity ownership
- Python function
- parameter details
- data description
- symbol
- transaction type
- limit
- provider
- returns
- results
- chart
- metadata
- data
- filing date
- transaction date
- reporting CIK
- securities owned
- company CIK
- reporting name
- type of owner
- acquisition or disposition
- form type
- securities transacted
- price
- security name
- link
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.OWNERSHIP.INSIDER_TRADING | OpenBB Add-in for Excel Docs" />

Get data about trading by a company's management team and board of directors.

## Syntax

```excel
=OBB.EQUITY.OWNERSHIP.INSIDER_TRADING(symbol,[limit],[transactionType])
```

## Examples

```excel
=OBB.EQUITY.OWNERSHIP.INSIDER_TRADING("AAPL")
```

```excel
=OBB.EQUITY.OWNERSHIP.INSIDER_TRADING("AAPL",500)
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| limit | Number | The number of data entries to return. | False |
| transactionType | Text | Type of the transaction. Options: award, conversion, return, expire_short, in_kind, gift, expire_long, discretionary, other, small, exempt, otm, purchase, sale, tender, will, itm, trust. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| company_cik | CIK number of the company. |
| filing_date | Filing date of the trade. |
| transaction_date | Date of the transaction. |
| owner_cik | Reporting individual's CIK. |
| owner_name | Name of the reporting individual. |
| owner_title | The title held by the reporting individual. |
| transaction_type | Type of transaction being reported. |
| acquisition_or_disposition | Acquisition or disposition of the shares. |
| security_type | The type of security transacted. |
| securities_owned | Number of securities owned by the reporting individual. |
| securities_transacted | Number of securities transacted by the reporting individual. |
| transaction_price | The price of the transaction. |
| filing_url | URL of the filing. |
| company_name | Name of the company. |
| conversion_exercise_price | Conversion/Exercise price of the shares. |
| deemed_execution_date | Deemed execution date of the trade. |
| exercise_date | Exercise date of the trade. |
| expiration_date | Expiration date of the derivative. |
| underlying_security_title | Name of the underlying non-derivative security related to this derivative transaction. |
| underlying_shares | Number of underlying shares related to this derivative transaction. |
| nature_of_ownership | Nature of ownership of the insider trading. |
| director | Whether the owner is a director. |
| officer | Whether the owner is an officer. |
| ten_percent_owner | Whether the owner is a 10% owner. |
| other_relation | Whether the owner is having another relation. |
| derivative_transaction | Whether the owner is having a derivative transaction. |
| report_line_number | Report line number of the insider trading. |
</TabItem>
</Tabs>


---

---
title: INSTITUTIONAL
description: Learn about institutional ownership data, and how to use the OBB.equity.ownership.institutional
  function in Python to access the data. Explore the symbol, include_current_quarter,
  date, and provider parameters. Understand the meaning and usage of the results,
  provider, warnings, chart, and metadata properties. Additionally, get detailed descriptions
  of the various data fields such as symbol, cik, date, investors_holding, number_of_13f_shares,
  total_invested, ownership_percent, new_positions, closed_positions, total_calls,
  total_puts, and put_call_ratio.
keywords: 
- institutional ownership data
- python OBB.equity.ownership.institutional function
- symbol parameter
- include_current_quarter parameter
- date parameter
- provider parameter
- results property
- provider property
- warnings property
- chart property
- metadata property
- data description
- symbol data
- cik data
- date data
- investors_holding data
- last_investors_holding data
- investors_holding_change data
- number_of_13f_shares data
- last_number_of_13f_shares data
- number_of_13f_shares_change data
- total_invested data
- last_total_invested data
- total_invested_change data
- ownership_percent data
- last_ownership_percent data
- ownership_percent_change data
- new_positions data
- last_new_positions data
- new_positions_change data
- increased_positions data
- last_increased_positions data
- increased_positions_change data
- closed_positions data
- last_closed_positions data
- closed_positions_change data
- reduced_positions data
- last_reduced_positions data
- reduced_positions_change data
- total_calls data
- last_total_calls data
- total_calls_change data
- total_puts data
- last_total_puts data
- total_puts_change data
- put_call_ratio data
- last_put_call_ratio data
- put_call_ratio_change data
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.OWNERSHIP.INSTITUTIONAL | OpenBB Add-in for Excel Docs" />

Get data about institutional ownership for a given company over time.

## Syntax

```excel
=OBB.EQUITY.OWNERSHIP.INSTITUTIONAL(symbol,[include_current_quarter],[date])
```

## Examples

```excel
=OBB.EQUITY.OWNERSHIP.INSTITUTIONAL("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| include_current_quarter | Boolean | Include current quarter data. | False |
| date | Text | A specific date to get data for. | False |

---



---

---
title: MAJOR_HOLDERS
description: Get detailed information about equity ownership and stock ownership,
  including investment data, security data, market value data, shares data, performance
  data, and ownership data. Use the equity ownership API to retrieve equity ownership
  details, and explore various stock ownership parameters and returns. Access company
  ownership data, investor data, filing data, industry data, and more.
keywords: 
- equity ownership
- company ownership
- equity ownership API
- equity ownership data
- equity ownership parameters
- equity ownership returns
- equity ownership data fields
- stock ownership
- stock ownership data
- stock ownership API
- stock ownership parameters
- stock ownership returns
- stock ownership data fields
- investment data
- security data
- market value data
- shares data
- performance data
- ownership data
- equity ownership details
- stock ownership details
- equity ownership information
- stock ownership information
- company ownership data
- investor data
- filing data
- industry data
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.OWNERSHIP.MAJOR_HOLDERS | OpenBB Add-in for Excel Docs" />

Get data about major holders for a given company over time.

## Syntax

```excel
=OBB.EQUITY.OWNERSHIP.MAJOR_HOLDERS(symbol,[date],[page])
```

## Examples

```excel
=OBB.EQUITY.OWNERSHIP.MAJOR_HOLDERS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |
| date | Text | A specific date to get data for. | False |
| page | Number | Page number of the data to fetch. | False |

---



---

---
title: SHARE_STATISTICS
description: Learn how to retrieve and analyze share statistics for a given company
  using the obb.equity.ownership.share_statistics API endpoint. This documentation
  provides details on the parameters, return values, and data structure.
keywords: 
- share statistics
- company statistics
- equity ownership
- symbol
- provider
- data
- free float
- float shares
- outstanding shares
- source
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.OWNERSHIP.SHARE_STATISTICS | OpenBB Add-in for Excel Docs" />

Get data about share float for a given company.

## Syntax

```excel
=OBB.EQUITY.OWNERSHIP.SHARE_STATISTICS(symbol)
```

## Examples

```excel
=OBB.EQUITY.OWNERSHIP.SHARE_STATISTICS("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for.** | **True** |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| date | The date of the data. |
| free_float | Percentage of unrestricted shares of a publicly-traded company. |
| float_shares | Number of shares available for trading by the general public. |
| outstanding_shares | Total number of shares of a publicly-traded company. |
| source | Source of the received data. |
| adjweightedavebasicdilutedsharesos | Total number of shares of a publicly-traded company, adjusted for splits. |
| public_float | Aggregate market value of the shares of a publicly-traded company. |
</TabItem>
</Tabs>


---

---
title: HISTORICAL
description: Learn how to use the `obb.equity.price.historical` function to load historical
  price data for a specific stock ticker. Find out about the available parameters
  and providers, as well as the structure of the returned data and the columns it
  contains.
keywords: 
- equity historical price
- load stock data
- specific ticker
- python function
- equity data parameters
- alpha vantage provider
- fmp provider
- intrinio provider
- polygon provider
- yfinance provider
- equity historical data returns
- equity data columns
- alpha vantage data columns
- cboe data columns
- fmp data columns
- intrinio data columns
- polygon data columns
- yfinance data columns
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.PRICE.HISTORICAL | OpenBB Add-in for Excel Docs" />

Get historical price data for a given stock. This includes open, high, low, close, and volume.

## Syntax

```excel
=OBB.EQUITY.PRICE.HISTORICAL(symbol,[interval],[start_date],[end_date])
```

## Examples

```excel
=OBB.EQUITY.PRICE.HISTORICAL("AAPL")
```

```excel
=OBB.EQUITY.PRICE.HISTORICAL("AAPL","1d")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |
| interval | Text | Time interval of the data to return. | False |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| date | The date of the data. |
| open | The open price. |
| high | The high price. |
| low | The low price. |
| close | The close price. |
| volume | The trading volume. |
| vwap | Volume Weighted Average Price over the period. |
| symbol | Symbol of the equity. |
| adj_close | The adjusted close price. |
| unadjusted_volume | Unadjusted volume of the symbol. |
| change | Change in the price from the previous close. |
| changeOverTime | Change in the price from the previous close, as a normalized percent. |
</TabItem>
</Tabs>


---

# EQUITY.PRICE

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="PERFORMANCE"
    description="Get price performance data for a given stock. This includes price changes for different time..."
    url="price/performance"
    command
/><ReferenceCard
    title="HISTORICAL"
    description="Get historical price data for a given stock. This includes open, high, low, close, and volume."
    url="price/historical"
    command
/><ReferenceCard
    title="QUOTE"
    description="Get the latest quote for a given stock. Quote includes price, volume, and other data."
    url="price/quote"
    command
/>
</ul>



---

---
title: PERFORMANCE
description: Learn how to calculate the price performance return for a symbol over
  different time periods using the OBB.equity.price.performance function. Retrieve
  data such as one-day return, week to date return, one-week return, month to date
  return, and more. Understand the parameters, returns, and data structure of the
  function.
keywords: 
- price performance
- return
- symbol
- data
- provider
- chart
- metadata
- one-day return
- week to date return
- one-week return
- month to date return
- one-month return
- quarter to date return
- three-month return
- six-month return
- year to date return
- one-year return
- three-year return
- five-year return
- ten-year return
- max return
- time series
- ticker symbol
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.PRICE.PERFORMANCE | OpenBB Add-in for Excel Docs" />

Get price performance data for a given stock. This includes price changes for different time periods.

## Syntax

```excel
=OBB.EQUITY.PRICE.PERFORMANCE(symbol)
```

## Examples

```excel
=OBB.EQUITY.PRICE.PERFORMANCE("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |

---



---

---
title: QUOTE
description: Learn how to load stock data for a specific ticker with the Equity Quote
  function. Discover the various parameters and data returned, including day low,
  day high, date, symbol, name, price, volume, and more.
keywords: 
- equity quote
- stock data
- ticker
- parameters
- symbol
- provider
- returns
- data
- day low
- day high
- date
- fmp
- intrinio
- source
- results
- warnings
- chart
- metadata
- price
- changes percentage
- change
- year high
- year low
- market cap
- price avg50
- price avg200
- volume
- avg volume
- exchange
- open
- previous close
- eps
- pe
- earnings announcement
- shares outstanding
- last price
- last time
- last size
- bid price
- bid size
- ask price
- ask size
- close price
- high price
- low price
- exchange volume
- market volume
- updated on
- listing venue
- sales conditions
- quote conditions
- market center code
- is darkpool
- messages
- security
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.PRICE.QUOTE | OpenBB Add-in for Excel Docs" />

Get the latest quote for a given stock. Quote includes price, volume, and other data.

## Syntax

```excel
=OBB.EQUITY.PRICE.QUOTE(symbol)
```

## Examples

```excel
=OBB.EQUITY.PRICE.QUOTE("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| asset_type | Type of asset - i.e, stock, ETF, etc. |
| name | Name of the company or asset. |
| exchange | The name or symbol of the venue where the data is from. |
| bid | Price of the top bid order. |
| bid_size | This represents the number of round lot orders at the given price. The normal round lot size is 100 shares. A size of 2 means there are 200 shares available at the given price. |
| bid_exchange | The specific trading venue where the purchase order was placed. |
| ask | Price of the top ask order. |
| ask_size | This represents the number of round lot orders at the given price. The normal round lot size is 100 shares. A size of 2 means there are 200 shares available at the given price. |
| ask_exchange | The specific trading venue where the sale order was placed. |
| quote_conditions | Conditions or condition codes applicable to the quote. |
| quote_indicators | Indicators or indicator codes applicable to the participant quote related to the price bands for the issue, or the affect the quote has on the NBBO. |
| sales_conditions | Conditions or condition codes applicable to the sale. |
| sequence_number | The sequence number represents the sequence in which message events happened. These are increasing and unique per ticker symbol, but will not always be sequential (e.g., 1, 2, 6, 9, 10, 11). |
| market_center | The ID of the UTP participant that originated the message. |
| participant_timestamp | Timestamp for when the quote was generated by the exchange. |
| trf_timestamp | Timestamp for when the TRF (Trade Reporting Facility) received the message. |
| sip_timestamp | Timestamp for when the SIP (Security Information Processor) received the message from the exchange. |
| last_price | Price of the last trade. |
| last_tick | Whether the last sale was an up or down tick. |
| last_size | Size of the last trade. |
| last_timestamp | Date and Time when the last price was recorded. |
| open | The open price. |
| high | The high price. |
| low | The low price. |
| close | The close price. |
| volume | The trading volume. |
| exchange_volume | Volume of shares exchanged during the trading day on the specific exchange. |
| prev_close | The previous close price. |
| change | Change in price from previous close. |
| change_percent | Change in price as a normalized percentage. |
| year_high | The one year high (52W High). |
| year_low | The one year low (52W Low). |
| is_darkpool | Whether or not the current trade is from a darkpool. |
| source | Source of the Intrinio data. |
| updated_on | Date and Time when the data was last updated. |
| security | Security details related to the quote. |
</TabItem>
</Tabs>


---

---
title: PROFILE
description: Get general price and performance metrics of a stock with the Equity
  Information API. Retrieve data such as the symbol, name, price, open price, high
  price, low price, close price, change in price, change percent, previous close,
  type, exchange ID, bid, ask, volume, implied volatility, realized volatility, last
  trade timestamp, annual high, and annual low.
keywords: 
- equity info
- price and performance metrics
- stock data
- equity profile
- symbol
- provider
- data
- parameters
- returns
- cboe
- EquityInfo
- warnings
- chart
- metadata
- Data
- name
- price
- open price
- high price
- low price
- close price
- change percent
- previous close
- type
- exchange ID
- bid
- ask
- volume
- implied volatility
- realized volatility
- last trade timestamp
- annual high
- annual low
- iv30
- hv30
- iv60
- hv60
- iv90
- hv90
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="EQUITY.PROFILE | OpenBB Add-in for Excel Docs" />

Get general information about a company. This includes company name, industry, sector and price data.

## Syntax

```excel
=OBB.EQUITY.PROFILE(symbol)
```

## Examples

```excel
=OBB.EQUITY.PROFILE("AAPL")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| symbol | Symbol representing the entity requested in the data. |
| name | Common name of the company. |
| cik | Central Index Key (CIK) for the requested entity. |
| cusip | CUSIP identifier for the company. |
| isin | International Securities Identification Number. |
| lei | Legal Entity Identifier assigned to the company. |
| legal_name | Official legal name of the company. |
| stock_exchange | Stock exchange where the company is traded. |
| sic | Standard Industrial Classification code for the company. |
| short_description | Short description of the company. |
| long_description | Long description of the company. |
| ceo | Chief Executive Officer of the company. |
| company_url | URL of the company's website. |
| business_address | Address of the company's headquarters. |
| mailing_address | Mailing address of the company. |
| business_phone_no | Phone number of the company's headquarters. |
| hq_address_1 | Address of the company's headquarters. |
| hq_address_2 | Address of the company's headquarters. |
| hq_address_city | City of the company's headquarters. |
| hq_address_postal_code | Zip code of the company's headquarters. |
| hq_state | State of the company's headquarters. |
| hq_country | Country of the company's headquarters. |
| inc_state | State in which the company is incorporated. |
| inc_country | Country in which the company is incorporated. |
| employees | Number of employees working for the company. |
| entity_legal_form | Legal form of the company. |
| entity_status | Status of the company. |
| latest_filing_date | Date of the company's latest filing. |
| irs_number | IRS number assigned to the company. |
| sector | Sector in which the company operates. |
| industry_category | Category of industry in which the company operates. |
| industry_group | Group of industry in which the company operates. |
| template | Template used to standardize the company's financial statements. |
| standardized_active | Whether the company is active or not. |
| first_fundamental_date | Date of the company's first fundamental. |
| last_fundamental_date | Date of the company's last fundamental. |
| first_stock_price_date | Date of the company's first stock price. |
| last_stock_price_date | Date of the company's last stock price. |
| id | Intrinio ID for the company. |
| thea_enabled | Whether the company has been enabled for Thea. |
</TabItem>
</Tabs>


---

# FIXEDINCOME.GOVERNMENT

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="YIELD_CURVE"
    description="Get yield curve data by country and date."
    url="government/yield_curve"
    command
/>
</ul>



---

---
title: YIELD_CURVE
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="FIXEDINCOME.GOVERNMENT.YIELD_CURVE | OpenBB Add-in for Excel Docs" />

Get yield curve data by country and date.

## Syntax

```excel
=OBB.FIXEDINCOME.GOVERNMENT.YIELD_CURVE([date],[use_cache],[country])
```

## Examples

```excel
=OBB.FIXEDINCOME.GOVERNMENT.YIELD_CURVE()
```

```excel
=OBB.FIXEDINCOME.GOVERNMENT.YIELD_CURVE("2023-05-01,2024-05-01")
```

```excel
=OBB.FIXEDINCOME.GOVERNMENT.YIELD_CURVE("2023-05-01",,"united_kingdom")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| date | Text | A specific date to get data for. By default is the current data. Multiple comma separated items allowed. | False |
| use_cache | Boolean | If true, cache the request for four hours. | False |
| country | Text | The country to get data. New Zealand, Mexico, Singapore, and Thailand have only monthly data. The nearest date to the requested one will be used. Options: australia, canada, china, hong_kong, india, japan, mexico, new_zealand, russia, saudi_arabia, singapore, south_africa, south_korea, taiwan, thailand, united_kingdom, united_states. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='econdb'>

| Name | Description |
| ---- | ----------- |
| date | The date of the data. |
| maturity | Maturity length of the security. |
| rate | The yield as a normalized percent (0.05 is 5%) |
</TabItem>
</Tabs>


---

# FIXEDINCOME

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Menus
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="GOVERNMENT"
    description="yield_curve"
    url="fixedincome/government"
/>
</ul>



---

---
title: GET
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="GET | OpenBB Add-in for Excel Docs" />

Slice data from a range.

## Syntax

```excel
=OBB.GET(array,[rows],[columns])
```

## Examples

```excel
=OBB.GET({"a","b","c";"d","e","f"})
```

```excel
=OBB.GET({"a","b","c";"d","e","f"},"d","c")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **array** | **Any** | **Array to slice.** | **True** |
| rows | Any | Range of row labels or indices. | False |
| columns | Any | Range of column labels or indices. | False |

---



---

# INDEX

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="MARKET"
    description="Get Historical Market Indices."
    url="index/market"
    command
/>
</ul>



---

---
title: MARKET
description: Learn how to retrieve historical market indices data using various data
  providers and query parameters. Understand the available parameters and return values,
  such as symbol, start date, end date, provider, interval, timeseries, timespan,
  sort order, limit, adjusted, multiplier, chart, metadata, date, open price, high
  price, low price, close price, volume, calls volume, puts volume, options volume,
  adjusted close price, unadjusted volume, change, change percent, label, change over
  time, and transactions.
keywords: 
- Historical Market Indices
- market data
- symbol
- start date
- end date
- data provider
- query
- interval
- timeseries
- timespan
- sort order
- limit
- adjusted
- multiplier
- chart
- metadata
- date
- open price
- high price
- low price
- close price
- volume
- calls volume
- puts volume
- options volume
- adjusted close price
- unadjusted volume
- change
- change percent
- label
- change over time
- transactions
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="INDEX.MARKET | OpenBB Add-in for Excel Docs" />

Get Historical Market Indices.

## Syntax

```excel
=OBB.INDEX.MARKET(symbol,[start_date],[end_date],[interval])
```

## Examples

```excel
=OBB.INDEX.MARKET("^IBEX")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **symbol** | **Text** | **Symbol to get data for. Multiple comma separated items allowed.** | **True** |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |
| interval | Text | Time interval of the data to return. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='fmp'>

| Name | Description |
| ---- | ----------- |
| date | The date of the data. |
| open | The open price. |
| high | The high price. |
| low | The low price. |
| close | The close price. |
| volume | The trading volume. |
| n | Number of transactions for the symbol in the time period. |
</TabItem>
</Tabs>


---

# Reference

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="CURRENCY"
    description="price, snapshots, historical"
    url="reference/currency"
/><ReferenceCard
    title="DERIVATIVES"
    description="options, chains"
    url="reference/derivatives"
/><ReferenceCard
    title="ECONOMY"
    description="country_profile, indicators"
    url="reference/economy"
/><ReferenceCard
    title="EQUITY"
    description="estimates, fundamental, ownership, price, compare, profile, consensus, price_target,..."
    url="reference/equity"
/><ReferenceCard
    title="FIXEDINCOME"
    description="government, yield_curve"
    url="reference/fixedincome"
/><ReferenceCard
    title="INDEX"
    description="market"
    url="reference/index"
/><ReferenceCard
    title="NEWS"
    description="company, world"
    url="reference/news"
/><ReferenceCard
    title="GET"
    description=""
    url="reference/get"
/><ReferenceCard
    title="WIDGET"
    description=""
    url="reference/widget"
/>
</ul>



---

---
title: COMPANY
description: Get company news for one or more companies using various providers. This
  API allows you to retrieve news articles along with metadata such as date, title,
  image, text, and URL. The available providers include Benzinga, FMP, Intrinio, Polygon,
  Ultima, and Yfinance.
keywords: 
- company news
- news for companies
- news API
- API parameters
- benzinga provider
- fmp provider
- polygon provider
- intrinio provider
- ultima provider
- yfinance provider
- data entries
- metadata
- company news results
- company news warnings
- company news chart
- data date
- data title
- data image
- data text
- data URL
- benzinga data
- fmp data
- intrinio data
- polygon data
- ultima data
- yfinance data
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="NEWS.COMPANY | OpenBB Add-in for Excel Docs" />

Company News. Get news for one or more companies.

## Syntax

```excel
=OBB.NEWS.COMPANY([symbol],[start_date],[end_date],[limit],[date],[display],[updated_since],[published_since],[order],[isin],[cusip],[channels],[topics],[authors],[content_types])
```

## Examples

```excel
=OBB.NEWS.COMPANY()
```

```excel
=OBB.NEWS.COMPANY(,,,100)
```

```excel
=OBB.NEWS.COMPANY("AAPL","2024-02-01","2024-02-07")
```

```excel
=OBB.NEWS.COMPANY("AAPL",,,,,"headline")
```

```excel
=OBB.NEWS.COMPANY("aapl,tsla")
```

```excel
=OBB.NEWS.COMPANY("NVDA",,,,,,,,,"US0378331005")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| symbol | Text | Symbol to get data for. Multiple comma separated items allowed. | False |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |
| limit | Number | The number of data entries to return. | False |
| date | Text | A specific date to get data for. | False |
| display | Text | Specify headline only (headline), headline + teaser (abstract), or headline + full body (full). Options: headline, abstract, full. | False |
| updated_since | Number | Number of seconds since the news was updated. | False |
| published_since | Number | Number of seconds since the news was published. | False |
| order | Text | Order to sort the news by. Options: asc, desc. | False |
| isin | Text | The company's ISIN. | False |
| cusip | Text | The company's CUSIP. | False |
| channels | Text | Channels of the news to retrieve. | False |
| topics | Text | Topics of the news to retrieve. | False |
| authors | Text | Authors of the news to retrieve. | False |
| content_types | Text | Content types of the news to retrieve. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='benzinga'>

| Name | Description |
| ---- | ----------- |
| date | The date of the data. Here it is the published date of the article. |
| title | Title of the article. |
| text | Text/body of the article. |
| images | Images associated with the article. |
| url | URL to the article. |
| symbols | Symbols associated with the article. |
| source | The source of the news article. |
| summary | The summary of the news article. |
| topics | The topics related to the news article. |
| word_count | The word count of the news article. |
| business_relevance |  	How strongly correlated the news article is to the business |
| sentiment | The sentiment of the news article - i.e, negative, positive. |
| sentiment_confidence | The confidence score of the sentiment rating. |
| language | The language of the news article. |
| spam | Whether the news article is spam. |
| copyright | The copyright notice of the news article. |
| id | Article ID. |
| security | The Intrinio Security object. Contains the security details related to the news article. |
</TabItem>
</Tabs>


---

# NEWS

import ReferenceCard from '@site/src/components/General/NewReferenceCard';

### Commands
<ul className="grid grid-cols-1 gap-4 -ml-6">
<ReferenceCard
    title="COMPANY"
    description="Company News. Get news for one or more companies."
    url="news/company"
    command
/><ReferenceCard
    title="WORLD"
    description="World News. Global news data."
    url="news/world"
    command
/>
</ul>



---

---
title: WORLD
description: Learn how to retrieve global news data using the obb.news.world API.
  This documentation covers the parameters, returns, and data structures used in the
  API, including details on how to set the limit and provider, and how to filter the
  news by date, author, channels, and more. Explore the different data fields such
  as date, title, images, text, and URL, and understand the structure of the returned
  results, warnings, chart, and metadata.
keywords: 
- Global News
- global news data
- obb.news.world
- parameters
- limit
- provider
- default
- benzinga
- biztoc
- fmp
- intrinio
- display
- date
- start_date
- end_date
- updated_since
- published_since
- sort
- order
- isin
- cusip
- channels
- topics
- authors
- content_types
- returns
- results
- provider
- warnings
- chart
- metadata
- data
- date
- title
- images
- text
- url
- id
- author
- teaser
- stocks
- tags
- updated
- favicon
- score
- site
- company
- datetime
- list
- dict
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="NEWS.WORLD | OpenBB Add-in for Excel Docs" />

World News. Global news data.

## Syntax

```excel
=OBB.NEWS.WORLD([limit],[start_date],[end_date],[date],[display],[updated_since],[published_since],[order],[isin],[cusip],[channels],[topics],[authors],[content_types])
```

## Examples

```excel
=OBB.NEWS.WORLD()
```

```excel
=OBB.NEWS.WORLD(100)
```

```excel
=OBB.NEWS.WORLD(,"2024-02-01","2024-02-07")
```

```excel
=OBB.NEWS.WORLD(,,,,"headline")
```

```excel
=OBB.NEWS.WORLD(,,,,,,,,,,,"finance")
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| limit | Number | The number of data entries to return. The number of articles to return. | False |
| start_date | Text | Start date of the data, in YYYY-MM-DD format. | False |
| end_date | Text | End date of the data, in YYYY-MM-DD format. | False |
| date | Text | A specific date to get data for. | False |
| display | Text | Specify headline only (headline), headline + teaser (abstract), or headline + full body (full). Options: headline, abstract, full. | False |
| updated_since | Number | Number of seconds since the news was updated. | False |
| published_since | Number | Number of seconds since the news was published. | False |
| order | Text | Order to sort the news by. Options: asc, desc. | False |
| isin | Text | The ISIN of the news to retrieve. | False |
| cusip | Text | The CUSIP of the news to retrieve. | False |
| channels | Text | Channels of the news to retrieve. | False |
| topics | Text | Topics of the news to retrieve. | False |
| authors | Text | Authors of the news to retrieve. | False |
| content_types | Text | Content types of the news to retrieve. | False |

---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

## Data

<Tabs>
<TabItem value='benzinga'>

| Name | Description |
| ---- | ----------- |
| date | The date of the data. The published date of the article. |
| title | Title of the article. |
| images | Images associated with the article. |
| text | Text/body of the article. |
| url | URL to the article. |
| source | The source of the news article. |
| summary | The summary of the news article. |
| topics | The topics related to the news article. |
| word_count | The word count of the news article. |
| business_relevance |  	How strongly correlated the news article is to the business |
| sentiment | The sentiment of the news article - i.e, negative, positive. |
| sentiment_confidence | The confidence score of the sentiment rating. |
| language | The language of the news article. |
| spam | Whether the news article is spam. |
| copyright | The copyright notice of the news article. |
| id | Article ID. |
| company | The Intrinio Company object. Contains details company reference data. |
| security | The Intrinio Security object. Contains the security details related to the news article. |
</TabItem>
</Tabs>


---

---
title: WIDGET
---

<!-- markdownlint-disable MD033 -->
import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="WIDGET | OpenBB Add-in for Excel Docs" />

Get the data from a widget living in a backend.

## Syntax

```excel
=OBB.WIDGET(backend,widget,[parameters])
```

---

## Parameters

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| **backend** | **Text** | **Name of the backend.** | **True** |
| **widget** | **Text** | **Name or ID of the widget to get data for.** | **True** |
| parameters | Any | Widget parameters as (n rows by 2 columns) range selection or array constant (e.g. {"key1","value1"}; {"key2","value2"}). | False |

---



---

---
title: Templates
sidebar_position: 4
description: OpenBB Add-In for Excel offered by OpenBB. These templates are designed to help you perform a variety of tasks, from equity analysis to economic analysis. They can be used as-is or customized to suit your needs.
keywords:
- Microsoft Excel
- Add-in
- Basics
- Examples
- Template
---

import HeadTitle from '@site/src/components/General/HeadTitle.tsx';

<HeadTitle title="Templates | OpenBB Add-in for Excel Docs" />

OpenBB Add-In for Excel offered by OpenBB. These templates are designed to help you perform a variety of tasks, from equity analysis to economic analysis. They can be used as-is or customized to suit your needs.

<div style={{display: 'flex', justifyContent: 'center'}}>
    <iframe
        style={{width: '800px', height: '450px', display: 'block', margin: '0 auto'}}
        src="https://www.youtube.com/embed/5ym4tHhBvck?si=JhlCKRzRDTTCWueU"
        title="YouTube video player"
        frameBorder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    />
</div>

## Excel templates

You can find these templates available within the OpenBB Workspace on the "Templates" section on the sidebar.

<img className="pro-border-gradient" width="800" alt="charting" src="https://github.com/OpenBB-finance/OpenBBTerminal/assets/25267873/cd3cc552-8102-43d1-9af6-e9775b257c23" />

Once clicking on "Download Template" (e.g. for "Equity Analysis"), users will be able to access an Excel spreadsheet like the one shown below.

If you have your OpenBB Add-in for Excel installed (instructions [here](/excel/getting-started/installation)) you will be able to change a ticker on the spreadsheet and all the values are automatically updated.

<img className="pro-border-gradient" width="800" alt="charting" src="https://github.com/OpenBB-finance/OpenBBTerminal/assets/25267873/80253a0f-7673-4f26-a713-9807d518d4e3" />

Below you can find what templates are available.

### Equity analysis

This workbook offers access to data from the Equity dashboard in OpenBB Workspace, presenting key equity information across tabs, including company details, financial metrics, comparative analysis, ownership insights, event calendars, and analyst estimates.

![Equity analysis](https://openbb-assets.s3.amazonaws.com/docs/excel/EquityAnalysis.png)

<div className="flex-grow flex items-center justify-center my-5">
    <a href="https://openbb-assets.s3.amazonaws.com/docs/excel/EquityAnalysis.xlsx">
        <button
            className="bg-grey-200 hover:bg-grey-400 dark:bg-[#303038] dark:hover:bg-grey-600 text-grey-900 dark:text-grey-200 text-sm font-medium py-2 px-4 rounded"
        >
            Download Equity Analysis Template
        </button>
    </a>
</div>


### Equity snapshot

This workbook compares different stock peers based on their stock performance and fundamental data.

![Equity snapshot](https://openbb-assets.s3.amazonaws.com/docs/excel/EquitySnapshot.png)

<div className="flex-grow flex items-center justify-center my-5">
    <a href="https://openbb-assets.s3.amazonaws.com/docs/excel/EquitySnapshot.xlsx">
        <button
            className="bg-grey-200 hover:bg-grey-400 dark:bg-[#303038] dark:hover:bg-grey-600 text-grey-900 dark:text-grey-200 text-sm font-medium py-2 px-4 rounded"
        >
            Download Equity Snapshot Template
        </button>
    </a>
</div>
